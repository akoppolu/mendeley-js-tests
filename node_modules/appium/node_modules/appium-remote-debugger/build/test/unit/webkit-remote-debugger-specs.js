require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _indexJs = require('../../index.js');

var _helpersWebkitRemoteDebuggerServer = require('../helpers/webkit-remote-debugger-server');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('WebKitRemoteDebugger', function () {
  var wrd = new _indexJs.WebKitRemoteDebugger({ host: 'localhost', port: 1337 });

  describe('websocket methods', function () {
    describe('#connect', function () {
      var server = new _helpersWebkitRemoteDebuggerServer.WebKitRemoteDebuggerServer();
      it('should instantiate an rpc client', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(server.start(true));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(wrd.connect(1));

            case 4:
              wrd.rpcClient.should.exist;
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap(server.stop());

            case 7:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('#disconnect', function () {
      var server = new _helpersWebkitRemoteDebuggerServer.WebKitRemoteDebuggerServer();
      it('should call close on websocket', function callee$3$0() {
        var spy;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(server.start(true));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(wrd.connect());

            case 4:

              wrd.rpcClient.should.exist;
              spy = _sinon2['default'].spy(wrd.rpcClient, 'disconnect');

              wrd.rpcClient.socket.disconnect = spy;
              wrd.disconnect();
              spy.calledOnce.should.be['true'];

              context$4$0.next = 11;
              return _regeneratorRuntime.awrap(server.stop());

            case 11:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
  });
  describe('http methods', function () {
    var server = new _helpersWebkitRemoteDebuggerServer.WebKitRemoteDebuggerServer();
    beforeEach(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(server.start());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    afterEach(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(server.stop());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    describe('#pageArrayFromJson', function () {
      var data = [{
        webSocketDebuggerUrl: 'webkit/url/app/42',
        title: 'first page title',
        url: '/path/to/page.html'
      }, {
        webSocketDebuggerUrl: 'webkit/url/app/43',
        title: 'second page title',
        url: '/path/to/other_page.html'
      }];
      beforeEach(function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              server.respondWith(data);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });

      it('should get a page array', function callee$3$0() {
        var r;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(wrd.pageArrayFromJson());

            case 2:
              r = context$4$0.sent;

              r.should.be['instanceof'](Array);
              r.should.have.length(2);

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should correctly map webSocketDebuggerUrl to id', function callee$3$0() {
        var r;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(wrd.pageArrayFromJson());

            case 2:
              r = context$4$0.sent;

              _lodash2['default'].map(r, 'id').should.eql(['42', '43']);

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('#getJsonFromUrl', function () {
      it('should get an object', function callee$3$0() {
        var r;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              server.respondWith({ id: 42, type: 'fake' });

              context$4$0.next = 3;
              return _regeneratorRuntime.awrap(wrd.getJsonFromUrl('localhost', 1337, '/json'));

            case 3:
              r = context$4$0.sent;

              r.should.be.an['instanceof'](Object);
              r.id.should.equal(42);

            case 6:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
  });

  describe('utility methods', function () {
    describe('#isConnected', function () {
      it('should return false if there is no rpc client', function () {
        wrd.isConnected().should.be['false'];
      });
      it('should return false if there is an rpc client that is not connected', function () {
        var stub = _sinon2['default'].stub();
        stub.returns(false);
        wrd.rpcClient = {
          isConnected: stub
        };
        wrd.isConnected().should.be['false'];
      });
      it('should return true if there is an rpc client that is connected', function () {
        var stub = _sinon2['default'].stub();
        stub.returns(true);
        wrd.rpcClient = {
          isConnected: stub
        };
        wrd.isConnected().should.be['true'];
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvdW5pdC93ZWJraXQtcmVtb3RlLWRlYnVnZ2VyLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7dUJBRXFDLGdCQUFnQjs7aURBQ1YsMENBQTBDOztvQkFDcEUsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7c0JBQy9CLFFBQVE7Ozs7cUJBQ0osT0FBTzs7OztBQUV6QixrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBR3pCLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxZQUFNO0FBQ3JDLE1BQUksR0FBRyxHQUFHLGtDQUF5QixFQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBQyxDQUFDLENBQUM7O0FBRXBFLFVBQVEsQ0FBQyxtQkFBbUIsRUFBRSxZQUFNO0FBQ2xDLFlBQVEsQ0FBQyxVQUFVLEVBQUUsWUFBTTtBQUN6QixVQUFJLE1BQU0sR0FBRyxtRUFBZ0MsQ0FBQztBQUM5QyxRQUFFLENBQUMsa0NBQWtDLEVBQUU7Ozs7OytDQUMvQixNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQzs7OzsrQ0FDbEIsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7OztBQUNwQixpQkFBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDOzsrQ0FDckIsTUFBTSxDQUFDLElBQUksRUFBRTs7Ozs7OztPQUNwQixDQUFDLENBQUM7S0FDSixDQUFDLENBQUM7QUFDSCxZQUFRLENBQUMsYUFBYSxFQUFFLFlBQU07QUFDNUIsVUFBSSxNQUFNLEdBQUcsbUVBQWdDLENBQUM7QUFDOUMsUUFBRSxDQUFDLGdDQUFnQyxFQUFFO1lBSy9CLEdBQUc7Ozs7OytDQUpELE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDOzs7OytDQUNsQixHQUFHLENBQUMsT0FBTyxFQUFFOzs7O0FBRW5CLGlCQUFHLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFL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QztPQUNuQyxDQUFDLENBQUM7QUFDSCxRQUFFLENBQUMscUVBQXFFLEVBQUUsWUFBTTtBQUM5RSxZQUFJLElBQUksR0FBRyxtQkFBTSxJQUFJLEVBQUUsQ0FBQztBQUN4QixZQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3BCLFdBQUcsQ0FBQyxTQUFTLEdBQUc7QUFDZCxxQkFBVyxFQUFFLElBQUk7U0FDbEIsQ0FBQztBQUNGLFdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxTQUFNLENBQUM7T0FDbkMsQ0FBQyxDQUFDO0FBQ0gsUUFBRSxDQUFDLGdFQUFnRSxFQUFFLFlBQU07QUFDekUsWUFBSSxJQUFJLEdBQUcsbUJBQU0sSUFBSSxFQUFFLENBQUM7QUFDeEIsWUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNuQixXQUFHLENBQUMsU0FBUyxHQUFHO0FBQ2QscUJBQVcsRUFBRSxJQUFJO1NBQ2xCLENBQUM7QUFDRixXQUFHLENBQUMsV0FBVyxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsUUFBSyxDQUFDO09BQ2xDLENBQUMsQ0FBQztLQUNKLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L3VuaXQvd2Via2l0LXJlbW90ZS1kZWJ1Z2dlci1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRyYW5zcGlsZTptb2NoYVxuXG5pbXBvcnQgeyBXZWJLaXRSZW1vdGVEZWJ1Z2dlciB9IGZyb20gJy4uLy4uL2luZGV4LmpzJztcbmltcG9ydCB7IFdlYktpdFJlbW90ZURlYnVnZ2VyU2VydmVyIH0gZnJvbSAnLi4vaGVscGVycy93ZWJraXQtcmVtb3RlLWRlYnVnZ2VyLXNlcnZlcic7XG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgc2lub24gZnJvbSAnc2lub24nO1xuXG5jaGFpLnNob3VsZCgpO1xuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xuXG5cbmRlc2NyaWJlKCdXZWJLaXRSZW1vdGVEZWJ1Z2dlcicsICgpID0+IHtcbiAgbGV0IHdyZCA9IG5ldyBXZWJLaXRSZW1vdGVEZWJ1Z2dlcih7aG9zdDogJ2xvY2FsaG9zdCcsIHBvcnQ6IDEzMzd9KTtcblxuICBkZXNjcmliZSgnd2Vic29ja2V0IG1ldGhvZHMnLCAoKSA9PiB7XG4gICAgZGVzY3JpYmUoJyNjb25uZWN0JywgKCkgPT4ge1xuICAgICAgbGV0IHNlcnZlciA9IG5ldyBXZWJLaXRSZW1vdGVEZWJ1Z2dlclNlcnZlcigpO1xuICAgICAgaXQoJ3Nob3VsZCBpbnN0YW50aWF0ZSBhbiBycGMgY2xpZW50JywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCBzZXJ2ZXIuc3RhcnQodHJ1ZSk7XG4gICAgICAgIGF3YWl0IHdyZC5jb25uZWN0KDEpO1xuICAgICAgICB3cmQucnBjQ2xpZW50LnNob3VsZC5leGlzdDtcbiAgICAgICAgYXdhaXQgc2VydmVyLnN0b3AoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGRlc2NyaWJlKCcjZGlzY29ubmVjdCcsICgpID0+IHtcbiAgICAgIGxldCBzZXJ2ZXIgPSBuZXcgV2ViS2l0UmVtb3RlRGVidWdnZXJTZXJ2ZXIoKTtcbiAgICAgIGl0KCdzaG91bGQgY2FsbCBjbG9zZSBvbiB3ZWJzb2NrZXQnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGF3YWl0IHNlcnZlci5zdGFydCh0cnVlKTtcbiAgICAgICAgYXdhaXQgd3JkLmNvbm5lY3QoKTtcblxuICAgICAgICB3cmQucnBjQ2xpZW50LnNob3VsZC5leGlzdDtcbiAgICAgICAgbGV0IHNweSA9IHNpbm9uLnNweSh3cmQucnBjQ2xpZW50LCAnZGlzY29ubmVjdCcpO1xuICAgICAgICB3cmQucnBjQ2xpZW50LnNvY2tldC5kaXNjb25uZWN0ID0gc3B5O1xuICAgICAgICB3cmQuZGlzY29ubmVjdCgpO1xuICAgICAgICBzcHkuY2FsbGVkT25jZS5zaG91bGQuYmUudHJ1ZTtcblxuICAgICAgICBhd2FpdCBzZXJ2ZXIuc3RvcCgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xuICBkZXNjcmliZSgnaHR0cCBtZXRob2RzJywgKCkgPT4ge1xuICAgIGxldCBzZXJ2ZXIgPSBuZXcgV2ViS2l0UmVtb3RlRGVidWdnZXJTZXJ2ZXIoKTtcbiAgICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IHNlcnZlci5zdGFydCgpO1xuICAgIH0pO1xuICAgIGFmdGVyRWFjaChhc3luYyAoKSA9PiB7XG4gICAgICBhd2FpdCBzZXJ2ZXIuc3RvcCgpO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJyNwYWdlQXJyYXlGcm9tSnNvbicsICgpID0+IHtcbiAgICAgIGxldCBkYXRhID0gW1xuICAgICAgICB7XG4gICAgICAgICAgd2ViU29ja2V0RGVidWdnZXJVcmw6ICd3ZWJraXQvdXJsL2FwcC80MicsXG4gICAgICAgICAgdGl0bGU6ICdmaXJzdCBwYWdlIHRpdGxlJyxcbiAgICAgICAgICB1cmw6ICcvcGF0aC90by9wYWdlLmh0bWwnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB3ZWJTb2NrZXREZWJ1Z2dlclVybDogJ3dlYmtpdC91cmwvYXBwLzQzJyxcbiAgICAgICAgICB0aXRsZTogJ3NlY29uZCBwYWdlIHRpdGxlJyxcbiAgICAgICAgICB1cmw6ICcvcGF0aC90by9vdGhlcl9wYWdlLmh0bWwnXG4gICAgICAgIH1cbiAgICAgIF07XG4gICAgICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IHtcbiAgICAgICAgc2VydmVyLnJlc3BvbmRXaXRoKGRhdGEpO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdzaG91bGQgZ2V0IGEgcGFnZSBhcnJheScsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IHIgPSBhd2FpdCB3cmQucGFnZUFycmF5RnJvbUpzb24oKTtcbiAgICAgICAgci5zaG91bGQuYmUuaW5zdGFuY2VvZihBcnJheSk7XG4gICAgICAgIHIuc2hvdWxkLmhhdmUubGVuZ3RoKDIpO1xuICAgICAgfSk7XG4gICAgICBpdCgnc2hvdWxkIGNvcnJlY3RseSBtYXAgd2ViU29ja2V0RGVidWdnZXJVcmwgdG8gaWQnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCByID0gYXdhaXQgd3JkLnBhZ2VBcnJheUZyb21Kc29uKCk7XG4gICAgICAgIF8ubWFwKHIsICdpZCcpLnNob3VsZC5lcWwoWyc0MicsICc0MyddKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGRlc2NyaWJlKCcjZ2V0SnNvbkZyb21VcmwnLCAoKSA9PiB7XG4gICAgICBpdCgnc2hvdWxkIGdldCBhbiBvYmplY3QnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIHNlcnZlci5yZXNwb25kV2l0aCh7aWQ6IDQyLCB0eXBlOiAnZmFrZSd9KTtcblxuICAgICAgICBsZXQgciA9IGF3YWl0IHdyZC5nZXRKc29uRnJvbVVybCgnbG9jYWxob3N0JywgMTMzNywgJy9qc29uJyk7XG4gICAgICAgIHIuc2hvdWxkLmJlLmFuLmluc3RhbmNlb2YoT2JqZWN0KTtcbiAgICAgICAgci5pZC5zaG91bGQuZXF1YWwoNDIpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCd1dGlsaXR5IG1ldGhvZHMnLCAoKSA9PiB7XG4gICAgZGVzY3JpYmUoJyNpc0Nvbm5lY3RlZCcsICgpID0+IHtcbiAgICAgIGl0KCdzaG91bGQgcmV0dXJuIGZhbHNlIGlmIHRoZXJlIGlzIG5vIHJwYyBjbGllbnQnLCAoKSA9PiB7XG4gICAgICAgIHdyZC5pc0Nvbm5lY3RlZCgpLnNob3VsZC5iZS5mYWxzZTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCByZXR1cm4gZmFsc2UgaWYgdGhlcmUgaXMgYW4gcnBjIGNsaWVudCB0aGF0IGlzIG5vdCBjb25uZWN0ZWQnLCAoKSA9PiB7XG4gICAgICAgIGxldCBzdHViID0gc2lub24uc3R1YigpO1xuICAgICAgICBzdHViLnJldHVybnMoZmFsc2UpO1xuICAgICAgICB3cmQucnBjQ2xpZW50ID0ge1xuICAgICAgICAgIGlzQ29ubmVjdGVkOiBzdHViXG4gICAgICAgIH07XG4gICAgICAgIHdyZC5pc0Nvbm5lY3RlZCgpLnNob3VsZC5iZS5mYWxzZTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCByZXR1cm4gdHJ1ZSBpZiB0aGVyZSBpcyBhbiBycGMgY2xpZW50IHRoYXQgaXMgY29ubmVjdGVkJywgKCkgPT4ge1xuICAgICAgICBsZXQgc3R1YiA9IHNpbm9uLnN0dWIoKTtcbiAgICAgICAgc3R1Yi5yZXR1cm5zKHRydWUpO1xuICAgICAgICB3cmQucnBjQ2xpZW50ID0ge1xuICAgICAgICAgIGlzQ29ubmVjdGVkOiBzdHViXG4gICAgICAgIH07XG4gICAgICAgIHdyZC5pc0Nvbm5lY3RlZCgpLnNob3VsZC5iZS50cnVlO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
