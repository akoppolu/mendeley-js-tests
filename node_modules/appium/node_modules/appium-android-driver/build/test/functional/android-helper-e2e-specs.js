'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _libAndroidHelpers = require('../../lib/android-helpers');

var _libAndroidHelpers2 = _interopRequireDefault(_libAndroidHelpers);

var _appiumAdb = require('appium-adb');

var _appiumAdb2 = _interopRequireDefault(_appiumAdb);

var _desired = require('./desired');

var _helpers = require('./helpers');

var opts = {
  app: _desired.app,
  appPackage: 'io.appium.android.apis',
  androidInstallTimeout: 90000
};

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('android-helpers e2e', function () {
  describe('installApkRemotely', function () {
    it('installs an apk by pushing it to the device then installing it from within', function callee$2$0() {
      var adb;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            this.timeout(_helpers.MOCHA_TIMEOUT);

            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(_appiumAdb2['default'].createADB());

          case 3:
            adb = context$3$0.sent;
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(adb.uninstallApk(opts.appPackage));

          case 6:
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(adb.isAppInstalled(opts.appPackage).should.eventually.be['false']);

          case 8:
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(_libAndroidHelpers2['default'].installApkRemotely(adb, opts));

          case 10:
            context$3$0.next = 12;
            return _regeneratorRuntime.awrap(adb.isAppInstalled(opts.appPackage).should.eventually.be['true']);

          case 12:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
  describe('ensureDeviceLocale', function () {
    var adb = undefined;
    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_appiumAdb2['default'].createADB());

          case 2:
            adb = context$3$0.sent;

            if (!process.env.TRAVIS) {
              context$3$0.next = 5;
              break;
            }

            return context$3$0.abrupt('return', this.skip());

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_libAndroidHelpers2['default'].ensureDeviceLocale(adb, 'en', 'US'));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should set device language and country', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_libAndroidHelpers2['default'].ensureDeviceLocale(adb, 'fr', 'FR'));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(adb.getApiLevel());

          case 4:
            context$3$0.t0 = context$3$0.sent;

            if (!(context$3$0.t0 < 23)) {
              context$3$0.next = 12;
              break;
            }

            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(adb.getDeviceLanguage().should.eventually.equal('fr'));

          case 8:
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(adb.getDeviceCountry().should.eventually.equal('FR'));

          case 10:
            context$3$0.next = 14;
            break;

          case 12:
            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(adb.getDeviceLocale().should.eventually.equal('fr-FR'));

          case 14:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9hbmRyb2lkLWhlbHBlci1lMmUtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7b0JBQWlCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O2lDQUN6QiwyQkFBMkI7Ozs7eUJBQy9CLFlBQVk7Ozs7dUJBQ1IsV0FBVzs7dUJBQ0QsV0FBVzs7QUFHekMsSUFBSSxJQUFJLEdBQUc7QUFDVCxLQUFHLGNBQUE7QUFDSCxZQUFVLEVBQUcsd0JBQXdCO0FBQ3JDLHVCQUFxQixFQUFHLEtBQUs7Q0FDOUIsQ0FBQzs7QUFFRixrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFFBQVEsQ0FBQyxxQkFBcUIsRUFBRSxZQUFNO0FBQ3BDLFVBQVEsQ0FBQyxvQkFBb0IsRUFBRSxZQUFNO0FBQ25DLE1BQUUsQ0FBQyw0RUFBNEUsRUFBRTtVQUczRSxHQUFHOzs7O0FBRlAsZ0JBQUksQ0FBQyxPQUFPLHdCQUFlLENBQUM7Ozs2Q0FFWix1QkFBSSxTQUFTLEVBQUU7OztBQUEzQixlQUFHOzs2Q0FDRCxHQUFHLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7Ozs7NkNBQ2pDLEdBQUcsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxTQUFNOzs7OzZDQUM5RCwrQkFBUSxrQkFBa0IsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDOzs7OzZDQUNyQyxHQUFHLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsUUFBSzs7Ozs7OztLQUNwRSxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7QUFDSCxVQUFRLENBQUMsb0JBQW9CLEVBQUUsWUFBTTtBQUNuQyxRQUFJLEdBQUcsWUFBQSxDQUFDO0FBQ1IsVUFBTSxDQUFDOzs7Ozs2Q0FDTyx1QkFBSSxTQUFTLEVBQUU7OztBQUEzQixlQUFHOztpQkFFQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU07Ozs7O2dEQUFTLElBQUksQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7S0FDM0MsQ0FBQyxDQUFDO0FBQ0gsU0FBSyxDQUFDOzs7Ozs2Q0FDRSwrQkFBUSxrQkFBa0IsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQzs7Ozs7OztLQUNsRCxDQUFDLENBQUM7QUFDSCxNQUFFLENBQUMsd0NBQXdDLEVBQUU7Ozs7OzZDQUNyQywrQkFBUSxrQkFBa0IsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQzs7Ozs2Q0FFdkMsR0FBRyxDQUFDLFdBQVcsRUFBRTs7Ozs7bUNBQUcsRUFBRTs7Ozs7OzZDQUN4QixHQUFHLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7Ozs7NkNBQ3JELEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQzs7Ozs7Ozs7NkNBRXBELEdBQUcsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7S0FFL0QsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZnVuY3Rpb25hbC9hbmRyb2lkLWhlbHBlci1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCBoZWxwZXJzIGZyb20gJy4uLy4uL2xpYi9hbmRyb2lkLWhlbHBlcnMnO1xuaW1wb3J0IEFEQiBmcm9tICdhcHBpdW0tYWRiJztcbmltcG9ydCB7IGFwcCB9IGZyb20gJy4vZGVzaXJlZCc7XG5pbXBvcnQgeyBNT0NIQV9USU1FT1VUIH0gZnJvbSAnLi9oZWxwZXJzJztcblxuXG5sZXQgb3B0cyA9IHtcbiAgYXBwLFxuICBhcHBQYWNrYWdlIDogJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMnLFxuICBhbmRyb2lkSW5zdGFsbFRpbWVvdXQgOiA5MDAwMFxufTtcblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZGVzY3JpYmUoJ2FuZHJvaWQtaGVscGVycyBlMmUnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdpbnN0YWxsQXBrUmVtb3RlbHknLCAoKSA9PiB7XG4gICAgaXQoJ2luc3RhbGxzIGFuIGFwayBieSBwdXNoaW5nIGl0IHRvIHRoZSBkZXZpY2UgdGhlbiBpbnN0YWxsaW5nIGl0IGZyb20gd2l0aGluJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy50aW1lb3V0KE1PQ0hBX1RJTUVPVVQpO1xuXG4gICAgICBsZXQgYWRiID0gYXdhaXQgQURCLmNyZWF0ZUFEQigpO1xuICAgICAgYXdhaXQgYWRiLnVuaW5zdGFsbEFwayhvcHRzLmFwcFBhY2thZ2UpO1xuICAgICAgYXdhaXQgYWRiLmlzQXBwSW5zdGFsbGVkKG9wdHMuYXBwUGFja2FnZSkuc2hvdWxkLmV2ZW50dWFsbHkuYmUuZmFsc2U7XG4gICAgICBhd2FpdCBoZWxwZXJzLmluc3RhbGxBcGtSZW1vdGVseShhZGIsIG9wdHMpO1xuICAgICAgYXdhaXQgYWRiLmlzQXBwSW5zdGFsbGVkKG9wdHMuYXBwUGFja2FnZSkuc2hvdWxkLmV2ZW50dWFsbHkuYmUudHJ1ZTtcbiAgICB9KTtcbiAgfSk7XG4gIGRlc2NyaWJlKCdlbnN1cmVEZXZpY2VMb2NhbGUnLCAoKSA9PiB7XG4gICAgbGV0IGFkYjtcbiAgICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgYWRiID0gYXdhaXQgQURCLmNyZWF0ZUFEQigpO1xuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuVFJBVklTKSByZXR1cm4gdGhpcy5za2lwKCk7XG4gICAgfSk7XG4gICAgYWZ0ZXIoYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgaGVscGVycy5lbnN1cmVEZXZpY2VMb2NhbGUoYWRiLCAnZW4nLCAnVVMnKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHNldCBkZXZpY2UgbGFuZ3VhZ2UgYW5kIGNvdW50cnknLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBoZWxwZXJzLmVuc3VyZURldmljZUxvY2FsZShhZGIsICdmcicsICdGUicpO1xuXG4gICAgICBpZiAoYXdhaXQgYWRiLmdldEFwaUxldmVsKCkgPCAyMykge1xuICAgICAgICBhd2FpdCBhZGIuZ2V0RGV2aWNlTGFuZ3VhZ2UoKS5zaG91bGQuZXZlbnR1YWxseS5lcXVhbCgnZnInKTtcbiAgICAgICAgYXdhaXQgYWRiLmdldERldmljZUNvdW50cnkoKS5zaG91bGQuZXZlbnR1YWxseS5lcXVhbCgnRlInKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF3YWl0IGFkYi5nZXREZXZpY2VMb2NhbGUoKS5zaG91bGQuZXZlbnR1YWxseS5lcXVhbCgnZnItRlInKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
