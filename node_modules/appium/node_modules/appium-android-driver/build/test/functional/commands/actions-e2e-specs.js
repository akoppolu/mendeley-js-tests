'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _2 = require('../../..');

var _3 = _interopRequireDefault(_2);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _desired = require('../desired');

var _desired2 = _interopRequireDefault(_desired);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var PNG_MAGIC = '89504e47';
var PNG_MAGIC_LENGTH = 4;

var driver = undefined;
var caps = _lodash2['default'].defaults({
  appPackage: 'io.appium.android.apis',
  appActivity: '.view.TextFields'
}, _desired2['default']);

describe('actions', function () {
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          driver = new _3['default']();
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.createSession(caps));

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  describe('replaceValue', function () {
    var _this2 = this;

    it('should replace existing value in a text field', function callee$2$0() {
      var el;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.t0 = _lodash2['default'];
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.findElOrEls('class name', 'android.widget.EditText', true));

          case 3:
            context$3$0.t1 = context$3$0.sent;
            el = context$3$0.t0.last.call(context$3$0.t0, context$3$0.t1);

            el.should.exist;
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(driver.setValue('original value', el.ELEMENT));

          case 8:
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(driver.getText(el.ELEMENT).should.eventually.equal('original value'));

          case 10:
            context$3$0.next = 12;
            return _regeneratorRuntime.awrap(driver.replaceValue('replaced value', el.ELEMENT));

          case 12:
            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(driver.getText(el.ELEMENT).should.eventually.equal('replaced value'));

          case 14:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
  });

  describe('key codes', function () {
    var _this3 = this;

    beforeEach(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.startActivity(caps.appPackage, caps.appActivity));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });

    it('should press key code 3 without metastate', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.pressKeyCode(3).should.not.be.rejected);

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });
    it('should press key code 3 with metastate', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.pressKeyCode(3, 193).should.not.be.rejected);

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });
    it('should long press key code 3 without metastate', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.longPressKeyCode(3).should.not.be.rejected);

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });
    it('should long press key code 3 with metastate', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.longPressKeyCode(3, 193).should.not.be.rejected);

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });
  });

  describe('getScreenshot', function () {
    var _this4 = this;

    it('should return valid base64-encoded screenshot', function callee$2$0() {
      var base64screenshot, imageMagic;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getScreenshot());

          case 2:
            base64screenshot = context$3$0.sent;
            imageMagic = new Buffer(base64screenshot, 'base64').toString('hex', 0, PNG_MAGIC_LENGTH);

            imageMagic.should.be.equal(PNG_MAGIC);

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this4);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9hY3Rpb25zLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztvQkFBaUIsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7aUJBQ25CLFVBQVU7Ozs7c0JBQ3RCLFFBQVE7Ozs7dUJBQ0csWUFBWTs7OztBQUdyQyxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLElBQU0sU0FBUyxHQUFHLFVBQVUsQ0FBQztBQUM3QixJQUFNLGdCQUFnQixHQUFHLENBQUMsQ0FBQzs7QUFFM0IsSUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLElBQUksSUFBSSxHQUFHLG9CQUFFLFFBQVEsQ0FBQztBQUNwQixZQUFVLEVBQUUsd0JBQXdCO0FBQ3BDLGFBQVcsRUFBRSxrQkFBa0I7Q0FDaEMsdUJBQWUsQ0FBQzs7QUFHakIsUUFBUSxDQUFDLFNBQVMsRUFBRSxZQUFNO0FBQ3hCLFFBQU0sQ0FBQzs7OztBQUNMLGdCQUFNLEdBQUcsbUJBQW1CLENBQUM7OzJDQUN2QixNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQzs7Ozs7OztHQUNqQyxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7OzJDQUNFLE1BQU0sQ0FBQyxhQUFhLEVBQUU7Ozs7Ozs7R0FDN0IsQ0FBQyxDQUFDOztBQUVILFVBQVEsQ0FBQyxjQUFjLEVBQUUsWUFBWTs7O0FBQ25DLE1BQUUsQ0FBQywrQ0FBK0MsRUFBRTtVQUM5QyxFQUFFOzs7Ozs7NkNBQWdCLE1BQU0sQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLHlCQUF5QixFQUFFLElBQUksQ0FBQzs7OztBQUFuRixjQUFFLGtCQUFLLElBQUk7O0FBQ2YsY0FBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7OzZDQUNWLE1BQU0sQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQzs7Ozs2Q0FDN0MsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUM7Ozs7NkNBRXBFLE1BQU0sQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQzs7Ozs2Q0FDakQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUM7Ozs7Ozs7S0FDM0UsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDOztBQUVILFVBQVEsQ0FBQyxXQUFXLEVBQUUsWUFBWTs7O0FBQ2hDLGNBQVUsQ0FBQzs7Ozs7NkNBQ0gsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUM7Ozs7Ozs7S0FDOUQsQ0FBQyxDQUFDOztBQUVILE1BQUUsQ0FBQywyQ0FBMkMsRUFBRTs7Ozs7NkNBQ3hDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsUUFBUTs7Ozs7OztLQUNwRCxDQUFDLENBQUM7QUFDSCxNQUFFLENBQUMsd0NBQXdDLEVBQUU7Ozs7OzZDQUNyQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxRQUFROzs7Ozs7O0tBQ3pELENBQUMsQ0FBQztBQUNILE1BQUUsQ0FBQyxnREFBZ0QsRUFBRTs7Ozs7NkNBQzdDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxRQUFROzs7Ozs7O0tBQ3hELENBQUMsQ0FBQztBQUNILE1BQUUsQ0FBQyw2Q0FBNkMsRUFBRTs7Ozs7NkNBQzFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsUUFBUTs7Ozs7OztLQUM3RCxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLGVBQWUsRUFBRSxZQUFZOzs7QUFDcEMsTUFBRSxDQUFDLCtDQUErQyxFQUFFO1VBQzVDLGdCQUFnQixFQUNoQixVQUFVOzs7Ozs2Q0FEZSxNQUFNLENBQUMsYUFBYSxFQUFFOzs7QUFBL0MsNEJBQWdCO0FBQ2hCLHNCQUFVLEdBQUcsSUFBSSxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsUUFBUSxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsZ0JBQWdCLENBQUM7O0FBQzlGLHNCQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7Ozs7Ozs7S0FDdkMsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9hY3Rpb25zLWUyZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0IEFuZHJvaWREcml2ZXIgZnJvbSAnLi4vLi4vLi4nO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBERUZBVUxUX0NBUFMgZnJvbSAnLi4vZGVzaXJlZCc7XG5cblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuY29uc3QgUE5HX01BR0lDID0gJzg5NTA0ZTQ3JztcbmNvbnN0IFBOR19NQUdJQ19MRU5HVEggPSA0O1xuXG5sZXQgZHJpdmVyO1xubGV0IGNhcHMgPSBfLmRlZmF1bHRzKHtcbiAgYXBwUGFja2FnZTogJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMnLFxuICBhcHBBY3Rpdml0eTogJy52aWV3LlRleHRGaWVsZHMnXG59LCBERUZBVUxUX0NBUFMpO1xuXG5cbmRlc2NyaWJlKCdhY3Rpb25zJywgKCkgPT4ge1xuICBiZWZvcmUoYXN5bmMgKCkgPT4ge1xuICAgIGRyaXZlciA9IG5ldyBBbmRyb2lkRHJpdmVyKCk7XG4gICAgYXdhaXQgZHJpdmVyLmNyZWF0ZVNlc3Npb24oY2Fwcyk7XG4gIH0pO1xuICBhZnRlcihhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgZHJpdmVyLmRlbGV0ZVNlc3Npb24oKTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3JlcGxhY2VWYWx1ZScsIGZ1bmN0aW9uICgpIHtcbiAgICBpdCgnc2hvdWxkIHJlcGxhY2UgZXhpc3RpbmcgdmFsdWUgaW4gYSB0ZXh0IGZpZWxkJywgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IGVsID0gXy5sYXN0KGF3YWl0IGRyaXZlci5maW5kRWxPckVscygnY2xhc3MgbmFtZScsICdhbmRyb2lkLndpZGdldC5FZGl0VGV4dCcsIHRydWUpKTtcbiAgICAgIGVsLnNob3VsZC5leGlzdDtcbiAgICAgIGF3YWl0IGRyaXZlci5zZXRWYWx1ZSgnb3JpZ2luYWwgdmFsdWUnLCBlbC5FTEVNRU5UKTtcbiAgICAgIGF3YWl0IGRyaXZlci5nZXRUZXh0KGVsLkVMRU1FTlQpLnNob3VsZC5ldmVudHVhbGx5LmVxdWFsKCdvcmlnaW5hbCB2YWx1ZScpO1xuXG4gICAgICBhd2FpdCBkcml2ZXIucmVwbGFjZVZhbHVlKCdyZXBsYWNlZCB2YWx1ZScsIGVsLkVMRU1FTlQpO1xuICAgICAgYXdhaXQgZHJpdmVyLmdldFRleHQoZWwuRUxFTUVOVCkuc2hvdWxkLmV2ZW50dWFsbHkuZXF1YWwoJ3JlcGxhY2VkIHZhbHVlJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdrZXkgY29kZXMnLCBmdW5jdGlvbiAoKSB7XG4gICAgYmVmb3JlRWFjaChhc3luYyAoKSA9PiB7XG4gICAgICBhd2FpdCBkcml2ZXIuc3RhcnRBY3Rpdml0eShjYXBzLmFwcFBhY2thZ2UsIGNhcHMuYXBwQWN0aXZpdHkpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBwcmVzcyBrZXkgY29kZSAzIHdpdGhvdXQgbWV0YXN0YXRlJywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLnByZXNzS2V5Q29kZSgzKS5zaG91bGQubm90LmJlLnJlamVjdGVkO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgcHJlc3Mga2V5IGNvZGUgMyB3aXRoIG1ldGFzdGF0ZScsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGRyaXZlci5wcmVzc0tleUNvZGUoMywgMTkzKS5zaG91bGQubm90LmJlLnJlamVjdGVkO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgbG9uZyBwcmVzcyBrZXkgY29kZSAzIHdpdGhvdXQgbWV0YXN0YXRlJywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLmxvbmdQcmVzc0tleUNvZGUoMykuc2hvdWxkLm5vdC5iZS5yZWplY3RlZDtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIGxvbmcgcHJlc3Mga2V5IGNvZGUgMyB3aXRoIG1ldGFzdGF0ZScsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGRyaXZlci5sb25nUHJlc3NLZXlDb2RlKDMsIDE5Mykuc2hvdWxkLm5vdC5iZS5yZWplY3RlZDtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ2dldFNjcmVlbnNob3QnLCBmdW5jdGlvbiAoKSB7XG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gdmFsaWQgYmFzZTY0LWVuY29kZWQgc2NyZWVuc2hvdCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IGJhc2U2NHNjcmVlbnNob3QgPSBhd2FpdCBkcml2ZXIuZ2V0U2NyZWVuc2hvdCgpO1xuICAgICAgY29uc3QgaW1hZ2VNYWdpYyA9IG5ldyBCdWZmZXIoYmFzZTY0c2NyZWVuc2hvdCwgJ2Jhc2U2NCcpLnRvU3RyaW5nKCdoZXgnLCAwLCBQTkdfTUFHSUNfTEVOR1RIKTtcbiAgICAgIGltYWdlTWFnaWMuc2hvdWxkLmJlLmVxdWFsKFBOR19NQUdJQyk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
