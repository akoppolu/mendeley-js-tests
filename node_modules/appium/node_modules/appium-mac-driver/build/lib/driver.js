'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumBaseDriver = require('appium-base-driver');

var _appiumSupport = require('appium-support');

var _appiumForMac = require('./appium-for-mac');

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

// Appium instantiates this class

var MacDriver = (function (_BaseDriver) {
  _inherits(MacDriver, _BaseDriver);

  function MacDriver() {
    var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var shouldValidateCaps = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

    _classCallCheck(this, MacDriver);

    _get(Object.getPrototypeOf(MacDriver.prototype), 'constructor', this).call(this, opts, shouldValidateCaps);
    this.jwpProxyActive = false;
    this.opts.address = opts.address || _appiumForMac.DEFAULT_A4M_HOST;
  }

  _createClass(MacDriver, [{
    key: 'createSession',
    value: function createSession(caps) {
      var sessionId, _ref, _ref2;

      return _regeneratorRuntime.async(function createSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            if (_appiumSupport.system.isMac()) {
              context$2$0.next = 2;
              break;
            }

            throw new Error("AppiumForMac tests only run on the Mac");

          case 2:
            context$2$0.prev = 2;
            sessionId = undefined;
            context$2$0.next = 6;
            return _regeneratorRuntime.awrap(_get(Object.getPrototypeOf(MacDriver.prototype), 'createSession', this).call(this, caps));

          case 6:
            _ref = context$2$0.sent;
            _ref2 = _slicedToArray(_ref, 1);
            sessionId = _ref2[0];
            context$2$0.next = 11;
            return _regeneratorRuntime.awrap(this.startAppiumForMacSession());

          case 11:
            if (!caps.app) {
              context$2$0.next = 15;
              break;
            }

            _logger2['default'].info('Automatically navigating to app \'' + caps.app + '\'');
            context$2$0.next = 15;
            return _regeneratorRuntime.awrap(this.a4mDriver.sendCommand('/url', 'POST', { url: caps.app }));

          case 15:
            return context$2$0.abrupt('return', [sessionId, caps]);

          case 18:
            context$2$0.prev = 18;
            context$2$0.t0 = context$2$0['catch'](2);
            context$2$0.next = 22;
            return _regeneratorRuntime.awrap(this.deleteSession());

          case 22:
            throw context$2$0.t0;

          case 23:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[2, 18]]);
    }
  }, {
    key: 'startAppiumForMacSession',
    value: function startAppiumForMacSession() {
      return _regeneratorRuntime.async(function startAppiumForMacSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            this.a4mDriver = new _appiumForMac.AppiumForMac();

            context$2$0.next = 3;
            return _regeneratorRuntime.awrap(this.a4mDriver.start());

          case 3:
            context$2$0.next = 5;
            return _regeneratorRuntime.awrap(this.a4mDriver.startSession(this.caps));

          case 5:
            this.proxyReqRes = this.a4mDriver.proxyReqRes.bind(this.a4mDriver);
            // now that everything has started successfully, turn on proxying so all
            // subsequent session requests go straight to/from AppiumForMac
            this.jwpProxyActive = true;

          case 7:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'deleteSession',
    value: function deleteSession() {
      return _regeneratorRuntime.async(function deleteSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            _logger2['default'].debug('Deleting AppiumForMac session');

            if (!(this.a4mDriver && this.jwpProxyActive)) {
              context$2$0.next = 7;
              break;
            }

            context$2$0.next = 4;
            return _regeneratorRuntime.awrap(this.a4mDriver.deleteSession());

          case 4:
            context$2$0.next = 6;
            return _regeneratorRuntime.awrap(this.a4mDriver.stop());

          case 6:
            this.a4mDriver = null;

          case 7:
            this.jwpProxyActive = false;
            context$2$0.next = 10;
            return _regeneratorRuntime.awrap(_get(Object.getPrototypeOf(MacDriver.prototype), 'deleteSession', this).call(this));

          case 10:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'proxyActive',
    value: function proxyActive() {
      // we always have an active proxy to the AppiumForMac server
      return true;
    }
  }, {
    key: 'canProxy',
    value: function canProxy() {
      // we can always proxy to the AppiumForMac server
      return true;
    }
  }, {
    key: 'driverData',
    get: function get() {
      return { A4MPort: this.opts.port };
    }
  }]);

  return MacDriver;
})(_appiumBaseDriver.BaseDriver);

exports.MacDriver = MacDriver;
exports['default'] = MacDriver;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9kcml2ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0NBQTJCLG9CQUFvQjs7NkJBQ3hCLGdCQUFnQjs7NEJBQ08sa0JBQWtCOztzQkFDN0MsVUFBVTs7Ozs7O0lBR3ZCLFNBQVM7WUFBVCxTQUFTOztBQUNELFdBRFIsU0FBUyxHQUNzQztRQUF0QyxJQUFJLHlEQUFHLEVBQUU7UUFBRSxrQkFBa0IseURBQUcsSUFBSTs7MEJBRDdDLFNBQVM7O0FBRVgsK0JBRkUsU0FBUyw2Q0FFTCxJQUFJLEVBQUUsa0JBQWtCLEVBQUU7QUFDaEMsUUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7QUFDNUIsUUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sa0NBQW9CLENBQUM7R0FDdEQ7O2VBTEcsU0FBUzs7V0FPTyx1QkFBQyxJQUFJO1VBS2pCLFNBQVM7Ozs7O2dCQUpWLHNCQUFPLEtBQUssRUFBRTs7Ozs7a0JBQ1gsSUFBSSxLQUFLLENBQUMsd0NBQXdDLENBQUM7Ozs7QUFHckQscUJBQVM7O3dFQVpiLFNBQVMsK0NBYStCLElBQUk7Ozs7O0FBQTNDLHFCQUFTOzs2Q0FDSixJQUFJLENBQUMsd0JBQXdCLEVBQUU7OztpQkFDakMsSUFBSSxDQUFDLEdBQUc7Ozs7O0FBQ1YsZ0NBQU8sSUFBSSx3Q0FBcUMsSUFBSSxDQUFDLEdBQUcsUUFBSSxDQUFDOzs2Q0FDdkQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxFQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFDLENBQUM7OztnREFFNUQsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDOzs7Ozs7NkNBRWxCLElBQUksQ0FBQyxhQUFhLEVBQUU7Ozs7Ozs7Ozs7S0FHN0I7OztXQUU4Qjs7OztBQUM3QixnQkFBSSxDQUFDLFNBQVMsR0FBRyxnQ0FBa0IsQ0FBQzs7OzZDQUU5QixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRTs7Ozs2Q0FDdEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzs7O0FBQzVDLGdCQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7OztBQUduRSxnQkFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7Ozs7Ozs7S0FDNUI7OztXQUVtQjs7OztBQUNsQixnQ0FBTyxLQUFLLENBQUMsK0JBQStCLENBQUMsQ0FBQzs7a0JBRTFDLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQTs7Ozs7OzZDQUNqQyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsRUFBRTs7Ozs2Q0FDOUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUU7OztBQUMzQixnQkFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7OztBQUV4QixnQkFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7O3dFQTdDMUIsU0FBUzs7Ozs7OztLQStDWjs7O1dBRVcsdUJBQUc7O0FBRWIsYUFBTyxJQUFJLENBQUM7S0FDYjs7O1dBRVEsb0JBQUc7O0FBRVYsYUFBTyxJQUFJLENBQUM7S0FDYjs7O1NBRWMsZUFBRztBQUNoQixhQUFPLEVBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFDLENBQUM7S0FDbEM7OztTQTdERyxTQUFTOzs7UUFnRU4sU0FBUyxHQUFULFNBQVM7cUJBQ0gsU0FBUyIsImZpbGUiOiJsaWIvZHJpdmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZURyaXZlciB9IGZyb20gJ2FwcGl1bS1iYXNlLWRyaXZlcic7XG5pbXBvcnQgeyBzeXN0ZW0gfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5pbXBvcnQgeyBBcHBpdW1Gb3JNYWMsIERFRkFVTFRfQTRNX0hPU1R9IGZyb20gJy4vYXBwaXVtLWZvci1tYWMnO1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuL2xvZ2dlcic7XG5cbi8vIEFwcGl1bSBpbnN0YW50aWF0ZXMgdGhpcyBjbGFzc1xuY2xhc3MgTWFjRHJpdmVyIGV4dGVuZHMgQmFzZURyaXZlciB7XG4gIGNvbnN0cnVjdG9yIChvcHRzID0ge30sIHNob3VsZFZhbGlkYXRlQ2FwcyA9IHRydWUpIHtcbiAgICBzdXBlcihvcHRzLCBzaG91bGRWYWxpZGF0ZUNhcHMpO1xuICAgIHRoaXMuandwUHJveHlBY3RpdmUgPSBmYWxzZTtcbiAgICB0aGlzLm9wdHMuYWRkcmVzcyA9IG9wdHMuYWRkcmVzcyB8fCBERUZBVUxUX0E0TV9IT1NUO1xuICB9XG5cbiAgYXN5bmMgY3JlYXRlU2Vzc2lvbiAoY2Fwcykge1xuICAgIGlmICghc3lzdGVtLmlzTWFjKCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkFwcGl1bUZvck1hYyB0ZXN0cyBvbmx5IHJ1biBvbiB0aGUgTWFjXCIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgbGV0IHNlc3Npb25JZDtcbiAgICAgIFtzZXNzaW9uSWRdID0gYXdhaXQgc3VwZXIuY3JlYXRlU2Vzc2lvbihjYXBzKTtcbiAgICAgIGF3YWl0IHRoaXMuc3RhcnRBcHBpdW1Gb3JNYWNTZXNzaW9uKCk7XG4gICAgICBpZiAoY2Fwcy5hcHApIHtcbiAgICAgICAgbG9nZ2VyLmluZm8oYEF1dG9tYXRpY2FsbHkgbmF2aWdhdGluZyB0byBhcHAgJyR7Y2Fwcy5hcHB9J2ApO1xuICAgICAgICBhd2FpdCB0aGlzLmE0bURyaXZlci5zZW5kQ29tbWFuZCgnL3VybCcsICdQT1NUJywge3VybDogY2Fwcy5hcHB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBbc2Vzc2lvbklkLCBjYXBzXTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBhd2FpdCB0aGlzLmRlbGV0ZVNlc3Npb24oKTtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgc3RhcnRBcHBpdW1Gb3JNYWNTZXNzaW9uICgpIHtcbiAgICB0aGlzLmE0bURyaXZlciA9IG5ldyBBcHBpdW1Gb3JNYWMoKTtcblxuICAgIGF3YWl0IHRoaXMuYTRtRHJpdmVyLnN0YXJ0KCk7XG4gICAgYXdhaXQgdGhpcy5hNG1Ecml2ZXIuc3RhcnRTZXNzaW9uKHRoaXMuY2Fwcyk7XG4gICAgdGhpcy5wcm94eVJlcVJlcyA9IHRoaXMuYTRtRHJpdmVyLnByb3h5UmVxUmVzLmJpbmQodGhpcy5hNG1Ecml2ZXIpO1xuICAgIC8vIG5vdyB0aGF0IGV2ZXJ5dGhpbmcgaGFzIHN0YXJ0ZWQgc3VjY2Vzc2Z1bGx5LCB0dXJuIG9uIHByb3h5aW5nIHNvIGFsbFxuICAgIC8vIHN1YnNlcXVlbnQgc2Vzc2lvbiByZXF1ZXN0cyBnbyBzdHJhaWdodCB0by9mcm9tIEFwcGl1bUZvck1hY1xuICAgIHRoaXMuandwUHJveHlBY3RpdmUgPSB0cnVlO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlU2Vzc2lvbiAoKSB7XG4gICAgbG9nZ2VyLmRlYnVnKCdEZWxldGluZyBBcHBpdW1Gb3JNYWMgc2Vzc2lvbicpO1xuXG4gICAgaWYgKHRoaXMuYTRtRHJpdmVyICYmIHRoaXMuandwUHJveHlBY3RpdmUpIHtcbiAgICAgIGF3YWl0IHRoaXMuYTRtRHJpdmVyLmRlbGV0ZVNlc3Npb24oKTtcbiAgICAgIGF3YWl0IHRoaXMuYTRtRHJpdmVyLnN0b3AoKTtcbiAgICAgIHRoaXMuYTRtRHJpdmVyID0gbnVsbDtcbiAgICB9XG4gICAgdGhpcy5qd3BQcm94eUFjdGl2ZSA9IGZhbHNlO1xuICAgIGF3YWl0IHN1cGVyLmRlbGV0ZVNlc3Npb24oKTtcbiAgfVxuXG4gIHByb3h5QWN0aXZlICgpIHtcbiAgICAvLyB3ZSBhbHdheXMgaGF2ZSBhbiBhY3RpdmUgcHJveHkgdG8gdGhlIEFwcGl1bUZvck1hYyBzZXJ2ZXJcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGNhblByb3h5ICgpIHtcbiAgICAvLyB3ZSBjYW4gYWx3YXlzIHByb3h5IHRvIHRoZSBBcHBpdW1Gb3JNYWMgc2VydmVyXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBnZXQgZHJpdmVyRGF0YSAoKSB7XG4gICAgcmV0dXJuIHtBNE1Qb3J0OiB0aGlzLm9wdHMucG9ydH07XG4gIH1cbn1cblxuZXhwb3J0IHsgTWFjRHJpdmVyIH07XG5leHBvcnQgZGVmYXVsdCBNYWNEcml2ZXI7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=
