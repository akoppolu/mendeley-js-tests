require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireWildcard = require('babel-runtime/helpers/interop-require-wildcard')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _libUtils = require('../../lib/utils');

var utils = _interopRequireWildcard(_libUtils);

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('prepareIosOpts', function () {
  it('should use instruments without delay by default', function callee$1$0() {
    var opts;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          opts = {};

          utils.prepareIosOpts(opts);
          opts.withoutDelay.should.be['true'];

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should use instruments without delay if explicitly not using native instruments', function callee$1$0() {
    var opts;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          opts = { nativeInstrumentsLib: false };

          utils.prepareIosOpts(opts);
          opts.withoutDelay.should.be['true'];

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should not use instruments without delay if using native intruments', function callee$1$0() {
    var opts;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          opts = { nativeInstrumentsLib: true };

          utils.prepareIosOpts(opts);
          opts.withoutDelay.should.be['false'];

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvdW5pdC91dGlscy1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7d0JBRXVCLGlCQUFpQjs7SUFBNUIsS0FBSzs7b0JBQ0EsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7QUFFN0Msa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDZCxrQkFBSyxHQUFHLDZCQUFnQixDQUFDOztBQUV6QixRQUFRLENBQUMsZ0JBQWdCLEVBQUUsWUFBTTtBQUMvQixJQUFFLENBQUMsaURBQWlELEVBQUU7UUFDaEQsSUFBSTs7OztBQUFKLGNBQUksR0FBRyxFQUFFOztBQUNiLGVBQUssQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDM0IsY0FBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsRUFBRSxRQUFLLENBQUM7Ozs7Ozs7R0FDbEMsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLGlGQUFpRixFQUFFO1FBQ2hGLElBQUk7Ozs7QUFBSixjQUFJLEdBQUcsRUFBQyxvQkFBb0IsRUFBRSxLQUFLLEVBQUM7O0FBQ3hDLGVBQUssQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDM0IsY0FBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsRUFBRSxRQUFLLENBQUM7Ozs7Ozs7R0FDbEMsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLHFFQUFxRSxFQUFFO1FBQ3BFLElBQUk7Ozs7QUFBSixjQUFJLEdBQUcsRUFBQyxvQkFBb0IsRUFBRSxJQUFJLEVBQUM7O0FBQ3ZDLGVBQUssQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDM0IsY0FBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsRUFBRSxTQUFNLENBQUM7Ozs7Ozs7R0FDbkMsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvdW5pdC91dGlscy1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRyYW5zcGlsZTptb2NoYVxuXG5pbXBvcnQgKiBhcyB1dGlscyBmcm9tICcuLi8uLi9saWIvdXRpbHMnO1xuaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdwcmVwYXJlSW9zT3B0cycsICgpID0+IHtcbiAgaXQoJ3Nob3VsZCB1c2UgaW5zdHJ1bWVudHMgd2l0aG91dCBkZWxheSBieSBkZWZhdWx0JywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBvcHRzID0ge307XG4gICAgdXRpbHMucHJlcGFyZUlvc09wdHMob3B0cyk7XG4gICAgb3B0cy53aXRob3V0RGVsYXkuc2hvdWxkLmJlLnRydWU7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHVzZSBpbnN0cnVtZW50cyB3aXRob3V0IGRlbGF5IGlmIGV4cGxpY2l0bHkgbm90IHVzaW5nIG5hdGl2ZSBpbnN0cnVtZW50cycsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgb3B0cyA9IHtuYXRpdmVJbnN0cnVtZW50c0xpYjogZmFsc2V9O1xuICAgIHV0aWxzLnByZXBhcmVJb3NPcHRzKG9wdHMpO1xuICAgIG9wdHMud2l0aG91dERlbGF5LnNob3VsZC5iZS50cnVlO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCBub3QgdXNlIGluc3RydW1lbnRzIHdpdGhvdXQgZGVsYXkgaWYgdXNpbmcgbmF0aXZlIGludHJ1bWVudHMnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IG9wdHMgPSB7bmF0aXZlSW5zdHJ1bWVudHNMaWI6IHRydWV9O1xuICAgIHV0aWxzLnByZXBhcmVJb3NPcHRzKG9wdHMpO1xuICAgIG9wdHMud2l0aG91dERlbGF5LnNob3VsZC5iZS5mYWxzZTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
