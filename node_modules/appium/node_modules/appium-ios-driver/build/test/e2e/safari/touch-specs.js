'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _safariSetup = require('./safari-setup');

var _safariSetup2 = _interopRequireDefault(_safariSetup);

var _helpersEnv = require('../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _helpersSession = require('../helpers/session');

/**
 * touch command doesn't work
 */
describe.skip('touch', function () {
  var _this = this;

  this.timeout(_helpersSession.MOCHA_SAFARI_TIMEOUT);

  var driver = (0, _safariSetup2['default'])(this, {
    browserName: "safari"
  }).driver;

  it('should flick element', function callee$1$0() {
    var flickElem, l1, dx, dy, l2;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.setUrl(_helpersEnv2['default'].TEST_END_POINT + 'touch.html'));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'flickElem'));

        case 4:
          flickElem = context$2$0.sent;
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.getLocation(flickElem));

        case 7:
          l1 = context$2$0.sent;
          dx = 30, dy = 30;
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'flickElem'));

        case 11:
          flickElem = context$2$0.sent;
          context$2$0.next = 14;
          return _regeneratorRuntime.awrap(driver.flick(flickElem, dx, dy, 0));

        case 14:
          context$2$0.next = 16;
          return _regeneratorRuntime.awrap(_bluebird2['default'].delay(1000));

        case 16:
          context$2$0.next = 18;
          return _regeneratorRuntime.awrap(driver.getLocation(flickElem));

        case 18:
          l2 = context$2$0.sent;

          // UI Atomation's flickFromTo() seems to be not prices enough.
          // And in most cases safari receives the last touchmove event
          // with the coordinates which are by one pixel less than desired
          // destination. Hence allow some deviation here.
          l2.x.should.be.within(l1.x + dx - 2, l1.x + dx + 2);
          l2.y.should.be.within(l1.y + dy - 2, l1.y + dy + 2);

        case 21:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should not be able to do native touch actions', function callee$1$0() {
    var el, gestures;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

        case 2:
          el = context$2$0.sent;
          gestures = [{ action: 'press', options: { element: el } }, { action: 'release' }];
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.performTouch(gestures).should.eventually.be.rejected);

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS90b3VjaC1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7MkJBQWtCLGdCQUFnQjs7OzswQkFDbEIsZ0JBQWdCOzs7O3dCQUNsQixVQUFVOzs7OzhCQUNhLG9CQUFvQjs7Ozs7QUFNekQsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsWUFBWTs7O0FBQ2pDLE1BQUksQ0FBQyxPQUFPLHNDQUFzQixDQUFDOztBQUVuQyxNQUFNLE1BQU0sR0FBRyw4QkFBTSxJQUFJLEVBQUU7QUFDekIsZUFBVyxFQUFFLFFBQVE7R0FDdEIsQ0FBQyxDQUFDLE1BQU0sQ0FBQzs7QUFFVixJQUFFLENBQUMsc0JBQXNCLEVBQUU7UUFFckIsU0FBUyxFQUVULEVBQUUsRUFDRixFQUFFLEVBQU8sRUFBRSxFQU1YLEVBQUU7Ozs7OzJDQVZBLE1BQU0sQ0FBQyxNQUFNLENBQUksd0JBQUksY0FBYyxnQkFBYTs7OzsyQ0FDaEMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDOzs7QUFBdkQsbUJBQVM7OzJDQUVFLE1BQU0sQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDOzs7QUFBeEMsWUFBRTtBQUNGLFlBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUU7OzJDQUVGLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQzs7O0FBQXZELG1CQUFTOzsyQ0FDSCxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQzs7OzsyQ0FDbEMsc0JBQUUsS0FBSyxDQUFDLElBQUksQ0FBQzs7OzsyQ0FFSixNQUFNLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQzs7O0FBQXhDLFlBQUU7Ozs7OztBQU1OLFlBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3BELFlBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDOzs7Ozs7O0dBQ3JELENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsK0NBQStDLEVBQUU7UUFDOUMsRUFBRSxFQUNGLFFBQVE7Ozs7OzJDQURHLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQzs7O0FBQS9DLFlBQUU7QUFDRixrQkFBUSxHQUFHLENBQ2IsRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxFQUFDLE9BQU8sRUFBRSxFQUFFLEVBQUMsRUFBQyxFQUN6QyxFQUFDLE1BQU0sRUFBRSxTQUFTLEVBQUMsQ0FDcEI7OzJDQUNLLE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsUUFBUTs7Ozs7OztHQUNsRSxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvc2FmYXJpL3RvdWNoLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNldHVwIGZyb20gJy4vc2FmYXJpLXNldHVwJztcbmltcG9ydCBlbnYgZnJvbSAnLi4vaGVscGVycy9lbnYnO1xuaW1wb3J0IEIgZnJvbSAnYmx1ZWJpcmQnO1xuaW1wb3J0IHsgTU9DSEFfU0FGQVJJX1RJTUVPVVQgfSBmcm9tICcuLi9oZWxwZXJzL3Nlc3Npb24nO1xuXG5cbi8qKlxuICogdG91Y2ggY29tbWFuZCBkb2Vzbid0IHdvcmtcbiAqL1xuZGVzY3JpYmUuc2tpcCgndG91Y2gnLCBmdW5jdGlvbiAoKSB7XG4gIHRoaXMudGltZW91dChNT0NIQV9TQUZBUklfVElNRU9VVCk7XG5cbiAgY29uc3QgZHJpdmVyID0gc2V0dXAodGhpcywge1xuICAgIGJyb3dzZXJOYW1lOiBcInNhZmFyaVwiXG4gIH0pLmRyaXZlcjtcblxuICBpdCgnc2hvdWxkIGZsaWNrIGVsZW1lbnQnLCBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgZHJpdmVyLnNldFVybChgJHtlbnYuVEVTVF9FTkRfUE9JTlR9dG91Y2guaHRtbGApO1xuICAgIGxldCBmbGlja0VsZW0gPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2lkJywgJ2ZsaWNrRWxlbScpO1xuXG4gICAgbGV0IGwxID0gYXdhaXQgZHJpdmVyLmdldExvY2F0aW9uKGZsaWNrRWxlbSk7XG4gICAgbGV0IGR4ID0gMzAsIGR5ID0gMzA7XG5cbiAgICBmbGlja0VsZW0gPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2lkJywgJ2ZsaWNrRWxlbScpO1xuICAgIGF3YWl0IGRyaXZlci5mbGljayhmbGlja0VsZW0sIGR4LCBkeSwgMCk7XG4gICAgYXdhaXQgQi5kZWxheSgxMDAwKTtcblxuICAgIGxldCBsMiA9IGF3YWl0IGRyaXZlci5nZXRMb2NhdGlvbihmbGlja0VsZW0pO1xuXG4gICAgLy8gVUkgQXRvbWF0aW9uJ3MgZmxpY2tGcm9tVG8oKSBzZWVtcyB0byBiZSBub3QgcHJpY2VzIGVub3VnaC5cbiAgICAvLyBBbmQgaW4gbW9zdCBjYXNlcyBzYWZhcmkgcmVjZWl2ZXMgdGhlIGxhc3QgdG91Y2htb3ZlIGV2ZW50XG4gICAgLy8gd2l0aCB0aGUgY29vcmRpbmF0ZXMgd2hpY2ggYXJlIGJ5IG9uZSBwaXhlbCBsZXNzIHRoYW4gZGVzaXJlZFxuICAgIC8vIGRlc3RpbmF0aW9uLiBIZW5jZSBhbGxvdyBzb21lIGRldmlhdGlvbiBoZXJlLlxuICAgIGwyLnguc2hvdWxkLmJlLndpdGhpbihsMS54ICsgZHggLSAyLCBsMS54ICsgZHggKyAyKTtcbiAgICBsMi55LnNob3VsZC5iZS53aXRoaW4obDEueSArIGR5IC0gMiwgbDEueSArIGR5ICsgMik7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgbm90IGJlIGFibGUgdG8gZG8gbmF0aXZlIHRvdWNoIGFjdGlvbnMnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdjb21tZW50cycpO1xuICAgIGxldCBnZXN0dXJlcyA9IFtcbiAgICAgIHthY3Rpb246ICdwcmVzcycsIG9wdGlvbnM6IHtlbGVtZW50OiBlbH19LFxuICAgICAge2FjdGlvbjogJ3JlbGVhc2UnfVxuICAgIF07XG4gICAgYXdhaXQgZHJpdmVyLnBlcmZvcm1Ub3VjaChnZXN0dXJlcykuc2hvdWxkLmV2ZW50dWFsbHkuYmUucmVqZWN0ZWQ7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
