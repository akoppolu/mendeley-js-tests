/* globals expect */
'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _safariSetup = require('../safari-setup');

var _safariSetup2 = _interopRequireDefault(_safariSetup);

var _helpersWebview = require('../../helpers/webview');

var _helpersSession = require('../../helpers/session');

var SCROLL_INTO_VIEW = 'return arguments[0].scrollIntoView(true);';
var GET_RIGHT_INNERHTML = 'return document.body.innerHTML.indexOf(\'I am some page content\') > 0';
var GET_WRONG_INNERHTML = 'return document.body.innerHTML.indexOf(\'I am not some page content\') > 0';
var GET_ELEM_BY_TAGNAME = 'return document.getElementsByTagName(\'a\');';

describe('safari - webview - execute', function () {
  this.timeout(_helpersSession.MOCHA_SAFARI_TIMEOUT);

  describe('http', function () {
    var _this = this;

    var driver = (0, _safariSetup2['default'])(this, _desired2['default']).driver;
    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(_desired2['default'], driver));

          case 2:
            return context$3$0.abrupt('return', context$3$0.sent);

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.deleteSession());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    describe('synchronous', function () {
      var _this2 = this;

      it('should bubble up javascript errors', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute('\'nan\'--').should.eventually.be.rejected);

            case 2:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });

      it('should eval javascript', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute('return 1'));

            case 2:
              context$4$0.sent.should.be.equal(1);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });

      it('should not be returning hardcoded results', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute('return 1+1'));

            case 2:
              context$4$0.sent.should.be.equal(2);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });

      it('should return nothing when you don\'t explicitly return', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute('1+1'));

            case 2:
              context$4$0.t0 = context$4$0.sent;
              expect(context$4$0.t0).to.not.exist;

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });

      it('should execute code inside the web view', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute(GET_RIGHT_INNERHTML));

            case 2:
              context$4$0.sent.should.be.ok;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.execute(GET_WRONG_INNERHTML));

            case 5:
              context$4$0.sent.should.not.be.ok;

            case 6:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });

      it('should convert selenium element arg to webview element', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'useragent'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.execute(SCROLL_INTO_VIEW, [el]));

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });

      it('should catch stale or undefined element as arg', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'useragent'));

            case 2:
              el = context$4$0.sent;
              return context$4$0.abrupt('return', driver.execute(SCROLL_INTO_VIEW, [{ 'ELEMENT': el.value + 1 }]).should.beRejected);

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });

      it('should be able to return multiple elements from javascript', function callee$3$0() {
        var res;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute(GET_ELEM_BY_TAGNAME));

            case 2:
              res = context$4$0.sent;

              expect(res).to.have.length.above(0);

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });
      it('should pass along non-element arguments', function callee$3$0() {
        var arg;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              arg = 'non-element-argument';
              context$4$0.next = 3;
              return _regeneratorRuntime.awrap(driver.execute('var args = Array.prototype.slice.call(arguments, 0); return args[0];', [arg]));

            case 3:
              context$4$0.t0 = arg;
              context$4$0.sent.should.be.equal(context$4$0.t0);

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });
      it('should handle return values correctly', function callee$3$0() {
        var arg;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              arg = ['one', 'two', 'three'];
              context$4$0.next = 3;
              return _regeneratorRuntime.awrap(driver.execute('var args = Array.prototype.slice.call(arguments, 0); return args;', arg));

            case 3:
              context$4$0.t0 = arg;
              context$4$0.sent.should.eql(context$4$0.t0);

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });
    });

    describe('asynchronous', function () {
      var _this3 = this;

      it('should bubble up javascript errors', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute('\'nan\'--').should.eventually.be.rejected);

            case 2:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this3);
      });

      it('should execute async javascript', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.asyncScriptTimeout(1000));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(driver.executeAsync('arguments[arguments.length - 1](123);'));

            case 4:
              context$4$0.sent.should.be.equal(123);

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this3);
      });

      it('should timeout when callback is not invoked', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.asyncScriptTimeout(1000));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(driver.executeAsync('return 1 + 2').should.eventually.be.rejected);

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this3);
      });
    });
  });

  describe('https', function () {
    var _this4 = this;

    var driver = (0, _safariSetup2['default'])(this, _Object$assign({}, _desired2['default'], { enableAsyncExecuteFromHttps: true })).driver;
    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(_desired2['default'], driver, 'https://www.google.com', 'Google'));

          case 2:
            return context$3$0.abrupt('return', context$3$0.sent);

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this4);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.deleteSession());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    describe('synchronous', function () {
      var _this5 = this;

      it('should bubble up javascript errors', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute('\'nan\'--').should.eventually.be.rejected);

            case 2:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should eval javascript', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute('return 1'));

            case 2:
              context$4$0.sent.should.be.equal(1);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should not be returning hardcoded results', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute('return 1+1'));

            case 2:
              context$4$0.sent.should.be.equal(2);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should return nothing when you don\'t explicitly return', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute('1+1'));

            case 2:
              context$4$0.t0 = context$4$0.sent;
              expect(context$4$0.t0).to.not.exist;

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should pass along non-element arguments', function callee$3$0() {
        var arg;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              arg = 'non-element-argument';
              context$4$0.next = 3;
              return _regeneratorRuntime.awrap(driver.execute('var args = Array.prototype.slice.call(arguments, 0); return args[0];', [arg]));

            case 3:
              context$4$0.t0 = arg;
              context$4$0.sent.should.be.equal(context$4$0.t0);

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should handle return values correctly', function callee$3$0() {
        var arg;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              arg = ['one', 'two', 'three'];
              context$4$0.next = 3;
              return _regeneratorRuntime.awrap(driver.execute('var args = Array.prototype.slice.call(arguments, 0); return args;', arg));

            case 3:
              context$4$0.t0 = arg;
              context$4$0.sent.should.eql(context$4$0.t0);

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });
    });

    describe('asynchronous', function () {
      var _this6 = this;

      it('should bubble up javascript errors', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.execute('\'nan\'--').should.eventually.be.rejected);

            case 2:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this6);
      });

      it('should execute async javascript', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.asyncScriptTimeout(1000));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(driver.executeAsync('arguments[arguments.length - 1](123);'));

            case 4:
              context$4$0.sent.should.be.equal(123);

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this6);
      });

      it('should timeout when callback is not invoked', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.asyncScriptTimeout(1000));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(driver.executeAsync('return 1 + 2').should.eventually.be.rejected);

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this6);
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
