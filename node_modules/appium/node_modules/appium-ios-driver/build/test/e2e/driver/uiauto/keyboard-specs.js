require('source-map-support').install();

/* globals $ */

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _base = require('./base');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

describe('uiauto - keyboard', function () {
  var imports = { post: ['uiauto/lib/mechanic-ext/gesture-ext.js', 'uiauto/lib/mechanic-ext/device-ext.js', 'uiauto/lib/mechanic-ext/keyboard-ext.js', 'uiauto/lib/element-patch/nil-patch.js'] };
  (0, _base.globalInit)(this, { imports: imports, bootstrap: 'basic' });

  describe('hide keyboard', function () {
    var _this = this;

    /* globals rootPage: true */
    var ctx = undefined;
    beforeEach(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _base.instrumentsInstanceInit)());

          case 2:
            ctx = context$3$0.sent;

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    afterEach(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _base.killAll)(ctx));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    // afterEach(async () => {
    //   await ctx.execFunc(
    //     function () {
    //       $.back();
    //       $.delay(1000);
    //     }
    //   );
    // });

    _lodash2['default'].each(['pressKey', 'press'], function (strategy) {
      var _this2 = this;

      it('should hide the keyboard by pressing the done key (' + strategy + ')', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(ctx.execFunc(function (strategy) {
                rootPage.clickMenuItem('Text Fields');
                $('textfield').first().tap();
                $('#Done').should.have.length(1);
                $.hideKeyboard(strategy, 'Done');
                $('#Done').should.have.length(0);
              }, [strategy]));

            case 2:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });
    });

    _lodash2['default'].each(['tapOutside', 'tapOut'], function (strategy) {
      var _this3 = this;

      it('should hide the keyboard by tapping outside (' + strategy + ')', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(ctx.execFunc(function (strategy) {
                rootPage.clickMenuItem('Web View');
                $('textfield').first().tap();
                $('#Go').should.have.length(1);
                $.hideKeyboard(strategy);
                $('#Go').should.have.length(0);
              }, [strategy]));

            case 2:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this3);
      });
    });

    it('should hide the keyboard with the default strategy', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(ctx.execFunc(function () {
              rootPage.clickMenuItem('Web View');
              $('textfield').first().tap();
              $('#Go').should.have.length(1);
              $.hideKeyboard('default');
              $('#Go').should.have.length(0);
            }));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2RyaXZlci91aWF1dG8va2V5Ym9hcmQtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O29CQUc2RCxRQUFROztzQkFDdkQsUUFBUTs7OztBQUd0QixRQUFRLENBQUMsbUJBQW1CLEVBQUUsWUFBWTtBQUN4QyxNQUFJLE9BQU8sR0FBRyxFQUFFLElBQUksRUFBRSxDQUNwQix3Q0FBd0MsRUFDeEMsdUNBQXVDLEVBQ3ZDLHlDQUF5QyxFQUN6Qyx1Q0FBdUMsQ0FDeEMsRUFBQyxDQUFDO0FBQ0gsd0JBQVcsSUFBSSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQzs7QUFFekQsVUFBUSxDQUFDLGVBQWUsRUFBRSxZQUFZOzs7O0FBRXBDLFFBQUksR0FBRyxZQUFBLENBQUM7QUFDUixjQUFVLENBQUM7Ozs7OzZDQUNHLG9DQUF5Qjs7O0FBQXJDLGVBQUc7Ozs7Ozs7S0FDSixDQUFDLENBQUM7QUFDSCxhQUFTLENBQUM7Ozs7OzZDQUNGLG1CQUFRLEdBQUcsQ0FBQzs7Ozs7OztLQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7O0FBV0gsd0JBQUUsSUFBSSxDQUFDLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxFQUFFLFVBQVUsUUFBUSxFQUFFOzs7QUFDaEQsUUFBRSx5REFBdUQsUUFBUSxRQUFLOzs7OzsrQ0FDOUQsR0FBRyxDQUFDLFFBQVEsQ0FDaEIsVUFBVSxRQUFRLEVBQUU7QUFDbEIsd0JBQVEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDdEMsaUJBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUM3QixpQkFBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pDLGlCQUFDLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNqQyxpQkFBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2VBQ2xDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FDZDs7Ozs7OztPQUNGLENBQUMsQ0FBQztLQUNKLENBQUMsQ0FBQzs7QUFFSCx3QkFBRSxJQUFJLENBQUMsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLEVBQUUsVUFBVSxRQUFRLEVBQUU7OztBQUNuRCxRQUFFLG1EQUFpRCxRQUFRLFFBQUs7Ozs7OytDQUN4RCxHQUFHLENBQUMsUUFBUSxDQUNoQixVQUFVLFFBQVEsRUFBRTtBQUNsQix3QkFBUSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNuQyxpQkFBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzdCLGlCQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0IsaUJBQUMsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDekIsaUJBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztlQUNoQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQ2Q7Ozs7Ozs7T0FDRixDQUFDLENBQUM7S0FDSixDQUFDLENBQUM7O0FBRUgsTUFBRSxDQUFDLG9EQUFvRCxFQUFFOzs7Ozs2Q0FDakQsR0FBRyxDQUFDLFFBQVEsQ0FDaEIsWUFBWTtBQUNWLHNCQUFRLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ25DLGVBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUM3QixlQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0IsZUFBQyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUMxQixlQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDaEMsQ0FDRjs7Ozs7OztLQUNGLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2UyZS9kcml2ZXIvdWlhdXRvL2tleWJvYXJkLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHJhbnNwaWxlOm1vY2hhXG4vKiBnbG9iYWxzICQgKi9cblxuaW1wb3J0IHsgaW5zdHJ1bWVudHNJbnN0YW5jZUluaXQsIGdsb2JhbEluaXQsIGtpbGxBbGwgfSBmcm9tICcuL2Jhc2UnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuXG5kZXNjcmliZSgndWlhdXRvIC0ga2V5Ym9hcmQnLCBmdW5jdGlvbiAoKSB7XG4gIGxldCBpbXBvcnRzID0geyBwb3N0OiBbXG4gICAgJ3VpYXV0by9saWIvbWVjaGFuaWMtZXh0L2dlc3R1cmUtZXh0LmpzJyxcbiAgICAndWlhdXRvL2xpYi9tZWNoYW5pYy1leHQvZGV2aWNlLWV4dC5qcycsXG4gICAgJ3VpYXV0by9saWIvbWVjaGFuaWMtZXh0L2tleWJvYXJkLWV4dC5qcycsXG4gICAgJ3VpYXV0by9saWIvZWxlbWVudC1wYXRjaC9uaWwtcGF0Y2guanMnXG4gIF19O1xuICBnbG9iYWxJbml0KHRoaXMsIHtpbXBvcnRzOiBpbXBvcnRzLCBib290c3RyYXA6ICdiYXNpYyd9KTtcblxuICBkZXNjcmliZSgnaGlkZSBrZXlib2FyZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAvKiBnbG9iYWxzIHJvb3RQYWdlOiB0cnVlICovXG4gICAgbGV0IGN0eDtcbiAgICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IHtcbiAgICAgIGN0eCA9IGF3YWl0IGluc3RydW1lbnRzSW5zdGFuY2VJbml0KCk7XG4gICAgfSk7XG4gICAgYWZ0ZXJFYWNoKGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGtpbGxBbGwoY3R4KTtcbiAgICB9KTtcblxuICAgIC8vIGFmdGVyRWFjaChhc3luYyAoKSA9PiB7XG4gICAgLy8gICBhd2FpdCBjdHguZXhlY0Z1bmMoXG4gICAgLy8gICAgIGZ1bmN0aW9uICgpIHtcbiAgICAvLyAgICAgICAkLmJhY2soKTtcbiAgICAvLyAgICAgICAkLmRlbGF5KDEwMDApO1xuICAgIC8vICAgICB9XG4gICAgLy8gICApO1xuICAgIC8vIH0pO1xuXG4gICAgXy5lYWNoKFsncHJlc3NLZXknLCAncHJlc3MnXSwgZnVuY3Rpb24gKHN0cmF0ZWd5KSB7XG4gICAgICBpdChgc2hvdWxkIGhpZGUgdGhlIGtleWJvYXJkIGJ5IHByZXNzaW5nIHRoZSBkb25lIGtleSAoJHtzdHJhdGVneX0pYCwgYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCBjdHguZXhlY0Z1bmMoXG4gICAgICAgICAgZnVuY3Rpb24gKHN0cmF0ZWd5KSB7XG4gICAgICAgICAgICByb290UGFnZS5jbGlja01lbnVJdGVtKCdUZXh0IEZpZWxkcycpO1xuICAgICAgICAgICAgJCgndGV4dGZpZWxkJykuZmlyc3QoKS50YXAoKTtcbiAgICAgICAgICAgICQoJyNEb25lJykuc2hvdWxkLmhhdmUubGVuZ3RoKDEpO1xuICAgICAgICAgICAgJC5oaWRlS2V5Ym9hcmQoc3RyYXRlZ3ksICdEb25lJyk7XG4gICAgICAgICAgICAkKCcjRG9uZScpLnNob3VsZC5oYXZlLmxlbmd0aCgwKTtcbiAgICAgICAgICB9LCBbc3RyYXRlZ3ldXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIF8uZWFjaChbJ3RhcE91dHNpZGUnLCAndGFwT3V0J10sIGZ1bmN0aW9uIChzdHJhdGVneSkge1xuICAgICAgaXQoYHNob3VsZCBoaWRlIHRoZSBrZXlib2FyZCBieSB0YXBwaW5nIG91dHNpZGUgKCR7c3RyYXRlZ3l9KWAsIGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgY3R4LmV4ZWNGdW5jKFxuICAgICAgICAgIGZ1bmN0aW9uIChzdHJhdGVneSkge1xuICAgICAgICAgICAgcm9vdFBhZ2UuY2xpY2tNZW51SXRlbSgnV2ViIFZpZXcnKTtcbiAgICAgICAgICAgICQoJ3RleHRmaWVsZCcpLmZpcnN0KCkudGFwKCk7XG4gICAgICAgICAgICAkKCcjR28nKS5zaG91bGQuaGF2ZS5sZW5ndGgoMSk7XG4gICAgICAgICAgICAkLmhpZGVLZXlib2FyZChzdHJhdGVneSk7XG4gICAgICAgICAgICAkKCcjR28nKS5zaG91bGQuaGF2ZS5sZW5ndGgoMCk7XG4gICAgICAgICAgfSwgW3N0cmF0ZWd5XVxuICAgICAgICApO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGhpZGUgdGhlIGtleWJvYXJkIHdpdGggdGhlIGRlZmF1bHQgc3RyYXRlZ3knLCBhc3luYyAoKSA9PiB7XG4gICAgICBhd2FpdCBjdHguZXhlY0Z1bmMoXG4gICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByb290UGFnZS5jbGlja01lbnVJdGVtKCdXZWIgVmlldycpO1xuICAgICAgICAgICQoJ3RleHRmaWVsZCcpLmZpcnN0KCkudGFwKCk7XG4gICAgICAgICAgJCgnI0dvJykuc2hvdWxkLmhhdmUubGVuZ3RoKDEpO1xuICAgICAgICAgICQuaGlkZUtleWJvYXJkKCdkZWZhdWx0Jyk7XG4gICAgICAgICAgJCgnI0dvJykuc2hvdWxkLmhhdmUubGVuZ3RoKDApO1xuICAgICAgICB9XG4gICAgICApO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi8uLiJ9
