require('source-map-support').install();

/* globals $ */

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _base = require('./base');

describe('uiauto - nil', function () {
  var _this = this;

  var imports = { post: ['uiauto/lib/element-patch/nil-patch.js', 'uiauto/lib/mechanic-ext/basics-ext.js'] };
  (0, _base.globalInit)(this, { imports: imports, bootstrap: 'basic' });
  var ctx = undefined;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _base.instrumentsInstanceInit)());

        case 2:
          ctx = context$2$0.sent;

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _base.killAll)(ctx));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  afterEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(ctx.execFunc(function () {
            $('#UICatalog').first().tap();
            $.delay(1000);
          }));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('isNil should return true for not nil elements', function callee$1$0() {
    var res;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(ctx.execFunc(function () {
            return $('cell')[0].isNil();
          }));

        case 2:
          res = context$2$0.sent;

          res.should.be['false'];

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('isNil should return true for nil elements', function callee$1$0() {
    var res;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(ctx.execFunc(function () {
            return $('cell')[0].images().isNil();
          }));

        case 2:
          res = context$2$0.sent;

          res.should.be['true'];

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('isNil should return true for manually created UIAElementNil', function callee$1$0() {
    var res;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(ctx.execFunc(function () {
            return $.nil.isNil();
          }));

        case 2:
          res = context$2$0.sent;

          res.should.be['true'];

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2RyaXZlci91aWF1dG8vbmlsLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7b0JBRzZELFFBQVE7O0FBR3JFLFFBQVEsQ0FBQyxjQUFjLEVBQUUsWUFBWTs7O0FBQ25DLE1BQUksT0FBTyxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQ3BCLHVDQUF1QyxFQUN2Qyx1Q0FBdUMsQ0FDeEMsRUFBQyxDQUFDO0FBQ0gsd0JBQVcsSUFBSSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUN6RCxNQUFJLEdBQUcsWUFBQSxDQUFDO0FBQ1IsUUFBTSxDQUFDOzs7OzsyQ0FDTyxvQ0FBeUI7OztBQUFyQyxhQUFHOzs7Ozs7O0dBQ0osQ0FBQyxDQUFDO0FBQ0gsT0FBSyxDQUFDOzs7OzsyQ0FDRSxtQkFBUSxHQUFHLENBQUM7Ozs7Ozs7R0FDbkIsQ0FBQyxDQUFDOztBQUVILFdBQVMsQ0FBQzs7Ozs7MkNBQ0YsR0FBRyxDQUFDLFFBQVEsQ0FDaEIsWUFBWTtBQUNWLGFBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUM5QixhQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1dBQ2YsQ0FDRjs7Ozs7OztHQUNGLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsK0NBQStDLEVBQUU7UUFDOUMsR0FBRzs7Ozs7MkNBQVMsR0FBRyxDQUFDLFFBQVEsQ0FDMUIsWUFBWTtBQUNWLG1CQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztXQUM3QixDQUNGOzs7QUFKRyxhQUFHOztBQUtQLGFBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxTQUFNLENBQUM7Ozs7Ozs7R0FDckIsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQywyQ0FBMkMsRUFBRTtRQUMxQyxHQUFHOzs7OzsyQ0FBUyxHQUFHLENBQUMsUUFBUSxDQUMxQixZQUFZO0FBQ1YsbUJBQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1dBQ3RDLENBQ0Y7OztBQUpHLGFBQUc7O0FBS1AsYUFBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLFFBQUssQ0FBQzs7Ozs7OztHQUNwQixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLDZEQUE2RCxFQUFFO1FBQzVELEdBQUc7Ozs7OzJDQUFTLEdBQUcsQ0FBQyxRQUFRLENBQzFCLFlBQVk7QUFDVixtQkFBTyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDO1dBQ3RCLENBQ0Y7OztBQUpHLGFBQUc7O0FBS1AsYUFBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLFFBQUssQ0FBQzs7Ozs7OztHQUNwQixDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvZHJpdmVyL3VpYXV0by9uaWwtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0cmFuc3BpbGU6bW9jaGFcbi8qIGdsb2JhbHMgJCAqL1xuXG5pbXBvcnQgeyBpbnN0cnVtZW50c0luc3RhbmNlSW5pdCwgZ2xvYmFsSW5pdCwga2lsbEFsbCB9IGZyb20gJy4vYmFzZSc7XG5cblxuZGVzY3JpYmUoJ3VpYXV0byAtIG5pbCcsIGZ1bmN0aW9uICgpIHtcbiAgbGV0IGltcG9ydHMgPSB7IHBvc3Q6IFtcbiAgICAndWlhdXRvL2xpYi9lbGVtZW50LXBhdGNoL25pbC1wYXRjaC5qcycsXG4gICAgJ3VpYXV0by9saWIvbWVjaGFuaWMtZXh0L2Jhc2ljcy1leHQuanMnXG4gIF19O1xuICBnbG9iYWxJbml0KHRoaXMsIHtpbXBvcnRzOiBpbXBvcnRzLCBib290c3RyYXA6ICdiYXNpYyd9KTtcbiAgbGV0IGN0eDtcbiAgYmVmb3JlKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBjdHggPSBhd2FpdCBpbnN0cnVtZW50c0luc3RhbmNlSW5pdCgpO1xuICB9KTtcbiAgYWZ0ZXIoYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGtpbGxBbGwoY3R4KTtcbiAgfSk7XG5cbiAgYWZ0ZXJFYWNoKGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBjdHguZXhlY0Z1bmMoXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQoJyNVSUNhdGFsb2cnKS5maXJzdCgpLnRhcCgpO1xuICAgICAgICAkLmRlbGF5KDEwMDApO1xuICAgICAgfVxuICAgICk7XG4gIH0pO1xuXG4gIGl0KCdpc05pbCBzaG91bGQgcmV0dXJuIHRydWUgZm9yIG5vdCBuaWwgZWxlbWVudHMnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IHJlcyA9IGF3YWl0IGN0eC5leGVjRnVuYyhcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICQoJ2NlbGwnKVswXS5pc05pbCgpO1xuICAgICAgfVxuICAgICk7XG4gICAgcmVzLnNob3VsZC5iZS5mYWxzZTtcbiAgfSk7XG5cbiAgaXQoJ2lzTmlsIHNob3VsZCByZXR1cm4gdHJ1ZSBmb3IgbmlsIGVsZW1lbnRzJywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCByZXMgPSBhd2FpdCBjdHguZXhlY0Z1bmMoXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAkKCdjZWxsJylbMF0uaW1hZ2VzKCkuaXNOaWwoKTtcbiAgICAgIH1cbiAgICApO1xuICAgIHJlcy5zaG91bGQuYmUudHJ1ZTtcbiAgfSk7XG5cbiAgaXQoJ2lzTmlsIHNob3VsZCByZXR1cm4gdHJ1ZSBmb3IgbWFudWFsbHkgY3JlYXRlZCBVSUFFbGVtZW50TmlsJywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCByZXMgPSBhd2FpdCBjdHguZXhlY0Z1bmMoXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAkLm5pbC5pc05pbCgpO1xuICAgICAgfVxuICAgICk7XG4gICAgcmVzLnNob3VsZC5iZS50cnVlO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi8uLiJ9
