'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _libUiautoBuildScript = require('../../../../lib/uiauto/build-script');

var _libUiautoBuildScript2 = _interopRequireDefault(_libUiautoBuildScript);

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

_chai2['default'].should();

describe('uiauto - build-script', function () {
  it('should include all dependencies in a combined script', function callee$1$0() {
    var path, script;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          path = 'test/assets/testFiles/test1.js';
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _libUiautoBuildScript2['default'])(path));

        case 3:
          script = context$2$0.sent;

          script.should.include("var testFileNum = '1';");
          script.should.include("var testFileNum = '2';");
          script.should.include("var testFileNum = '4';");

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should not repeat imports', function callee$1$0() {
    var path;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          path = 'test/assets/testFiles/test3.js';
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _libUiautoBuildScript2['default'])(path).should.be.rejected);

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should take in extra imports', function callee$1$0() {
    var path, script;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          path = 'test/assets/testFiles/test4.js';
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _libUiautoBuildScript2['default'])(path, ['./test2.js']));

        case 3:
          script = context$2$0.sent;

          script.should.include("var testFileNum = '2';");
          script.should.include("var testFileNum = '4';");

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2RyaXZlci91aWF1dG8vYnVpbGQtc2NyaXB0LXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztvQ0FDd0IscUNBQXFDOzs7O29CQUM1QyxNQUFNOzs7O0FBRXZCLGtCQUFLLE1BQU0sRUFBRSxDQUFDOztBQUVkLFFBQVEsQ0FBQyx1QkFBdUIsRUFBRSxZQUFZO0FBQzVDLElBQUUsQ0FBQyxzREFBc0QsRUFBRTtRQUNyRCxJQUFJLEVBQ0osTUFBTTs7OztBQUROLGNBQUksR0FBRyxnQ0FBZ0M7OzJDQUN4Qix1Q0FBWSxJQUFJLENBQUM7OztBQUFoQyxnQkFBTTs7QUFDVixnQkFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQztBQUNoRCxnQkFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQztBQUNoRCxnQkFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQzs7Ozs7OztHQUNqRCxDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLDJCQUEyQixFQUFFO1FBQzFCLElBQUk7Ozs7QUFBSixjQUFJLEdBQUcsZ0NBQWdDOzsyQ0FDckMsdUNBQVksSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxRQUFROzs7Ozs7O0dBQzNDLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsOEJBQThCLEVBQUU7UUFDN0IsSUFBSSxFQUNKLE1BQU07Ozs7QUFETixjQUFJLEdBQUcsZ0NBQWdDOzsyQ0FDeEIsdUNBQVksSUFBSSxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUM7OztBQUFoRCxnQkFBTTs7QUFDVixnQkFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQztBQUNoRCxnQkFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQzs7Ozs7OztHQUNqRCxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvZHJpdmVyL3VpYXV0by9idWlsZC1zY3JpcHQtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBidWlsZFNjcmlwdCBmcm9tICcuLi8uLi8uLi8uLi9saWIvdWlhdXRvL2J1aWxkLXNjcmlwdCc7XG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcblxuY2hhaS5zaG91bGQoKTtcblxuZGVzY3JpYmUoJ3VpYXV0byAtIGJ1aWxkLXNjcmlwdCcsIGZ1bmN0aW9uICgpIHtcbiAgaXQoJ3Nob3VsZCBpbmNsdWRlIGFsbCBkZXBlbmRlbmNpZXMgaW4gYSBjb21iaW5lZCBzY3JpcHQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IHBhdGggPSAndGVzdC9hc3NldHMvdGVzdEZpbGVzL3Rlc3QxLmpzJztcbiAgICBsZXQgc2NyaXB0ID0gYXdhaXQgYnVpbGRTY3JpcHQocGF0aCk7XG4gICAgc2NyaXB0LnNob3VsZC5pbmNsdWRlKFwidmFyIHRlc3RGaWxlTnVtID0gJzEnO1wiKTtcbiAgICBzY3JpcHQuc2hvdWxkLmluY2x1ZGUoXCJ2YXIgdGVzdEZpbGVOdW0gPSAnMic7XCIpO1xuICAgIHNjcmlwdC5zaG91bGQuaW5jbHVkZShcInZhciB0ZXN0RmlsZU51bSA9ICc0JztcIik7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgbm90IHJlcGVhdCBpbXBvcnRzJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGxldCBwYXRoID0gJ3Rlc3QvYXNzZXRzL3Rlc3RGaWxlcy90ZXN0My5qcyc7XG4gICAgYXdhaXQgYnVpbGRTY3JpcHQocGF0aCkuc2hvdWxkLmJlLnJlamVjdGVkO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIHRha2UgaW4gZXh0cmEgaW1wb3J0cycsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgcGF0aCA9ICd0ZXN0L2Fzc2V0cy90ZXN0RmlsZXMvdGVzdDQuanMnO1xuICAgIGxldCBzY3JpcHQgPSBhd2FpdCBidWlsZFNjcmlwdChwYXRoLCBbJy4vdGVzdDIuanMnXSk7XG4gICAgc2NyaXB0LnNob3VsZC5pbmNsdWRlKFwidmFyIHRlc3RGaWxlTnVtID0gJzInO1wiKTtcbiAgICBzY3JpcHQuc2hvdWxkLmluY2x1ZGUoXCJ2YXIgdGVzdEZpbGVOdW0gPSAnNCc7XCIpO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi8uLiJ9
