require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _helpersEnv = require('../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _libDriver = require('../../../lib/driver');

var _libUtils = require('../../../lib/utils');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _helpersSession = require('../helpers/session');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('driver', function () {
  var _this = this;

  this.timeout(_helpersSession.MOCHA_TIMEOUT);
  var driver = undefined;
  it('should start', function callee$1$0() {
    var caps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          caps = {
            app: _path2['default'].resolve(_libUtils.rootDir, 'test', 'assets', 'TestApp.zip'),
            platformName: 'iOS',
            showIOSLog: false,
            noReset: true,
            newCommandTimeout: 120
          };

          caps = _lodash2['default'].merge({}, _helpersEnv2['default'].CAPS, caps);
          driver = new _libDriver.IosDriver();
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.createSession(caps));

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should return server details', function callee$1$0() {
    var serverCaps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.getSession());

        case 2:
          serverCaps = context$2$0.sent;

          serverCaps.takesScreenshot.should.exist;

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should stop', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_bluebird2['default'].delay(2000));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2RyaXZlci9kcml2ZXItZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O3NCQUVjLFFBQVE7Ozs7MEJBQ04sZ0JBQWdCOzs7O3lCQUNOLHFCQUFxQjs7d0JBQ3ZCLG9CQUFvQjs7b0JBQzNCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O29CQUM1QixNQUFNOzs7O3dCQUNULFVBQVU7Ozs7OEJBQ00sb0JBQW9COztBQUdsRCxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFFBQVEsQ0FBQyxRQUFRLEVBQUUsWUFBWTs7O0FBQzdCLE1BQUksQ0FBQyxPQUFPLCtCQUFlLENBQUM7QUFDNUIsTUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLElBQUUsQ0FBQyxjQUFjLEVBQUU7UUFDYixJQUFJOzs7O0FBQUosY0FBSSxHQUFHO0FBQ1QsZUFBRyxFQUFFLGtCQUFLLE9BQU8sb0JBQVUsTUFBTSxFQUFFLFFBQVEsRUFBRSxhQUFhLENBQUM7QUFDM0Qsd0JBQVksRUFBRSxLQUFLO0FBQ25CLHNCQUFVLEVBQUUsS0FBSztBQUNqQixtQkFBTyxFQUFFLElBQUk7QUFDYiw2QkFBaUIsRUFBRSxHQUFHO1dBQ3ZCOztBQUNELGNBQUksR0FBRyxvQkFBRSxLQUFLLENBQUMsRUFBRSxFQUFFLHdCQUFJLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNuQyxnQkFBTSxHQUFHLDBCQUFlLENBQUM7OzJDQUNuQixNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQzs7Ozs7OztHQUNqQyxDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLDhCQUE4QixFQUFFO1FBQzdCLFVBQVU7Ozs7OzJDQUFTLE1BQU0sQ0FBQyxVQUFVLEVBQUU7OztBQUF0QyxvQkFBVTs7QUFDZCxvQkFBVSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDOzs7Ozs7O0dBQ3pDLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsYUFBYSxFQUFFOzs7OzsyQ0FDVixzQkFBRSxLQUFLLENBQUMsSUFBSSxDQUFDOzs7OzJDQUNiLE1BQU0sQ0FBQyxhQUFhLEVBQUU7Ozs7Ozs7R0FDN0IsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZTJlL2RyaXZlci9kcml2ZXItZTJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHJhbnNwaWxlOm1vY2hhXG5cbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgZW52IGZyb20gJy4uL2hlbHBlcnMvZW52JztcbmltcG9ydCB7IElvc0RyaXZlciB9IGZyb20gJy4uLy4uLy4uL2xpYi9kcml2ZXInO1xuaW1wb3J0IHsgcm9vdERpciB9IGZyb20gJy4uLy4uLy4uL2xpYi91dGlscyc7XG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IEIgZnJvbSAnYmx1ZWJpcmQnO1xuaW1wb3J0IHsgTU9DSEFfVElNRU9VVCB9IGZyb20gJy4uL2hlbHBlcnMvc2Vzc2lvbic7XG5cblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZGVzY3JpYmUoJ2RyaXZlcicsIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy50aW1lb3V0KE1PQ0hBX1RJTUVPVVQpO1xuICBsZXQgZHJpdmVyO1xuICBpdCgnc2hvdWxkIHN0YXJ0JywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBjYXBzID0ge1xuICAgICAgYXBwOiBwYXRoLnJlc29sdmUocm9vdERpciwgJ3Rlc3QnLCAnYXNzZXRzJywgJ1Rlc3RBcHAuemlwJyksXG4gICAgICBwbGF0Zm9ybU5hbWU6ICdpT1MnLFxuICAgICAgc2hvd0lPU0xvZzogZmFsc2UsXG4gICAgICBub1Jlc2V0OiB0cnVlLFxuICAgICAgbmV3Q29tbWFuZFRpbWVvdXQ6IDEyMFxuICAgIH07XG4gICAgY2FwcyA9IF8ubWVyZ2Uoe30sIGVudi5DQVBTLCBjYXBzKTtcbiAgICBkcml2ZXIgPSBuZXcgSW9zRHJpdmVyKCk7XG4gICAgYXdhaXQgZHJpdmVyLmNyZWF0ZVNlc3Npb24oY2Fwcyk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmV0dXJuIHNlcnZlciBkZXRhaWxzJywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBzZXJ2ZXJDYXBzID0gYXdhaXQgZHJpdmVyLmdldFNlc3Npb24oKTtcbiAgICBzZXJ2ZXJDYXBzLnRha2VzU2NyZWVuc2hvdC5zaG91bGQuZXhpc3Q7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgc3RvcCcsIGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBCLmRlbGF5KDIwMDApO1xuICAgIGF3YWl0IGRyaXZlci5kZWxldGVTZXNzaW9uKCk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
