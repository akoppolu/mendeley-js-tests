'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _helpersRecipes = require('../helpers/recipes');

describe('testapp - context methods', function () {
  var _this = this;

  var session = (0, _setupBase2['default'])(this, _desired2['default']);
  var driver = session.driver;

  it('getting list multiple times should not crash appium', function callee$1$0() {
    var i, contexts;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          i = 0;

        case 1:
          if (!(i < 8)) {
            context$2$0.next = 9;
            break;
          }

          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.getContexts());

        case 4:
          contexts = context$2$0.sent;

          contexts.should.have.length(1);

        case 6:
          i++;
          context$2$0.next = 1;
          break;

        case 9:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('setting context to \'null\' should work', function callee$1$0() {
    var contexts;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.getContexts());

        case 2:
          contexts = context$2$0.sent;

          contexts.should.have.length(1);
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.setContext(contexts[0]));

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.setContext(null));

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('setting context to \'NATIVE_APP\' should work', function callee$1$0() {
    var contexts;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.getContexts());

        case 2:
          contexts = context$2$0.sent;

          contexts.should.have.length(1);
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.setContext(contexts[0]));

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.setContext('NATIVE_APP'));

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('setting context to non-existent context should return \'NoSuchContext\' (status: 35)', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_bluebird2['default'].resolve(driver.setContext('WEBVIEW_42'))['catch'](_helpersRecipes.throwMatchableError).should.be.rejectedWith(/jsonwpCode: 35/));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3Rlc3RhcHAvY29udGV4dC1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7eUJBQWtCLGVBQWU7Ozs7dUJBQ2IsV0FBVzs7Ozt3QkFDakIsVUFBVTs7Ozs4QkFDWSxvQkFBb0I7O0FBRXhELFFBQVEsQ0FBQywyQkFBMkIsRUFBRSxZQUFZOzs7QUFDaEQsTUFBSSxPQUFPLEdBQUcsNEJBQU0sSUFBSSx1QkFBVSxDQUFDO0FBQ25DLE1BQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7O0FBRTVCLElBQUUsQ0FBQyxxREFBcUQsRUFBRTtRQUMvQyxDQUFDLEVBQ0osUUFBUTs7OztBQURMLFdBQUMsR0FBQyxDQUFDOzs7Z0JBQUUsQ0FBQyxHQUFDLENBQUMsQ0FBQTs7Ozs7OzJDQUNNLE1BQU0sQ0FBQyxXQUFXLEVBQUU7OztBQUFyQyxrQkFBUTs7QUFDWixrQkFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDOzs7QUFGZCxXQUFDLEVBQUU7Ozs7Ozs7OztHQUl2QixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLHlDQUF5QyxFQUFFO1FBQ3hDLFFBQVE7Ozs7OzJDQUFTLE1BQU0sQ0FBQyxXQUFXLEVBQUU7OztBQUFyQyxrQkFBUTs7QUFDWixrQkFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDOzsyQ0FDekIsTUFBTSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7Ozs7MkNBQzlCLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDOzs7Ozs7O0dBQzlCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsK0NBQStDLEVBQUU7UUFDOUMsUUFBUTs7Ozs7MkNBQVMsTUFBTSxDQUFDLFdBQVcsRUFBRTs7O0FBQXJDLGtCQUFROztBQUNaLGtCQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7OzJDQUN6QixNQUFNLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7OzsyQ0FDOUIsTUFBTSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUM7Ozs7Ozs7R0FDdEMsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxzRkFBc0YsRUFBRTs7Ozs7MkNBQ25GLHNCQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDLFNBQ3hDLHFDQUFxQixDQUMxQixNQUFNLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQzs7Ozs7OztHQUM1QyxDQUFDLENBQUM7Q0FFSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvdGVzdGFwcC9jb250ZXh0LXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNldHVwIGZyb20gXCIuLi9zZXR1cC1iYXNlXCI7XG5pbXBvcnQgZGVzaXJlZCBmcm9tICcuL2Rlc2lyZWQnO1xuaW1wb3J0IEIgZnJvbSAnYmx1ZWJpcmQnO1xuaW1wb3J0IHsgdGhyb3dNYXRjaGFibGVFcnJvciB9IGZyb20gJy4uL2hlbHBlcnMvcmVjaXBlcyc7XG5cbmRlc2NyaWJlKCd0ZXN0YXBwIC0gY29udGV4dCBtZXRob2RzJywgZnVuY3Rpb24gKCkge1xuICBsZXQgc2Vzc2lvbiA9IHNldHVwKHRoaXMsIGRlc2lyZWQpO1xuICBsZXQgZHJpdmVyID0gc2Vzc2lvbi5kcml2ZXI7XG5cbiAgaXQoJ2dldHRpbmcgbGlzdCBtdWx0aXBsZSB0aW1lcyBzaG91bGQgbm90IGNyYXNoIGFwcGl1bScsIGFzeW5jICgpID0+IHtcbiAgICBmb3IgKGxldCBpPTA7IGk8ODsgaSsrKSB7XG4gICAgICBsZXQgY29udGV4dHMgPSBhd2FpdCBkcml2ZXIuZ2V0Q29udGV4dHMoKTtcbiAgICAgIGNvbnRleHRzLnNob3VsZC5oYXZlLmxlbmd0aCgxKTtcbiAgICB9XG4gIH0pO1xuXG4gIGl0KCdzZXR0aW5nIGNvbnRleHQgdG8gXFwnbnVsbFxcJyBzaG91bGQgd29yaycsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgY29udGV4dHMgPSBhd2FpdCBkcml2ZXIuZ2V0Q29udGV4dHMoKTtcbiAgICBjb250ZXh0cy5zaG91bGQuaGF2ZS5sZW5ndGgoMSk7XG4gICAgYXdhaXQgZHJpdmVyLnNldENvbnRleHQoY29udGV4dHNbMF0pO1xuICAgIGF3YWl0IGRyaXZlci5zZXRDb250ZXh0KG51bGwpO1xuICB9KTtcblxuICBpdCgnc2V0dGluZyBjb250ZXh0IHRvIFxcJ05BVElWRV9BUFBcXCcgc2hvdWxkIHdvcmsnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IGNvbnRleHRzID0gYXdhaXQgZHJpdmVyLmdldENvbnRleHRzKCk7XG4gICAgY29udGV4dHMuc2hvdWxkLmhhdmUubGVuZ3RoKDEpO1xuICAgIGF3YWl0IGRyaXZlci5zZXRDb250ZXh0KGNvbnRleHRzWzBdKTtcbiAgICBhd2FpdCBkcml2ZXIuc2V0Q29udGV4dCgnTkFUSVZFX0FQUCcpO1xuICB9KTtcblxuICBpdCgnc2V0dGluZyBjb250ZXh0IHRvIG5vbi1leGlzdGVudCBjb250ZXh0IHNob3VsZCByZXR1cm4gXFwnTm9TdWNoQ29udGV4dFxcJyAoc3RhdHVzOiAzNSknLCBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgQi5yZXNvbHZlKGRyaXZlci5zZXRDb250ZXh0KCdXRUJWSUVXXzQyJykpXG4gICAgICAuY2F0Y2godGhyb3dNYXRjaGFibGVFcnJvcilcbiAgICAgIC5zaG91bGQuYmUucmVqZWN0ZWRXaXRoKC9qc29ud3BDb2RlOiAzNS8pO1xuICB9KTtcblxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
