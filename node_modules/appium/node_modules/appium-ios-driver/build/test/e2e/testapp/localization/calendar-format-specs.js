'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _desired = require('../desired');

var _desired2 = _interopRequireDefault(_desired);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _helpersEnv = require('../../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _appiumSupport = require('appium-support');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

// TODO: make sure localization is not supposed to work with real device
//       same for other locaization tests
describe('localization - calendarFormat @skip-ios8 @skip-real-device', function () {
  var _this = this;

  this.timeout(_helpersEnv2['default'].MOCHA_INIT_TIMEOUT);

  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!process.env.HOME) {
            context$2$0.next = 3;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(_appiumSupport.fs.rimraf(_path2['default'].resolve(process.env.HOME, 'Library/Application Support/iPhone Simulator')));

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  describe('changing to gregorian calendar', function () {
    var _this2 = this;

    var session = (0, _setupBase2['default'])(this, _lodash2['default'].defaults({
      calendarFormat: 'gregorian' }, _desired2['default']));
    var driver = session.driver;

    it('should have gregorian calendar format', function callee$2$0() {
      var res;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.execute('$.mainApp().preferencesValueForKey("AppleLocale");'));

          case 2:
            res = context$3$0.sent;

            res.should.include('@calendar=gregorian');

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
  });

  describe('changing to buddhist calendar', function () {
    var _this3 = this;

    var session = (0, _setupBase2['default'])(this, _lodash2['default'].defaults({
      calendarFormat: 'buddhist' }, _desired2['default']));
    var driver = session.driver;

    it('should have buddhist calendar format', function callee$2$0() {
      var res;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.execute('$.mainApp().preferencesValueForKey("AppleLocale");'));

          case 2:
            res = context$3$0.sent;

            res.should.include('@calendar=buddhist');

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });
  });
});

// cleaning up dir cause we've messed up with the config
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3Rlc3RhcHAvbG9jYWxpemF0aW9uL2NhbGVuZGFyLWZvcm1hdC1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7eUJBQWtCLGtCQUFrQjs7Ozt1QkFDaEIsWUFBWTs7OztzQkFDbEIsUUFBUTs7OzswQkFDTixtQkFBbUI7Ozs7NkJBQ2YsZ0JBQWdCOztvQkFDbkIsTUFBTTs7Ozs7O0FBSXZCLFFBQVEsQ0FBQyw0REFBNEQsRUFBRSxZQUFZOzs7QUFDakYsTUFBSSxDQUFDLE9BQU8sQ0FBQyx3QkFBSSxrQkFBa0IsQ0FBQyxDQUFDOztBQUVyQyxPQUFLLENBQUM7Ozs7ZUFDQSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUk7Ozs7OzsyQ0FFWixrQkFBRyxNQUFNLENBQUMsa0JBQUssT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLDhDQUE4QyxDQUFDLENBQUM7Ozs7Ozs7R0FFbEcsQ0FBQyxDQUFDOztBQUVILFVBQVEsQ0FBQyxnQ0FBZ0MsRUFBRSxZQUFZOzs7QUFDckQsUUFBSSxPQUFPLEdBQUcsNEJBQU0sSUFBSSxFQUFFLG9CQUFFLFFBQVEsQ0FBQztBQUNuQyxvQkFBYyxFQUFFLFdBQVcsRUFBQyx1QkFBVSxDQUFDLENBQUM7QUFDMUMsUUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQzs7QUFFNUIsTUFBRSxDQUFDLHVDQUF1QyxFQUFFO1VBQ3RDLEdBQUc7Ozs7OzZDQUFTLE1BQU0sQ0FBQyxPQUFPLENBQUMsb0RBQW9ELENBQUM7OztBQUFoRixlQUFHOztBQUNQLGVBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUM7Ozs7Ozs7S0FDM0MsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDOztBQUVILFVBQVEsQ0FBQywrQkFBK0IsRUFBRSxZQUFZOzs7QUFDcEQsUUFBSSxPQUFPLEdBQUcsNEJBQU0sSUFBSSxFQUFFLG9CQUFFLFFBQVEsQ0FBQztBQUNuQyxvQkFBYyxFQUFFLFVBQVUsRUFBQyx1QkFBVSxDQUFDLENBQUM7QUFDekMsUUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQzs7QUFFNUIsTUFBRSxDQUFDLHNDQUFzQyxFQUFFO1VBQ3JDLEdBQUc7Ozs7OzZDQUFTLE1BQU0sQ0FBQyxPQUFPLENBQUMsb0RBQW9ELENBQUM7OztBQUFoRixlQUFHOztBQUNQLGVBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUM7Ozs7Ozs7S0FDMUMsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZTJlL3Rlc3RhcHAvbG9jYWxpemF0aW9uL2NhbGVuZGFyLWZvcm1hdC1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzZXR1cCBmcm9tIFwiLi4vLi4vc2V0dXAtYmFzZVwiO1xuaW1wb3J0IGRlc2lyZWQgZnJvbSAnLi4vZGVzaXJlZCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGVudiBmcm9tICcuLi8uLi9oZWxwZXJzL2Vudic7XG5pbXBvcnQgeyBmcyB9IGZyb20gICdhcHBpdW0tc3VwcG9ydCc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuLy8gVE9ETzogbWFrZSBzdXJlIGxvY2FsaXphdGlvbiBpcyBub3Qgc3VwcG9zZWQgdG8gd29yayB3aXRoIHJlYWwgZGV2aWNlXG4vLyAgICAgICBzYW1lIGZvciBvdGhlciBsb2NhaXphdGlvbiB0ZXN0c1xuZGVzY3JpYmUoJ2xvY2FsaXphdGlvbiAtIGNhbGVuZGFyRm9ybWF0IEBza2lwLWlvczggQHNraXAtcmVhbC1kZXZpY2UnLCBmdW5jdGlvbiAoKSB7XG4gIHRoaXMudGltZW91dChlbnYuTU9DSEFfSU5JVF9USU1FT1VUKTtcblxuICBhZnRlcihhc3luYyAoKSA9PiB7XG4gICAgaWYgKHByb2Nlc3MuZW52LkhPTUUpIHtcbiAgICAgIC8vIGNsZWFuaW5nIHVwIGRpciBjYXVzZSB3ZSd2ZSBtZXNzZWQgdXAgd2l0aCB0aGUgY29uZmlnXG4gICAgICBhd2FpdCBmcy5yaW1yYWYocGF0aC5yZXNvbHZlKHByb2Nlc3MuZW52LkhPTUUsICdMaWJyYXJ5L0FwcGxpY2F0aW9uIFN1cHBvcnQvaVBob25lIFNpbXVsYXRvcicpKTtcbiAgICB9XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdjaGFuZ2luZyB0byBncmVnb3JpYW4gY2FsZW5kYXInLCBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IHNlc3Npb24gPSBzZXR1cCh0aGlzLCBfLmRlZmF1bHRzKHtcbiAgICAgIGNhbGVuZGFyRm9ybWF0OiAnZ3JlZ29yaWFuJ30sIGRlc2lyZWQpKTtcbiAgICBsZXQgZHJpdmVyID0gc2Vzc2lvbi5kcml2ZXI7XG5cbiAgICBpdCgnc2hvdWxkIGhhdmUgZ3JlZ29yaWFuIGNhbGVuZGFyIGZvcm1hdCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCByZXMgPSBhd2FpdCBkcml2ZXIuZXhlY3V0ZSgnJC5tYWluQXBwKCkucHJlZmVyZW5jZXNWYWx1ZUZvcktleShcIkFwcGxlTG9jYWxlXCIpOycpO1xuICAgICAgcmVzLnNob3VsZC5pbmNsdWRlKCdAY2FsZW5kYXI9Z3JlZ29yaWFuJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdjaGFuZ2luZyB0byBidWRkaGlzdCBjYWxlbmRhcicsIGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgc2Vzc2lvbiA9IHNldHVwKHRoaXMsIF8uZGVmYXVsdHMoe1xuICAgICAgY2FsZW5kYXJGb3JtYXQ6ICdidWRkaGlzdCd9LCBkZXNpcmVkKSk7XG4gICAgbGV0IGRyaXZlciA9IHNlc3Npb24uZHJpdmVyO1xuXG4gICAgaXQoJ3Nob3VsZCBoYXZlIGJ1ZGRoaXN0IGNhbGVuZGFyIGZvcm1hdCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCByZXMgPSBhd2FpdCBkcml2ZXIuZXhlY3V0ZSgnJC5tYWluQXBwKCkucHJlZmVyZW5jZXNWYWx1ZUZvcktleShcIkFwcGxlTG9jYWxlXCIpOycpO1xuICAgICAgcmVzLnNob3VsZC5pbmNsdWRlKCdAY2FsZW5kYXI9YnVkZGhpc3QnKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vLi4ifQ==
