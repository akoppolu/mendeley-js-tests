'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _desired = require('../desired');

var _desired2 = _interopRequireDefault(_desired);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _helpersEnv = require('../../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _appiumSupport = require('appium-support');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

describe('localization - language @skip-ios8 @skip-real-device', function () {
  var _this = this;

  this.timeout(_helpersEnv2['default'].MOCHA_INIT_TIMEOUT);

  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!process.env.HOME) {
            context$2$0.next = 3;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(_appiumSupport.fs.rimraf(_path2['default'].resolve(process.env.HOME, 'Library/Application Support/iPhone Simulator')));

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  describe('changing to fr', function () {
    var _this2 = this;

    var session = (0, _setupBase2['default'])(this, _lodash2['default'].defaults({
      language: 'fr' }, _desired2['default']));
    var driver = session.driver;

    it('should be fr', function callee$2$0() {
      var res;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.execute('$.mainApp().preferencesValueForKey("AppleLanguages")[0];'));

          case 2:
            res = context$3$0.sent;

            res.should.equal('fr');

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
  });

  describe('changing to de', function () {
    var _this3 = this;

    var session = (0, _setupBase2['default'])(this, _lodash2['default'].defaults({
      language: 'de' }, _desired2['default']));
    var driver = session.driver;

    it('should be de', function callee$2$0() {
      var res;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.execute('$.mainApp().preferencesValueForKey("AppleLanguages")[0];'));

          case 2:
            res = context$3$0.sent;

            res.should.equal('de');

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });
  });
});

// cleaning up dir cause we've messed up with the config
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3Rlc3RhcHAvbG9jYWxpemF0aW9uL2xhbmd1YWdlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozt5QkFBa0Isa0JBQWtCOzs7O3VCQUNoQixZQUFZOzs7O3NCQUNsQixRQUFROzs7OzBCQUNOLG1CQUFtQjs7Ozs2QkFDZixnQkFBZ0I7O29CQUNuQixNQUFNOzs7O0FBRXZCLFFBQVEsQ0FBQyxzREFBc0QsRUFBRSxZQUFZOzs7QUFDM0UsTUFBSSxDQUFDLE9BQU8sQ0FBQyx3QkFBSSxrQkFBa0IsQ0FBQyxDQUFDOztBQUVyQyxPQUFLLENBQUM7Ozs7ZUFDQSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUk7Ozs7OzsyQ0FFWixrQkFBRyxNQUFNLENBQUMsa0JBQUssT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLDhDQUE4QyxDQUFDLENBQUM7Ozs7Ozs7R0FFbEcsQ0FBQyxDQUFDOztBQUVILFVBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZOzs7QUFDckMsUUFBSSxPQUFPLEdBQUcsNEJBQU0sSUFBSSxFQUFFLG9CQUFFLFFBQVEsQ0FBQztBQUNuQyxjQUFRLEVBQUUsSUFBSSxFQUFDLHVCQUFVLENBQUMsQ0FBQztBQUM3QixRQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDOztBQUU1QixNQUFFLENBQUMsY0FBYyxFQUFFO1VBQ2IsR0FBRzs7Ozs7NkNBQVMsTUFBTSxDQUFDLE9BQU8sQ0FBQywwREFBMEQsQ0FBQzs7O0FBQXRGLGVBQUc7O0FBQ1AsZUFBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7Ozs7Ozs7S0FDeEIsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDOztBQUVILFVBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZOzs7QUFDckMsUUFBSSxPQUFPLEdBQUcsNEJBQU0sSUFBSSxFQUFFLG9CQUFFLFFBQVEsQ0FBQztBQUNuQyxjQUFRLEVBQUUsSUFBSSxFQUFDLHVCQUFVLENBQUMsQ0FBQztBQUM3QixRQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDOztBQUU1QixNQUFFLENBQUMsY0FBYyxFQUFFO1VBQ2IsR0FBRzs7Ozs7NkNBQVMsTUFBTSxDQUFDLE9BQU8sQ0FBQywwREFBMEQsQ0FBQzs7O0FBQXRGLGVBQUc7O0FBQ1AsZUFBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7Ozs7Ozs7S0FDeEIsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDO0NBRUosQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZTJlL3Rlc3RhcHAvbG9jYWxpemF0aW9uL2xhbmd1YWdlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNldHVwIGZyb20gXCIuLi8uLi9zZXR1cC1iYXNlXCI7XG5pbXBvcnQgZGVzaXJlZCBmcm9tICcuLi9kZXNpcmVkJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgZW52IGZyb20gJy4uLy4uL2hlbHBlcnMvZW52JztcbmltcG9ydCB7IGZzIH0gZnJvbSAgJ2FwcGl1bS1zdXBwb3J0JztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5kZXNjcmliZSgnbG9jYWxpemF0aW9uIC0gbGFuZ3VhZ2UgQHNraXAtaW9zOCBAc2tpcC1yZWFsLWRldmljZScsIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy50aW1lb3V0KGVudi5NT0NIQV9JTklUX1RJTUVPVVQpO1xuXG4gIGFmdGVyKGFzeW5jICgpID0+IHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuSE9NRSkge1xuICAgICAgLy8gY2xlYW5pbmcgdXAgZGlyIGNhdXNlIHdlJ3ZlIG1lc3NlZCB1cCB3aXRoIHRoZSBjb25maWdcbiAgICAgIGF3YWl0IGZzLnJpbXJhZihwYXRoLnJlc29sdmUocHJvY2Vzcy5lbnYuSE9NRSwgJ0xpYnJhcnkvQXBwbGljYXRpb24gU3VwcG9ydC9pUGhvbmUgU2ltdWxhdG9yJykpO1xuICAgIH1cbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ2NoYW5naW5nIHRvIGZyJywgZnVuY3Rpb24gKCkge1xuICAgIGxldCBzZXNzaW9uID0gc2V0dXAodGhpcywgXy5kZWZhdWx0cyh7XG4gICAgICBsYW5ndWFnZTogJ2ZyJ30sIGRlc2lyZWQpKTtcbiAgICBsZXQgZHJpdmVyID0gc2Vzc2lvbi5kcml2ZXI7XG5cbiAgICBpdCgnc2hvdWxkIGJlIGZyJywgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IHJlcyA9IGF3YWl0IGRyaXZlci5leGVjdXRlKCckLm1haW5BcHAoKS5wcmVmZXJlbmNlc1ZhbHVlRm9yS2V5KFwiQXBwbGVMYW5ndWFnZXNcIilbMF07Jyk7XG4gICAgICByZXMuc2hvdWxkLmVxdWFsKCdmcicpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnY2hhbmdpbmcgdG8gZGUnLCBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IHNlc3Npb24gPSBzZXR1cCh0aGlzLCBfLmRlZmF1bHRzKHtcbiAgICAgIGxhbmd1YWdlOiAnZGUnfSwgZGVzaXJlZCkpO1xuICAgIGxldCBkcml2ZXIgPSBzZXNzaW9uLmRyaXZlcjtcblxuICAgIGl0KCdzaG91bGQgYmUgZGUnLCBhc3luYyAoKSA9PiB7XG4gICAgICBsZXQgcmVzID0gYXdhaXQgZHJpdmVyLmV4ZWN1dGUoJyQubWFpbkFwcCgpLnByZWZlcmVuY2VzVmFsdWVGb3JLZXkoXCJBcHBsZUxhbmd1YWdlc1wiKVswXTsnKTtcbiAgICAgIHJlcy5zaG91bGQuZXF1YWwoJ2RlJyk7XG4gICAgfSk7XG4gIH0pO1xuXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vLi4ifQ==
