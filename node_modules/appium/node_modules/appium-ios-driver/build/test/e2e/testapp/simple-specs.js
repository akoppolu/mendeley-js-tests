'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _helpersRecipes = require('../helpers/recipes');

describe('testapp - simple', function () {

  describe('using calc app', function () {
    var _this = this;

    var session = (0, _setupBase2['default'])(this, _desired2['default']);
    var driver = session.driver;
    var byUIA = '-ios uiautomation';

    var values = [];
    var populate = function populate() {
      var els, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, el, val;

      return _regeneratorRuntime.async(function populate$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElements(byUIA, (0, _helpersRecipes.filterVisibleUiaSelector)('.textFields();')));

          case 2:
            els = context$3$0.sent;
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            context$3$0.prev = 6;
            _iterator = _getIterator(els);

          case 8:
            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
              context$3$0.next = 17;
              break;
            }

            el = _step.value;
            val = Math.round(Math.random() * 10);

            values.push(val);
            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(driver.setValue(val, el));

          case 14:
            _iteratorNormalCompletion = true;
            context$3$0.next = 8;
            break;

          case 17:
            context$3$0.next = 23;
            break;

          case 19:
            context$3$0.prev = 19;
            context$3$0.t0 = context$3$0['catch'](6);
            _didIteratorError = true;
            _iteratorError = context$3$0.t0;

          case 23:
            context$3$0.prev = 23;
            context$3$0.prev = 24;

            if (!_iteratorNormalCompletion && _iterator['return']) {
              _iterator['return']();
            }

          case 26:
            context$3$0.prev = 26;

            if (!_didIteratorError) {
              context$3$0.next = 29;
              break;
            }

            throw _iteratorError;

          case 29:
            return context$3$0.finish(26);

          case 30:
            return context$3$0.finish(23);

          case 31:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this, [[6, 19, 23, 31], [24,, 26, 30]]);
    };

    it('should fill two fields with numbers', function callee$2$0() {
      var el1, el2, result;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(populate());

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIAButton'));

          case 4:
            el1 = context$3$0.sent;
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(driver.click(el1));

          case 7:
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIAStaticText'));

          case 9:
            el2 = context$3$0.sent;
            context$3$0.next = 12;
            return _regeneratorRuntime.awrap(driver.getText(el2));

          case 12:
            context$3$0.t0 = context$3$0.sent;
            result = parseInt(context$3$0.t0, 10);

            result.should.equal(values[0] + values[1]);

          case 15:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3Rlc3RhcHAvc2ltcGxlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O3lCQUFrQixlQUFlOzs7O3VCQUNiLFdBQVc7Ozs7OEJBQ1Usb0JBQW9COztBQUU3RCxRQUFRLENBQUMsa0JBQWtCLEVBQUUsWUFBWTs7QUFFdkMsVUFBUSxDQUFDLGdCQUFnQixFQUFFLFlBQVk7OztBQUNyQyxRQUFJLE9BQU8sR0FBRyw0QkFBTSxJQUFJLHVCQUFVLENBQUM7QUFDbkMsUUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUM1QixRQUFJLEtBQUssR0FBRyxtQkFBbUIsQ0FBQzs7QUFFaEMsUUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO0FBQ2hCLFFBQUksUUFBUSxHQUFHLFNBQVgsUUFBUTtVQUNOLEdBQUcsa0ZBQ0UsRUFBRSxFQUNMLEdBQUc7Ozs7Ozs2Q0FGTyxNQUFNLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSw4Q0FBeUIsZ0JBQWdCLENBQUMsQ0FBQzs7O0FBQWxGLGVBQUc7Ozs7O3FDQUNRLEdBQUc7Ozs7Ozs7O0FBQVQsY0FBRTtBQUNMLGVBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUM7O0FBQ3hDLGtCQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs2Q0FDWCxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FFakMsQ0FBQzs7QUFFRixNQUFFLENBQUMscUNBQXFDLEVBQUU7VUFFcEMsR0FBRyxFQUVILEdBQUcsRUFDSCxNQUFNOzs7Ozs2Q0FKSixRQUFRLEVBQUU7Ozs7NkNBQ0EsTUFBTSxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDOzs7QUFBekQsZUFBRzs7NkNBQ0QsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7Ozs7NkNBQ1AsTUFBTSxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQUUsZUFBZSxDQUFDOzs7QUFBN0QsZUFBRzs7NkNBQ3FCLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDOzs7O0FBQTNDLGtCQUFNLEdBQUcsUUFBUSxpQkFBNEIsRUFBRTs7QUFDbkQsa0JBQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7Ozs7OztLQUM1QyxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvdGVzdGFwcC9zaW1wbGUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2V0dXAgZnJvbSBcIi4uL3NldHVwLWJhc2VcIjtcbmltcG9ydCBkZXNpcmVkIGZyb20gJy4vZGVzaXJlZCc7XG5pbXBvcnQgeyBmaWx0ZXJWaXNpYmxlVWlhU2VsZWN0b3IgfSBmcm9tICcuLi9oZWxwZXJzL3JlY2lwZXMnO1xuXG5kZXNjcmliZSgndGVzdGFwcCAtIHNpbXBsZScsIGZ1bmN0aW9uICgpIHtcblxuICBkZXNjcmliZSgndXNpbmcgY2FsYyBhcHAnLCBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IHNlc3Npb24gPSBzZXR1cCh0aGlzLCBkZXNpcmVkKTtcbiAgICBsZXQgZHJpdmVyID0gc2Vzc2lvbi5kcml2ZXI7XG4gICAgbGV0IGJ5VUlBID0gJy1pb3MgdWlhdXRvbWF0aW9uJztcblxuICAgIGxldCB2YWx1ZXMgPSBbXTtcbiAgICBsZXQgcG9wdWxhdGUgPSBhc3luYyAoKSA9PiB7XG4gICAgICBsZXQgZWxzID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50cyhieVVJQSwgZmlsdGVyVmlzaWJsZVVpYVNlbGVjdG9yKCcudGV4dEZpZWxkcygpOycpKTtcbiAgICAgIGZvciAobGV0IGVsIG9mIGVscykge1xuICAgICAgICBsZXQgdmFsID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTApO1xuICAgICAgICB2YWx1ZXMucHVzaCh2YWwpO1xuICAgICAgICBhd2FpdCBkcml2ZXIuc2V0VmFsdWUodmFsLCBlbCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGl0KCdzaG91bGQgZmlsbCB0d28gZmllbGRzIHdpdGggbnVtYmVycycsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IHBvcHVsYXRlKCk7XG4gICAgICBsZXQgZWwxID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdjbGFzcyBuYW1lJywgJ1VJQUJ1dHRvbicpO1xuICAgICAgYXdhaXQgZHJpdmVyLmNsaWNrKGVsMSk7XG4gICAgICBsZXQgZWwyID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdjbGFzcyBuYW1lJywgJ1VJQVN0YXRpY1RleHQnKTtcbiAgICAgIGxldCByZXN1bHQgPSBwYXJzZUludChhd2FpdCBkcml2ZXIuZ2V0VGV4dChlbDIpLCAxMCk7XG4gICAgICByZXN1bHQuc2hvdWxkLmVxdWFsKHZhbHVlc1swXSArIHZhbHVlc1sxXSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
