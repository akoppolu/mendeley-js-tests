'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _desired = require('../desired');

var _desired2 = _interopRequireDefault(_desired);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _helpersRecipes = require('../../helpers/recipes');

var _helpersEnv = require('../../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

describe('testapp - timeout', function () {
  var _this = this;

  this.timeout(_helpersEnv2['default'].MOCHA_INIT_TIMEOUT);

  afterEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_bluebird2['default'].delay(3000));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  describe('mobile reset', function () {
    var _this2 = this;

    var session = (0, _setupBase2['default'])(this, _desired2['default']);
    var driver = session.driver;

    it('should die with short command timeout even after mobile reset', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.timeouts('command', 3000));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.reset());

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(_bluebird2['default'].delay(6500));

          case 6:
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(_bluebird2['default'].resolve(driver.findElement('accessibility id', 'dont exist dogg'))['catch'](_helpersRecipes.throwMatchableError).should.be.rejectedWith(/jsonwpCode: (13|6)/));

          case 8:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3Rlc3RhcHAvdGltZW91dC9tb2JpbGUtcmVzZXQtdGltZW91dC1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7eUJBQWtCLGtCQUFrQjs7Ozt1QkFDaEIsWUFBWTs7Ozt3QkFDbEIsVUFBVTs7Ozs4QkFDWSx1QkFBdUI7OzBCQUMzQyxtQkFBbUI7Ozs7QUFFbkMsUUFBUSxDQUFDLG1CQUFtQixFQUFFLFlBQVk7OztBQUN4QyxNQUFJLENBQUMsT0FBTyxDQUFDLHdCQUFJLGtCQUFrQixDQUFDLENBQUM7O0FBRXJDLFdBQVMsQ0FBQzs7Ozs7MkNBQW9CLHNCQUFFLEtBQUssQ0FBQyxJQUFJLENBQUM7Ozs7Ozs7R0FBRyxDQUFDLENBQUM7O0FBRWhELFVBQVEsQ0FBQyxjQUFjLEVBQUUsWUFBWTs7O0FBQ25DLFFBQUksT0FBTyxHQUFHLDRCQUFNLElBQUksdUJBQVUsQ0FBQztBQUNuQyxRQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDOztBQUU1QixNQUFFLENBQUMsK0RBQStELEVBQUU7Ozs7OzZDQUM1RCxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUM7Ozs7NkNBQ2hDLE1BQU0sQ0FBQyxLQUFLLEVBQUU7Ozs7NkNBQ2Qsc0JBQUUsS0FBSyxDQUFDLElBQUksQ0FBQzs7Ozs2Q0FDYixzQkFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDLFNBQ2xFLHFDQUFxQixDQUMxQixNQUFNLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQzs7Ozs7OztLQUNoRCxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvdGVzdGFwcC90aW1lb3V0L21vYmlsZS1yZXNldC10aW1lb3V0LXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNldHVwIGZyb20gXCIuLi8uLi9zZXR1cC1iYXNlXCI7XG5pbXBvcnQgZGVzaXJlZCBmcm9tICcuLi9kZXNpcmVkJztcbmltcG9ydCBCIGZyb20gJ2JsdWViaXJkJztcbmltcG9ydCB7IHRocm93TWF0Y2hhYmxlRXJyb3IgfSBmcm9tICcuLi8uLi9oZWxwZXJzL3JlY2lwZXMnO1xuaW1wb3J0IGVudiBmcm9tICcuLi8uLi9oZWxwZXJzL2Vudic7XG5cbmRlc2NyaWJlKCd0ZXN0YXBwIC0gdGltZW91dCcsIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy50aW1lb3V0KGVudi5NT0NIQV9JTklUX1RJTUVPVVQpO1xuXG4gIGFmdGVyRWFjaChhc3luYyAoKSA9PiB7IGF3YWl0IEIuZGVsYXkoMzAwMCk7IH0pO1xuXG4gIGRlc2NyaWJlKCdtb2JpbGUgcmVzZXQnLCBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IHNlc3Npb24gPSBzZXR1cCh0aGlzLCBkZXNpcmVkKTtcbiAgICBsZXQgZHJpdmVyID0gc2Vzc2lvbi5kcml2ZXI7XG5cbiAgICBpdCgnc2hvdWxkIGRpZSB3aXRoIHNob3J0IGNvbW1hbmQgdGltZW91dCBldmVuIGFmdGVyIG1vYmlsZSByZXNldCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGRyaXZlci50aW1lb3V0cygnY29tbWFuZCcsIDMwMDApO1xuICAgICAgYXdhaXQgZHJpdmVyLnJlc2V0KCk7XG4gICAgICBhd2FpdCBCLmRlbGF5KDY1MDApO1xuICAgICAgYXdhaXQgQi5yZXNvbHZlKGRyaXZlci5maW5kRWxlbWVudCgnYWNjZXNzaWJpbGl0eSBpZCcsICdkb250IGV4aXN0IGRvZ2cnKSlcbiAgICAgICAgLmNhdGNoKHRocm93TWF0Y2hhYmxlRXJyb3IpXG4gICAgICAgIC5zaG91bGQuYmUucmVqZWN0ZWRXaXRoKC9qc29ud3BDb2RlOiAoMTN8NikvKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vLi4ifQ==
