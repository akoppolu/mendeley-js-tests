'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _desired = require('../desired');

var _desired2 = _interopRequireDefault(_desired);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

describe('testapp - autoAcceptAlerts cap = false', function () {
  var _this = this;

  var session = (0, _setupBase2['default'])(this, _lodash2['default'].defaults({
    autoAcceptAlerts: false }, _desired2['default']));
  var driver = session.driver;

  it('does not auto-accept alerts', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('accessibility id', 'show alert'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.click(el));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(_bluebird2['default'].delay(2000));

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(driver.getAlertText());

        case 9:
          context$2$0.sent.should.exist;

        case 10:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3Rlc3RhcHAvYXV0b2FjY2VwdC1hbGVydHMvYXV0b2FjY2VwdC1mYWxzZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7eUJBQWtCLGtCQUFrQjs7Ozt1QkFDaEIsWUFBWTs7Ozt3QkFDbEIsVUFBVTs7OztzQkFDVixRQUFROzs7O0FBRXRCLFFBQVEsQ0FBQyx3Q0FBd0MsRUFBRSxZQUFZOzs7QUFDN0QsTUFBSSxPQUFPLEdBQUcsNEJBQU0sSUFBSSxFQUFFLG9CQUFFLFFBQVEsQ0FBQztBQUNuQyxvQkFBZ0IsRUFBRSxLQUFLLEVBQUMsdUJBQVUsQ0FBQyxDQUFDO0FBQ3RDLE1BQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7O0FBRTVCLElBQUUsQ0FBQyw2QkFBNkIsRUFBRTtRQUM1QixFQUFFOzs7OzsyQ0FBUyxNQUFNLENBQUMsV0FBVyxDQUFDLGtCQUFrQixFQUFFLFlBQVksQ0FBQzs7O0FBQS9ELFlBQUU7OzJDQUNBLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDOzs7OzJDQUNoQixzQkFBRSxLQUFLLENBQUMsSUFBSSxDQUFDOzs7OzJDQUNaLE1BQU0sQ0FBQyxZQUFZLEVBQUU7OzsyQkFBRSxNQUFNLENBQUMsS0FBSzs7Ozs7OztHQUMzQyxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvdGVzdGFwcC9hdXRvYWNjZXB0LWFsZXJ0cy9hdXRvYWNjZXB0LWZhbHNlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNldHVwIGZyb20gXCIuLi8uLi9zZXR1cC1iYXNlXCI7XG5pbXBvcnQgZGVzaXJlZCBmcm9tICcuLi9kZXNpcmVkJztcbmltcG9ydCBCIGZyb20gJ2JsdWViaXJkJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmRlc2NyaWJlKCd0ZXN0YXBwIC0gYXV0b0FjY2VwdEFsZXJ0cyBjYXAgPSBmYWxzZScsIGZ1bmN0aW9uICgpIHtcbiAgbGV0IHNlc3Npb24gPSBzZXR1cCh0aGlzLCBfLmRlZmF1bHRzKHtcbiAgICBhdXRvQWNjZXB0QWxlcnRzOiBmYWxzZX0sIGRlc2lyZWQpKTtcbiAgbGV0IGRyaXZlciA9IHNlc3Npb24uZHJpdmVyO1xuXG4gIGl0KCdkb2VzIG5vdCBhdXRvLWFjY2VwdCBhbGVydHMnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdhY2Nlc3NpYmlsaXR5IGlkJywgJ3Nob3cgYWxlcnQnKTtcbiAgICBhd2FpdCBkcml2ZXIuY2xpY2soZWwpO1xuICAgIGF3YWl0IEIuZGVsYXkoMjAwMCk7XG4gICAgKGF3YWl0IGRyaXZlci5nZXRBbGVydFRleHQoKSkuc2hvdWxkLmV4aXN0O1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi8uLiJ9
