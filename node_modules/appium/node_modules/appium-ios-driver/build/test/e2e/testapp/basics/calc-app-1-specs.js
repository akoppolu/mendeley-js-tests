'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _desired = require('../desired');

var _desired2 = _interopRequireDefault(_desired);

var _helpersRecipes = require('../../helpers/recipes');

describe('testapp - basics - calc app 1', function () {
  var _this = this;

  var session = (0, _setupBase2['default'])(this, _desired2['default']);
  var driver = session.driver;

  var values = null;
  var byUIA = '-ios uiautomation';

  var clearFields = function clearFields() {
    var els, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, el, button;

    return _regeneratorRuntime.async(function clearFields$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          values = [];
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.findElements('class name', 'UIATextField'));

        case 3:
          els = context$2$0.sent;
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          context$2$0.prev = 7;
          _iterator = _getIterator(els);

        case 9:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            context$2$0.next = 16;
            break;
          }

          el = _step.value;
          context$2$0.next = 13;
          return _regeneratorRuntime.awrap(driver.clear(el));

        case 13:
          _iteratorNormalCompletion = true;
          context$2$0.next = 9;
          break;

        case 16:
          context$2$0.next = 22;
          break;

        case 18:
          context$2$0.prev = 18;
          context$2$0.t0 = context$2$0['catch'](7);
          _didIteratorError = true;
          _iteratorError = context$2$0.t0;

        case 22:
          context$2$0.prev = 22;
          context$2$0.prev = 23;

          if (!_iteratorNormalCompletion && _iterator['return']) {
            _iterator['return']();
          }

        case 25:
          context$2$0.prev = 25;

          if (!_didIteratorError) {
            context$2$0.next = 28;
            break;
          }

          throw _iteratorError;

        case 28:
          return context$2$0.finish(25);

        case 29:
          return context$2$0.finish(22);

        case 30:
          context$2$0.next = 32;
          return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIAButton'));

        case 32:
          button = context$2$0.sent;
          context$2$0.next = 35;
          return _regeneratorRuntime.awrap(driver.click(button));

        case 35:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[7, 18, 22, 30], [23,, 25, 29]]);
  };

  var populate = function populate(type) {
    var els, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, el, val;

    return _regeneratorRuntime.async(function populate$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          values = [];
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.findElements(byUIA, (0, _helpersRecipes.filterVisibleUiaSelector)('.textFields();')));

        case 3:
          els = context$2$0.sent;
          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          context$2$0.prev = 7;
          _iterator2 = _getIterator(els);

        case 9:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            context$2$0.next = 31;
            break;
          }

          el = _step2.value;
          val = Math.round(Math.random() * 10);

          values.push(val);

          if (!(type === "elem")) {
            context$2$0.next = 18;
            break;
          }

          context$2$0.next = 16;
          return _regeneratorRuntime.awrap(driver.setValue(val, el));

        case 16:
          context$2$0.next = 28;
          break;

        case 18:
          if (!(type === "elem-setvalue")) {
            context$2$0.next = 23;
            break;
          }

          context$2$0.next = 21;
          return _regeneratorRuntime.awrap(driver.setValueImmediate(val, el));

        case 21:
          context$2$0.next = 28;
          break;

        case 23:
          if (!(type === "driver")) {
            context$2$0.next = 28;
            break;
          }

          context$2$0.next = 26;
          return _regeneratorRuntime.awrap(driver.click(el));

        case 26:
          context$2$0.next = 28;
          return _regeneratorRuntime.awrap(driver.keys(val));

        case 28:
          _iteratorNormalCompletion2 = true;
          context$2$0.next = 9;
          break;

        case 31:
          context$2$0.next = 37;
          break;

        case 33:
          context$2$0.prev = 33;
          context$2$0.t0 = context$2$0['catch'](7);
          _didIteratorError2 = true;
          _iteratorError2 = context$2$0.t0;

        case 37:
          context$2$0.prev = 37;
          context$2$0.prev = 38;

          if (!_iteratorNormalCompletion2 && _iterator2['return']) {
            _iterator2['return']();
          }

        case 40:
          context$2$0.prev = 40;

          if (!_didIteratorError2) {
            context$2$0.next = 43;
            break;
          }

          throw _iteratorError2;

        case 43:
          return context$2$0.finish(40);

        case 44:
          return context$2$0.finish(37);

        case 45:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[7, 33, 37, 45], [38,, 40, 44]]);
  };

  var computeAndCheck = function computeAndCheck() {
    var button, el, result;
    return _regeneratorRuntime.async(function computeAndCheck$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIAButton'));

        case 2:
          button = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.click(button));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIAStaticText'));

        case 7:
          el = context$2$0.sent;
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.getText(el));

        case 10:
          context$2$0.t0 = context$2$0.sent;
          result = parseInt(context$2$0.t0, 10);

          result.should.equal(values[0] + values[1]);

        case 13:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  };

  beforeEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(clearFields());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should fill two fields with numbers', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(populate("elem"));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(computeAndCheck());

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  // using sendKeysToActiveElement
  it('should fill two fields with numbers - sendKeys', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(populate("driver"));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(computeAndCheck());

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should fill two fields with numbers - setValue', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(populate("elem-setvalue"));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(computeAndCheck());

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should confirm that button is displayed', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIATextField'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.elementDisplayed(el));

        case 5:
          context$2$0.sent.should.be.ok;

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should confirm that the disabled button is disabled', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('accessibility id', 'DisabledButton'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.elementEnabled(el));

        case 5:
          context$2$0.sent.should.not.be.ok;

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should confirm that the compute sum button is enabled', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('accessibility id', 'ComputeSumButton'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.elementEnabled(el));

        case 5:
          context$2$0.sent.should.be.ok;

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should interact with alert', function callee$1$0() {
    var button, text;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElements('class name', 'UIAButton'));

        case 2:
          button = context$2$0.sent[1];
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.click(button));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.postAcceptAlert());

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(driver.click(button));

        case 9:
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.getAlertText());

        case 11:
          text = context$2$0.sent;

          text.should.include("Cool title");
          text.should.include("this alert is so cool.");
          context$2$0.next = 16;
          return _regeneratorRuntime.awrap(driver.postDismissAlert());

        case 16:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should find alert like other elements', function callee$1$0() {
    var button, _alert, els, texts, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, el;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.findElements('class name', 'UIAButton'));

        case 3:
          button = context$2$0.sent[1];
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.click(button));

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIAAlert'));

        case 8:
          _alert = context$2$0.sent;
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.findElementsFromElement('class name', 'UIAStaticText', _alert));

        case 11:
          els = context$2$0.sent;
          texts = [];
          _iteratorNormalCompletion3 = true;
          _didIteratorError3 = false;
          _iteratorError3 = undefined;
          context$2$0.prev = 16;
          _iterator3 = _getIterator(els);

        case 18:
          if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
            context$2$0.next = 28;
            break;
          }

          el = _step3.value;
          context$2$0.t0 = texts;
          context$2$0.next = 23;
          return _regeneratorRuntime.awrap(driver.getText(el));

        case 23:
          context$2$0.t1 = context$2$0.sent;
          context$2$0.t0.push.call(context$2$0.t0, context$2$0.t1);

        case 25:
          _iteratorNormalCompletion3 = true;
          context$2$0.next = 18;
          break;

        case 28:
          context$2$0.next = 34;
          break;

        case 30:
          context$2$0.prev = 30;
          context$2$0.t2 = context$2$0['catch'](16);
          _didIteratorError3 = true;
          _iteratorError3 = context$2$0.t2;

        case 34:
          context$2$0.prev = 34;
          context$2$0.prev = 35;

          if (!_iteratorNormalCompletion3 && _iterator3['return']) {
            _iterator3['return']();
          }

        case 37:
          context$2$0.prev = 37;

          if (!_didIteratorError3) {
            context$2$0.next = 40;
            break;
          }

          throw _iteratorError3;

        case 40:
          return context$2$0.finish(37);

        case 41:
          return context$2$0.finish(34);

        case 42:
          texts.should.include('Cool title');
          texts.should.include('this alert is so cool.');

        case 44:
          context$2$0.prev = 44;
          context$2$0.next = 47;
          return _regeneratorRuntime.awrap(driver.postDismissAlert());

        case 47:
          return context$2$0.finish(44);

        case 48:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[0,, 44, 48], [16, 30, 34, 42], [35,, 37, 41]]);
  });

  it('should get tag names of elements', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIAButton'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.getName(el));

        case 5:
          context$2$0.sent.should.equal("UIAButton");
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIAStaticText'));

        case 8:
          el = context$2$0.sent;
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.getName(el));

        case 11:
          context$2$0.sent.should.equal('UIAStaticText');

        case 12:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should be able to get text of a button', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIAButton'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.getText(el));

        case 5:
          context$2$0.sent.should.equal("Compute Sum");

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
