'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _helpersEnv = require('../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _setupBase = require("../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

describe('uicatalog - touch', function () {
  var session = (0, _setupBase2['default'])(this, _lodash2['default'].defaults({
    fullReset: true,
    noReset: false
  }, _desired2['default']));
  var driver = session.driver;

  describe('tap', function () {
    var _this = this;

    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.prev = 0;
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.back());

          case 3:
            context$3$0.next = 7;
            break;

          case 5:
            context$3$0.prev = 5;
            context$3$0.t0 = context$3$0['catch'](0);

          case 7:
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'down' }));

          case 9:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this, [[0, 5]]);
    });

    afterEach(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.prev = 0;
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.back());

          case 3:
            context$3$0.next = 7;
            break;

          case 5:
            context$3$0.prev = 5;
            context$3$0.t0 = context$3$0['catch'](0);

          case 7:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this, [[0, 5]]);
    });

    it('should tap element with count', function callee$2$0() {
      var el1, el2, gestures, els;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement('xpath', '//UIAStaticText[contains(@label, \'Steppers\')]'));

          case 2:
            el1 = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.click(el1));

          case 5:
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(driver.findElement('accessibility id', 'Increment'));

          case 7:
            el2 = context$3$0.sent;
            gestures = [{ action: 'tap', options: { count: 10, element: el2.ELEMENT } }];
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(driver.performTouch(gestures));

          case 11:
            context$3$0.next = 13;
            return _regeneratorRuntime.awrap(driver.findElements('accessibility id', '10'));

          case 13:
            els = context$3$0.sent;

            els.should.have.length(2);

          case 15:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should tap element with offset and count', function callee$2$0() {
      var el1, el2, gestures, els;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement('xpath', '//UIAStaticText[contains(@label, \'Steppers\')]'));

          case 2:
            el1 = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.click(el1));

          case 5:
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(driver.findElement('accessibility id', 'Increment'));

          case 7:
            el2 = context$3$0.sent;
            gestures = [{ action: 'tap', options: { x: 10, y: 10, count: 7, element: el2.ELEMENT } }];
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(driver.performTouch(gestures));

          case 11:
            context$3$0.next = 13;
            return _regeneratorRuntime.awrap(driver.findElements('accessibility id', '7'));

          case 13:
            els = context$3$0.sent;

            els.should.have.length(2);

          case 15:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should tap offset with count', function callee$2$0() {
      var el1, el2, loc, gestures, els;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement('xpath', '//UIAStaticText[contains(@label, \'Steppers\')]'));

          case 2:
            el1 = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.click(el1));

          case 5:
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(driver.findElement('accessibility id', 'Increment'));

          case 7:
            el2 = context$3$0.sent;
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(driver.getLocation(el2));

          case 10:
            loc = context$3$0.sent;
            gestures = [{ action: 'tap', options: { x: loc.x, y: loc.y, count: 3 } }];
            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(driver.performTouch(gestures));

          case 14:
            context$3$0.next = 16;
            return _regeneratorRuntime.awrap(driver.findElements('accessibility id', '3'));

          case 16:
            els = context$3$0.sent;

            els.should.have.length(2);

          case 18:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });

  describe('flick @skip-ios8 @skip-ios7', function () {
    var _this2 = this;

    var SLOW_DOWN_MS = 1000;

    afterEach(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.flick(undefined, 0, 100));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.flick(undefined, 0, 100));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(_bluebird2['default'].delay(SLOW_DOWN_MS));

          case 6:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });

    describe('with element', function () {
      var _this3 = this;

      it("slider value should change", function callee$3$0() {
        var els, slider, valueBefore, valueAfter;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElements('class name', 'UIATableCell'));

            case 2:
              els = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.click(els[10]));

            case 5:
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap(driver.findElement('class name', "UIASlider"));

            case 7:
              slider = context$4$0.sent;
              context$4$0.next = 10;
              return _regeneratorRuntime.awrap(driver.getAttribute("value", slider));

            case 10:
              valueBefore = context$4$0.sent;
              context$4$0.next = 13;
              return _regeneratorRuntime.awrap(driver.flick(slider, undefined, undefined, -0.5, 0, 1));

            case 13:
              context$4$0.next = 15;
              return _regeneratorRuntime.awrap(driver.getAttribute("value", slider));

            case 15:
              valueAfter = context$4$0.sent;

              valueBefore.should.not.equal("0%");
              valueAfter.should.equal("0%");

            case 18:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this3);
      });
    });
  });

  describe('mobile scroll', function () {
    var _this4 = this;

    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.prev = 0;
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.back());

          case 3:
            context$3$0.next = 7;
            break;

          case 5:
            context$3$0.prev = 5;
            context$3$0.t0 = context$3$0['catch'](0);

          case 7:
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'up' }));

          case 9:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this4, [[0, 5]]);
    });

    it('should scroll down and up', function callee$2$0() {
      var el, loc1, loc2, loc3;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIATableCell'));

          case 2:
            el = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.getLocationInView(el));

          case 5:
            loc1 = context$3$0.sent;
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'down' }));

          case 8:
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(driver.getLocationInView(el));

          case 10:
            loc2 = context$3$0.sent;

            loc2.x.should.equal(loc1.x);
            loc2.y.should.not.equal(loc1.y);

            context$3$0.next = 15;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'up' }));

          case 15:
            context$3$0.next = 17;
            return _regeneratorRuntime.awrap(driver.getLocationInView(el));

          case 17:
            loc3 = context$3$0.sent;

            loc3.x.should.equal(loc2.x);
            loc3.y.should.not.equal(loc2.y);

          case 20:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this4);
    });

    it('should scroll down and up using element', function callee$2$0() {
      var tableView, el, loc1, loc2, loc3;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIATableView'));

          case 2:
            tableView = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.findElement('class name', 'UIATableCell'));

          case 5:
            el = context$3$0.sent;
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(driver.getLocationInView(el));

          case 8:
            loc1 = context$3$0.sent;
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { element: tableView, direction: 'down' }));

          case 11:
            context$3$0.next = 13;
            return _regeneratorRuntime.awrap(driver.getLocationInView(el));

          case 13:
            loc2 = context$3$0.sent;

            loc2.x.should.equal(loc1.x);
            loc2.y.should.not.equal(loc1.y);

            context$3$0.next = 18;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { element: tableView, direction: 'up' }));

          case 18:
            context$3$0.next = 20;
            return _regeneratorRuntime.awrap(driver.getLocationInView(el));

          case 20:
            loc3 = context$3$0.sent;

            loc3.x.should.equal(loc2.x);
            loc3.y.should.not.equal(loc2.y);

          case 23:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this4);
    });

    it('should be able to be called multiple times', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'down' }));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'down' }));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'down' }));

          case 6:
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'down' }));

          case 8:
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'down' }));

          case 10:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this4);
    });
  });

  describe('mobile shake', function () {
    var _this5 = this;

    it('should not error', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.mobileShake());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this5);
    });
  });

  describe('moveTo and click', function () {
    var _this6 = this;

    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.prev = 0;
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.back());

          case 3:
            context$3$0.next = 7;
            break;

          case 5:
            context$3$0.prev = 5;
            context$3$0.t0 = context$3$0['catch'](0);

          case 7:
            context$3$0.prev = 7;
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'up' }));

          case 10:
            context$3$0.next = 14;
            break;

          case 12:
            context$3$0.prev = 12;
            context$3$0.t1 = context$3$0['catch'](7);

          case 14:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this6, [[0, 5], [7, 12]]);
    });

    it('should be able to click on arbitrary x-y elements', function callee$2$0() {
      var axIdExt, el1, el2;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            axIdExt = _helpersEnv2['default'].IOS8 || _helpersEnv2['default'].IOS9 ? "" : ", AAPLButtonViewController";
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.findElement('accessibility id', 'Buttons' + axIdExt));

          case 3:
            el1 = context$3$0.sent;
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.moveTo(el1, 10, 10));

          case 6:
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(driver.clickCurrent());

          case 8:
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(driver.findElement('xpath', "//UIAElement['SYSTEM (CONTACT ADD)']"));

          case 10:
            el2 = context$3$0.sent;

            el2.should.exist;

          case 12:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this6);
    });
  });
});

// make sure we are in the right place

// we want to begin at the top, so try to scroll up there

// we want to begin at the top, so try to scroll up there
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3VpY2F0YWxvZy9nZXN0dXJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OzswQkFBZ0IsZ0JBQWdCOzs7O3lCQUNkLGVBQWU7Ozs7dUJBQ2IsV0FBVzs7Ozt3QkFDakIsVUFBVTs7OztzQkFDVixRQUFROzs7O0FBR3RCLFFBQVEsQ0FBQyxtQkFBbUIsRUFBRSxZQUFZO0FBQ3hDLE1BQUksT0FBTyxHQUFHLDRCQUFNLElBQUksRUFBRSxvQkFBRSxRQUFRLENBQUM7QUFDbkMsYUFBUyxFQUFFLElBQUk7QUFDZixXQUFPLEVBQUUsS0FBSztHQUNmLHVCQUFVLENBQUMsQ0FBQztBQUNiLE1BQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7O0FBRTVCLFVBQVEsQ0FBQyxLQUFLLEVBQUUsWUFBWTs7O0FBQzFCLFVBQU0sQ0FBQzs7Ozs7OzZDQUdHLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7Ozs7Ozs2Q0FHZixNQUFNLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUFFLEVBQUMsU0FBUyxFQUFFLE1BQU0sRUFBQyxDQUFDOzs7Ozs7O0tBQzVELENBQUMsQ0FBQzs7QUFFSCxhQUFTLENBQUM7Ozs7Ozs2Q0FFQSxNQUFNLENBQUMsSUFBSSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7S0FFdEIsQ0FBQyxDQUFDOztBQUVILE1BQUUsQ0FBQywrQkFBK0IsRUFBRTtVQUM5QixHQUFHLEVBRUgsR0FBRyxFQUNILFFBQVEsRUFFUixHQUFHOzs7Ozs2Q0FMUyxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxpREFBaUQsQ0FBQzs7O0FBQTFGLGVBQUc7OzZDQUNELE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDOzs7OzZDQUNQLE1BQU0sQ0FBQyxXQUFXLENBQUMsa0JBQWtCLEVBQUUsV0FBVyxDQUFDOzs7QUFBL0QsZUFBRztBQUNILG9CQUFRLEdBQUcsQ0FBQyxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsT0FBTyxF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Q0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZTJlL3VpY2F0YWxvZy9nZXN0dXJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVudiBmcm9tICcuLi9oZWxwZXJzL2Vudic7XG5pbXBvcnQgc2V0dXAgZnJvbSBcIi4uL3NldHVwLWJhc2VcIjtcbmltcG9ydCBkZXNpcmVkIGZyb20gJy4vZGVzaXJlZCc7XG5pbXBvcnQgQiBmcm9tICdibHVlYmlyZCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5cbmRlc2NyaWJlKCd1aWNhdGFsb2cgLSB0b3VjaCcsIGZ1bmN0aW9uICgpIHtcbiAgbGV0IHNlc3Npb24gPSBzZXR1cCh0aGlzLCBfLmRlZmF1bHRzKHtcbiAgICBmdWxsUmVzZXQ6IHRydWUsXG4gICAgbm9SZXNldDogZmFsc2VcbiAgfSwgZGVzaXJlZCkpO1xuICBsZXQgZHJpdmVyID0gc2Vzc2lvbi5kcml2ZXI7XG5cbiAgZGVzY3JpYmUoJ3RhcCcsIGZ1bmN0aW9uICgpIHtcbiAgICBiZWZvcmUoYXN5bmMgKCkgPT4ge1xuICAgICAgLy8gbWFrZSBzdXJlIHdlIGFyZSBpbiB0aGUgcmlnaHQgcGxhY2VcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGRyaXZlci5iYWNrKCk7XG4gICAgICB9IGNhdGNoIChpZ24pIHt9XG5cbiAgICAgIGF3YWl0IGRyaXZlci5leGVjdXRlKFwibW9iaWxlOiBzY3JvbGxcIiwge2RpcmVjdGlvbjogJ2Rvd24nfSk7XG4gICAgfSk7XG5cbiAgICBhZnRlckVhY2goYXN5bmMgKCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgZHJpdmVyLmJhY2soKTtcbiAgICAgIH0gY2F0Y2ggKGlnbikge31cbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgdGFwIGVsZW1lbnQgd2l0aCBjb3VudCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBlbDEgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ3hwYXRoJywgJy8vVUlBU3RhdGljVGV4dFtjb250YWlucyhAbGFiZWwsIFxcJ1N0ZXBwZXJzXFwnKV0nKTtcbiAgICAgIGF3YWl0IGRyaXZlci5jbGljayhlbDEpO1xuICAgICAgbGV0IGVsMiA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnYWNjZXNzaWJpbGl0eSBpZCcsICdJbmNyZW1lbnQnKTtcbiAgICAgIGxldCBnZXN0dXJlcyA9IFt7YWN0aW9uOiAndGFwJywgb3B0aW9uczoge2NvdW50OiAxMCwgZWxlbWVudDogZWwyLkVMRU1FTlR9fV07XG4gICAgICBhd2FpdCBkcml2ZXIucGVyZm9ybVRvdWNoKGdlc3R1cmVzKTtcbiAgICAgIGxldCBlbHMgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnRzKCdhY2Nlc3NpYmlsaXR5IGlkJywgJzEwJyk7XG4gICAgICBlbHMuc2hvdWxkLmhhdmUubGVuZ3RoKDIpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCB0YXAgZWxlbWVudCB3aXRoIG9mZnNldCBhbmQgY291bnQnLCBhc3luYyAoKSA9PiB7XG4gICAgICBsZXQgZWwxID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCd4cGF0aCcsICcvL1VJQVN0YXRpY1RleHRbY29udGFpbnMoQGxhYmVsLCBcXCdTdGVwcGVyc1xcJyldJyk7XG4gICAgICBhd2FpdCBkcml2ZXIuY2xpY2soZWwxKTtcbiAgICAgIGxldCBlbDIgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2FjY2Vzc2liaWxpdHkgaWQnLCAnSW5jcmVtZW50Jyk7XG4gICAgICBsZXQgZ2VzdHVyZXMgPSBbe2FjdGlvbjogJ3RhcCcsIG9wdGlvbnM6IHt4OjEwLCB5OjEwLCBjb3VudDogNywgZWxlbWVudDogZWwyLkVMRU1FTlR9fV07XG4gICAgICBhd2FpdCBkcml2ZXIucGVyZm9ybVRvdWNoKGdlc3R1cmVzKTtcbiAgICAgIGxldCBlbHMgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnRzKCdhY2Nlc3NpYmlsaXR5IGlkJywgJzcnKTtcbiAgICAgIGVscy5zaG91bGQuaGF2ZS5sZW5ndGgoMik7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHRhcCBvZmZzZXQgd2l0aCBjb3VudCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBlbDEgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ3hwYXRoJywgJy8vVUlBU3RhdGljVGV4dFtjb250YWlucyhAbGFiZWwsIFxcJ1N0ZXBwZXJzXFwnKV0nKTtcbiAgICAgIGF3YWl0IGRyaXZlci5jbGljayhlbDEpO1xuICAgICAgbGV0IGVsMiA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnYWNjZXNzaWJpbGl0eSBpZCcsICdJbmNyZW1lbnQnKTtcbiAgICAgIGxldCBsb2MgPSBhd2FpdCBkcml2ZXIuZ2V0TG9jYXRpb24oZWwyKTtcbiAgICAgIGxldCBnZXN0dXJlcyA9IFt7YWN0aW9uOiAndGFwJywgb3B0aW9uczoge3g6bG9jLngsIHk6bG9jLnksIGNvdW50OiAzfX1dO1xuICAgICAgYXdhaXQgZHJpdmVyLnBlcmZvcm1Ub3VjaChnZXN0dXJlcyk7XG4gICAgICBsZXQgZWxzID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50cygnYWNjZXNzaWJpbGl0eSBpZCcsICczJyk7XG4gICAgICBlbHMuc2hvdWxkLmhhdmUubGVuZ3RoKDIpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnZmxpY2sgQHNraXAtaW9zOCBAc2tpcC1pb3M3JywgZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IFNMT1dfRE9XTl9NUyA9IDEwMDA7XG5cbiAgICBhZnRlckVhY2goYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLmZsaWNrKHVuZGVmaW5lZCwgMCwgMTAwKTtcbiAgICAgIGF3YWl0IGRyaXZlci5mbGljayh1bmRlZmluZWQsIDAsIDEwMCk7XG4gICAgICBhd2FpdCBCLmRlbGF5KFNMT1dfRE9XTl9NUyk7XG4gICAgfSk7XG5cbiAgICBkZXNjcmliZSgnd2l0aCBlbGVtZW50JywgZnVuY3Rpb24gKCkge1xuICAgICAgaXQoXCJzbGlkZXIgdmFsdWUgc2hvdWxkIGNoYW5nZVwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBlbHMgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnRzKCdjbGFzcyBuYW1lJywgJ1VJQVRhYmxlQ2VsbCcpO1xuICAgICAgICBhd2FpdCBkcml2ZXIuY2xpY2soZWxzWzEwXSk7XG4gICAgICAgIGxldCBzbGlkZXIgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2NsYXNzIG5hbWUnLCBcIlVJQVNsaWRlclwiKTtcbiAgICAgICAgbGV0IHZhbHVlQmVmb3JlID0gYXdhaXQgZHJpdmVyLmdldEF0dHJpYnV0ZShcInZhbHVlXCIsIHNsaWRlcik7XG4gICAgICAgIGF3YWl0IGRyaXZlci5mbGljayhzbGlkZXIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCAtMC41LCAwLCAxKTtcbiAgICAgICAgbGV0IHZhbHVlQWZ0ZXIgPSBhd2FpdCBkcml2ZXIuZ2V0QXR0cmlidXRlKFwidmFsdWVcIiwgc2xpZGVyKTtcbiAgICAgICAgdmFsdWVCZWZvcmUuc2hvdWxkLm5vdC5lcXVhbChcIjAlXCIpO1xuICAgICAgICB2YWx1ZUFmdGVyLnNob3VsZC5lcXVhbChcIjAlXCIpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdtb2JpbGUgc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xuICAgIGJlZm9yZShhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBkcml2ZXIuYmFjaygpO1xuICAgICAgfSBjYXRjaCAoaWduKSB7fVxuXG4gICAgICAvLyB3ZSB3YW50IHRvIGJlZ2luIGF0IHRoZSB0b3AsIHNvIHRyeSB0byBzY3JvbGwgdXAgdGhlcmVcbiAgICAgIGF3YWl0IGRyaXZlci5leGVjdXRlKFwibW9iaWxlOiBzY3JvbGxcIiwge2RpcmVjdGlvbjogJ3VwJ30pO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBzY3JvbGwgZG93biBhbmQgdXAnLCBhc3luYyAoKSA9PiB7XG4gICAgICBsZXQgZWwgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2NsYXNzIG5hbWUnLCAnVUlBVGFibGVDZWxsJyk7XG4gICAgICBsZXQgbG9jMSA9IGF3YWl0IGRyaXZlci5nZXRMb2NhdGlvbkluVmlldyhlbCk7XG5cbiAgICAgIGF3YWl0IGRyaXZlci5leGVjdXRlKFwibW9iaWxlOiBzY3JvbGxcIiwge2RpcmVjdGlvbjogJ2Rvd24nfSk7XG4gICAgICBsZXQgbG9jMiA9IGF3YWl0IGRyaXZlci5nZXRMb2NhdGlvbkluVmlldyhlbCk7XG4gICAgICBsb2MyLnguc2hvdWxkLmVxdWFsKGxvYzEueCk7XG4gICAgICBsb2MyLnkuc2hvdWxkLm5vdC5lcXVhbChsb2MxLnkpO1xuXG4gICAgICBhd2FpdCBkcml2ZXIuZXhlY3V0ZShcIm1vYmlsZTogc2Nyb2xsXCIsIHtkaXJlY3Rpb246ICd1cCd9KTtcbiAgICAgIGxldCBsb2MzID0gYXdhaXQgZHJpdmVyLmdldExvY2F0aW9uSW5WaWV3KGVsKTtcbiAgICAgIGxvYzMueC5zaG91bGQuZXF1YWwobG9jMi54KTtcbiAgICAgIGxvYzMueS5zaG91bGQubm90LmVxdWFsKGxvYzIueSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHNjcm9sbCBkb3duIGFuZCB1cCB1c2luZyBlbGVtZW50JywgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IHRhYmxlVmlldyA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnY2xhc3MgbmFtZScsICdVSUFUYWJsZVZpZXcnKTtcbiAgICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnY2xhc3MgbmFtZScsICdVSUFUYWJsZUNlbGwnKTtcbiAgICAgIGxldCBsb2MxID0gYXdhaXQgZHJpdmVyLmdldExvY2F0aW9uSW5WaWV3KGVsKTtcblxuICAgICAgYXdhaXQgZHJpdmVyLmV4ZWN1dGUoXCJtb2JpbGU6IHNjcm9sbFwiLCB7ZWxlbWVudDogdGFibGVWaWV3LCBkaXJlY3Rpb246ICdkb3duJ30pO1xuICAgICAgbGV0IGxvYzIgPSBhd2FpdCBkcml2ZXIuZ2V0TG9jYXRpb25JblZpZXcoZWwpO1xuICAgICAgbG9jMi54LnNob3VsZC5lcXVhbChsb2MxLngpO1xuICAgICAgbG9jMi55LnNob3VsZC5ub3QuZXF1YWwobG9jMS55KTtcblxuICAgICAgYXdhaXQgZHJpdmVyLmV4ZWN1dGUoXCJtb2JpbGU6IHNjcm9sbFwiLCB7ZWxlbWVudDogdGFibGVWaWV3LCBkaXJlY3Rpb246ICd1cCd9KTtcbiAgICAgIGxldCBsb2MzID0gYXdhaXQgZHJpdmVyLmdldExvY2F0aW9uSW5WaWV3KGVsKTtcbiAgICAgIGxvYzMueC5zaG91bGQuZXF1YWwobG9jMi54KTtcbiAgICAgIGxvYzMueS5zaG91bGQubm90LmVxdWFsKGxvYzIueSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGJlIGFibGUgdG8gYmUgY2FsbGVkIG11bHRpcGxlIHRpbWVzJywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLmV4ZWN1dGUoXCJtb2JpbGU6IHNjcm9sbFwiLCB7ZGlyZWN0aW9uOiAnZG93bid9KTtcbiAgICAgIGF3YWl0IGRyaXZlci5leGVjdXRlKFwibW9iaWxlOiBzY3JvbGxcIiwge2RpcmVjdGlvbjogJ2Rvd24nfSk7XG4gICAgICBhd2FpdCBkcml2ZXIuZXhlY3V0ZShcIm1vYmlsZTogc2Nyb2xsXCIsIHtkaXJlY3Rpb246ICdkb3duJ30pO1xuICAgICAgYXdhaXQgZHJpdmVyLmV4ZWN1dGUoXCJtb2JpbGU6IHNjcm9sbFwiLCB7ZGlyZWN0aW9uOiAnZG93bid9KTtcbiAgICAgIGF3YWl0IGRyaXZlci5leGVjdXRlKFwibW9iaWxlOiBzY3JvbGxcIiwge2RpcmVjdGlvbjogJ2Rvd24nfSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdtb2JpbGUgc2hha2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgaXQoJ3Nob3VsZCBub3QgZXJyb3InLCBhc3luYyAoKSA9PiB7XG4gICAgICBhd2FpdCBkcml2ZXIubW9iaWxlU2hha2UoKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ21vdmVUbyBhbmQgY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgYmVmb3JlKGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGRyaXZlci5iYWNrKCk7XG4gICAgICB9IGNhdGNoIChpZ24pIHt9XG4gICAgICB0cnkge1xuICAgICAgICAvLyB3ZSB3YW50IHRvIGJlZ2luIGF0IHRoZSB0b3AsIHNvIHRyeSB0byBzY3JvbGwgdXAgdGhlcmVcbiAgICAgICAgYXdhaXQgZHJpdmVyLmV4ZWN1dGUoXCJtb2JpbGU6IHNjcm9sbFwiLCB7ZGlyZWN0aW9uOiAndXAnfSk7XG4gICAgICB9IGNhdGNoIChpZ24pIHt9XG4gICAgfSk7XG4gICAgXG4gICAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIGNsaWNrIG9uIGFyYml0cmFyeSB4LXkgZWxlbWVudHMnLCBhc3luYyAoKSA9PiB7XG4gICAgICBsZXQgYXhJZEV4dCA9IGVudi5JT1M4IHx8IGVudi5JT1M5ID8gXCJcIiA6IFwiLCBBQVBMQnV0dG9uVmlld0NvbnRyb2xsZXJcIjtcbiAgICAgIGxldCBlbDEgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2FjY2Vzc2liaWxpdHkgaWQnLCBgQnV0dG9ucyR7YXhJZEV4dH1gKTtcbiAgICAgIGF3YWl0IGRyaXZlci5tb3ZlVG8oZWwxLCAxMCwgMTApO1xuICAgICAgYXdhaXQgZHJpdmVyLmNsaWNrQ3VycmVudCgpO1xuICAgICAgbGV0IGVsMiA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgneHBhdGgnLCBcIi8vVUlBRWxlbWVudFsnU1lTVEVNIChDT05UQUNUIEFERCknXVwiKTtcbiAgICAgIGVsMi5zaG91bGQuZXhpc3Q7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
