'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _helpersRecipes = require('../helpers/recipes');

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

describe('uicatalog - controls', function () {
  var _this = this;

  var session = (0, _setupBase2['default'])(this, _desired2['default']);
  var driver = session.driver;

  afterEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersRecipes.clickButton)(driver, 'UICatalog'));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should be able to get and set a picker value(s)', function callee$1$0() {
    var el1, _arr, _i, color, _wheel, value, wheel, values;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('xpath', "//UIAStaticText[contains(@label,'Picker View')]"));

        case 2:
          el1 = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.click(el1));

        case 5:
          _arr = ['Red', 'Green', 'Blue'];
          _i = 0;

        case 7:
          if (!(_i < _arr.length)) {
            context$2$0.next = 27;
            break;
          }

          color = _arr[_i];
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.findElement('xpath', '//UIAPickerWheel[@name = \'' + color + ' color component value\']'));

        case 11:
          _wheel = context$2$0.sent;
          value = undefined;

          if (!(color === 'Red')) {
            context$2$0.next = 18;
            break;
          }

          context$2$0.next = 16;
          return _regeneratorRuntime.awrap(driver.getAttribute("value", _wheel));

        case 16:
          value = context$2$0.sent;

          parseInt(value, 10).should.equal(65);

        case 18:
          context$2$0.next = 20;
          return _regeneratorRuntime.awrap(driver.setValue(70, _wheel));

        case 20:
          context$2$0.next = 22;
          return _regeneratorRuntime.awrap(driver.getAttribute("value", _wheel));

        case 22:
          value = context$2$0.sent;

          parseInt(value, 10).should.equal(70);

        case 24:
          _i++;
          context$2$0.next = 7;
          break;

        case 27:
          context$2$0.next = 29;
          return _regeneratorRuntime.awrap(driver.findElement('class name', "UIAPickerWheel"));

        case 29:
          wheel = context$2$0.sent;
          context$2$0.next = 32;
          return _regeneratorRuntime.awrap(driver.getAttribute("values", wheel));

        case 32:
          values = context$2$0.sent;

          values.should.have.length(52);

        case 34:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should be able to get and set a slider value @skip-ci', function callee$1$0() {
    var el, slider, value;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.execute("mobile: scroll", { direction: 'down' }));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.findElement('xpath', "//UIAStaticText[contains(@label,'Sliders')]"));

        case 4:
          el = context$2$0.sent;
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.click(el));

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(driver.findElement('class name', "UIASlider"));

        case 9:
          slider = context$2$0.sent;
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap(driver.getAttribute("value", slider));

        case 12:
          value = context$2$0.sent;

          value.should.equal('42%');

          context$2$0.next = 16;
          return _regeneratorRuntime.awrap(driver.setValue(0.8, slider));

        case 16:
          context$2$0.next = 18;
          return _regeneratorRuntime.awrap(_bluebird2['default'].delay(500));

        case 18:
          context$2$0.next = 20;
          return _regeneratorRuntime.awrap(driver.getAttribute("value", slider));

        case 20:
          value = context$2$0.sent;

          value = parseInt(value.replace('%', ''), 10);
          value.should.be.above(75);
          value.should.be.below(85);

        case 24:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});

// give a moment for the change to register
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3VpY2F0YWxvZy9jb250cm9scy1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7eUJBQWtCLGVBQWU7Ozs7dUJBQ2IsV0FBVzs7Ozs4QkFDSCxvQkFBb0I7O3dCQUNsQyxVQUFVOzs7O0FBR3hCLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxZQUFZOzs7QUFDM0MsTUFBSSxPQUFPLEdBQUcsNEJBQU0sSUFBSSx1QkFBVSxDQUFDO0FBQ25DLE1BQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7O0FBRTVCLFdBQVMsQ0FBQzs7Ozs7MkNBQ0YsaUNBQVksTUFBTSxFQUFFLFdBQVcsQ0FBQzs7Ozs7OztHQUN2QyxDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLGlEQUFpRCxFQUFFO1FBQ2hELEdBQUcsWUFHRSxLQUFLLEVBQ1IsTUFBSyxFQUNMLEtBQUssRUFVUCxLQUFLLEVBQ0wsTUFBTTs7Ozs7OzJDQWhCTSxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxpREFBaUQsQ0FBQzs7O0FBQTFGLGFBQUc7OzJDQUNELE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDOzs7aUJBRUwsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0sQ0FBQzs7Ozs7Ozs7O0FBQWpDLGVBQUs7OzJDQUNNLE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxrQ0FBK0IsS0FBSywrQkFBMkI7OztBQUF2RyxnQkFBSztBQUNMLGVBQUs7O2dCQUNMLEtBQUssS0FBSyxLQUFLLENBQUE7Ozs7OzsyQ0FDSCxNQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxNQUFLLENBQUM7OztBQUFqRCxlQUFLOztBQUNMLGtCQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7Ozs7MkNBRWpDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLE1BQUssQ0FBQzs7OzsyQ0FDbEIsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsTUFBSyxDQUFDOzs7QUFBakQsZUFBSzs7QUFDTCxrQkFBUSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDOzs7Ozs7Ozs7MkNBR3JCLE1BQU0sQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLGdCQUFnQixDQUFDOzs7QUFBaEUsZUFBSzs7MkNBQ1UsTUFBTSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDOzs7QUFBbkQsZ0JBQU07O0FBQ1YsZ0JBQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQzs7Ozs7OztHQUMvQixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLHVEQUF1RCxFQUFFO1FBRXRELEVBQUUsRUFHRixNQUFNLEVBQ04sS0FBSzs7Ozs7MkNBTEgsTUFBTSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSxFQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUMsQ0FBQzs7OzsyQ0FDNUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsNkNBQTZDLENBQUM7OztBQUFyRixZQUFFOzsyQ0FDQSxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQzs7OzsyQ0FFSCxNQUFNLENBQUMsV0FBVyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUM7OztBQUE1RCxnQkFBTTs7MkNBQ1EsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDOzs7QUFBbEQsZUFBSzs7QUFDVCxlQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQzs7OzJDQUVwQixNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUM7Ozs7MkNBRTVCLHNCQUFFLEtBQUssQ0FBQyxHQUFHLENBQUM7Ozs7MkNBRUosTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDOzs7QUFBbEQsZUFBSzs7QUFDTCxlQUFLLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQzdDLGVBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUMxQixlQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7Ozs7Ozs7R0FDM0IsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZTJlL3VpY2F0YWxvZy9jb250cm9scy1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzZXR1cCBmcm9tIFwiLi4vc2V0dXAtYmFzZVwiO1xuaW1wb3J0IGRlc2lyZWQgZnJvbSAnLi9kZXNpcmVkJztcbmltcG9ydCB7IGNsaWNrQnV0dG9uIH0gZnJvbSAnLi4vaGVscGVycy9yZWNpcGVzJztcbmltcG9ydCBCIGZyb20gJ2JsdWViaXJkJztcblxuXG5kZXNjcmliZSgndWljYXRhbG9nIC0gY29udHJvbHMnLCBmdW5jdGlvbiAoKSB7XG4gIGxldCBzZXNzaW9uID0gc2V0dXAodGhpcywgZGVzaXJlZCk7XG4gIGxldCBkcml2ZXIgPSBzZXNzaW9uLmRyaXZlcjtcblxuICBhZnRlckVhY2goYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGNsaWNrQnV0dG9uKGRyaXZlciwgJ1VJQ2F0YWxvZycpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGJlIGFibGUgdG8gZ2V0IGFuZCBzZXQgYSBwaWNrZXIgdmFsdWUocyknLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IGVsMSA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgneHBhdGgnLCBcIi8vVUlBU3RhdGljVGV4dFtjb250YWlucyhAbGFiZWwsJ1BpY2tlciBWaWV3JyldXCIpO1xuICAgIGF3YWl0IGRyaXZlci5jbGljayhlbDEpO1xuXG4gICAgZm9yIChsZXQgY29sb3Igb2YgWydSZWQnLCAnR3JlZW4nLCAnQmx1ZSddKSB7XG4gICAgICBsZXQgd2hlZWwgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ3hwYXRoJywgYC8vVUlBUGlja2VyV2hlZWxbQG5hbWUgPSAnJHtjb2xvcn0gY29sb3IgY29tcG9uZW50IHZhbHVlJ11gKTtcbiAgICAgIGxldCB2YWx1ZTtcbiAgICAgIGlmIChjb2xvciA9PT0gJ1JlZCcpIHtcbiAgICAgICAgdmFsdWUgPSBhd2FpdCBkcml2ZXIuZ2V0QXR0cmlidXRlKFwidmFsdWVcIiwgd2hlZWwpO1xuICAgICAgICBwYXJzZUludCh2YWx1ZSwgMTApLnNob3VsZC5lcXVhbCg2NSk7XG4gICAgICB9XG4gICAgICBhd2FpdCBkcml2ZXIuc2V0VmFsdWUoNzAsIHdoZWVsKTtcbiAgICAgIHZhbHVlID0gYXdhaXQgZHJpdmVyLmdldEF0dHJpYnV0ZShcInZhbHVlXCIsIHdoZWVsKTtcbiAgICAgIHBhcnNlSW50KHZhbHVlLCAxMCkuc2hvdWxkLmVxdWFsKDcwKTtcbiAgICB9XG5cbiAgICBsZXQgd2hlZWwgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2NsYXNzIG5hbWUnLCBcIlVJQVBpY2tlcldoZWVsXCIpO1xuICAgIGxldCB2YWx1ZXMgPSBhd2FpdCBkcml2ZXIuZ2V0QXR0cmlidXRlKFwidmFsdWVzXCIsIHdoZWVsKTtcbiAgICB2YWx1ZXMuc2hvdWxkLmhhdmUubGVuZ3RoKDUyKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIGdldCBhbmQgc2V0IGEgc2xpZGVyIHZhbHVlIEBza2lwLWNpJywgYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGRyaXZlci5leGVjdXRlKFwibW9iaWxlOiBzY3JvbGxcIiwge2RpcmVjdGlvbjogJ2Rvd24nfSk7XG4gICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCd4cGF0aCcsIFwiLy9VSUFTdGF0aWNUZXh0W2NvbnRhaW5zKEBsYWJlbCwnU2xpZGVycycpXVwiKTtcbiAgICBhd2FpdCBkcml2ZXIuY2xpY2soZWwpO1xuXG4gICAgbGV0IHNsaWRlciA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnY2xhc3MgbmFtZScsIFwiVUlBU2xpZGVyXCIpO1xuICAgIGxldCB2YWx1ZSA9IGF3YWl0IGRyaXZlci5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBzbGlkZXIpO1xuICAgIHZhbHVlLnNob3VsZC5lcXVhbCgnNDIlJyk7XG5cbiAgICBhd2FpdCBkcml2ZXIuc2V0VmFsdWUoMC44LCBzbGlkZXIpO1xuICAgIC8vIGdpdmUgYSBtb21lbnQgZm9yIHRoZSBjaGFuZ2UgdG8gcmVnaXN0ZXJcbiAgICBhd2FpdCBCLmRlbGF5KDUwMCk7XG5cbiAgICB2YWx1ZSA9IGF3YWl0IGRyaXZlci5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBzbGlkZXIpO1xuICAgIHZhbHVlID0gcGFyc2VJbnQodmFsdWUucmVwbGFjZSgnJScsICcnKSwgMTApO1xuICAgIHZhbHVlLnNob3VsZC5iZS5hYm92ZSg3NSk7XG4gICAgdmFsdWUuc2hvdWxkLmJlLmJlbG93KDg1KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
