"use strict";

var _createClass = require("babel-runtime/helpers/create-class")["default"];

var _classCallCheck = require("babel-runtime/helpers/class-call-check")["default"];

var _getIterator = require("babel-runtime/core-js/get-iterator")["default"];

var _regeneratorRuntime = require("babel-runtime/regenerator")["default"];

var _interopRequireDefault = require("babel-runtime/helpers/interop-require-default")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _env = require('./env');

var _env2 = _interopRequireDefault(_env);

var _bluebird = require("bluebird");

var _bluebird2 = _interopRequireDefault(_bluebird);

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

var _2 = require('../../..');

var _appiumBaseDriver = require('appium-base-driver');

var _libLogger = require('../../../lib/logger');

var _libLogger2 = _interopRequireDefault(_libLogger);

var MOCHA_TIMEOUT = 60 * 1000 * (process.env.TRAVIS ? 20 : 4);
var MOCHA_SAFARI_TIMEOUT = MOCHA_TIMEOUT * 2;

var Session = (function () {
  function Session() {
    var _this = this;

    var desired = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    _classCallCheck(this, Session);

    this.desired = desired;
    this.opts = opts;
    this.initialized = false;

    this.rawDriver = new _2.IosDriver(this.opts);

    // wrapping the driver so that the call goes
    // through executeCommand
    this.driver = {};
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      var _loop = function () {
        var c = _step.value;

        _this.driver[c] = (function () {
          var _rawDriver;

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return (_rawDriver = this.rawDriver).executeCommand.apply(_rawDriver, [c].concat(args));
        }).bind(_this);
      };

      for (var _iterator = _getIterator(_appiumBaseDriver.ALL_COMMANDS), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        _loop();
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator["return"]) {
          _iterator["return"]();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    var _arr = ['createSession', 'deleteSession'];
    for (var _i = 0; _i < _arr.length; _i++) {
      var c = _arr[_i];
      this.driver[c] = this.rawDriver[c].bind(this.rawDriver);
    }
  }

  _createClass(Session, [{
    key: "setUp",
    value: function setUp() {
      var caps, init, attempts;
      return _regeneratorRuntime.async(function setUp$(context$2$0) {
        var _this2 = this;

        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            caps = _lodash2["default"].clone(this.desired);

            _lodash2["default"].defaults(caps, _env2["default"].CAPS);

            _libLogger2["default"].debug("caps -->", caps);
            _libLogger2["default"].debug("opts -->", this.opts);

            init = function init(remainingAttempts) {
              return _regeneratorRuntime.async(function init$(context$3$0) {
                while (1) switch (context$3$0.prev = context$3$0.next) {
                  case 0:
                    _libLogger2["default"].debug("remainingAttempts --> " + remainingAttempts);
                    context$3$0.prev = 1;
                    context$3$0.next = 4;
                    return _regeneratorRuntime.awrap(this.driver.createSession(caps));

                  case 4:
                    context$3$0.next = 20;
                    break;

                  case 6:
                    context$3$0.prev = 6;
                    context$3$0.t0 = context$3$0["catch"](1);

                    _libLogger2["default"].debug("Init failed with error --> " + context$3$0.t0);
                    remainingAttempts--;

                    if (!(remainingAttempts === 0)) {
                      context$3$0.next = 14;
                      break;
                    }

                    throw context$3$0.t0;

                  case 14:
                    context$3$0.next = 16;
                    return _regeneratorRuntime.awrap(this.driver.deleteSession());

                  case 16:
                    context$3$0.next = 18;
                    return _regeneratorRuntime.awrap(_bluebird2["default"].delay(10000));

                  case 18:
                    context$3$0.next = 20;
                    return _regeneratorRuntime.awrap(init(remainingAttempts));

                  case 20:
                  case "end":
                    return context$3$0.stop();
                }
              }, null, _this2, [[1, 6]]);
            };

            attempts = this.opts['no-retry'] ? 1 : 3;

            if (_env2["default"].MAX_RETRY) attempts = Math.min(_env2["default"].MAX_RETRY, attempts);
            context$2$0.next = 9;
            return _regeneratorRuntime.awrap(init(attempts));

          case 9:
            this.initialized = true;
            context$2$0.next = 12;
            return _regeneratorRuntime.awrap(this.driver.implicitWait(_env2["default"].IMPLICIT_WAIT_TIMEOUT));

          case 12:
          case "end":
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: "tearDown",
    value: function tearDown() {
      return _regeneratorRuntime.async(function tearDown$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            if (!this.initialized) {
              context$2$0.next = 9;
              break;
            }

            context$2$0.prev = 1;
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap(this.driver.deleteSession());

          case 4:
            context$2$0.next = 9;
            break;

          case 6:
            context$2$0.prev = 6;
            context$2$0.t0 = context$2$0["catch"](1);

            _libLogger2["default"].warn("didn't quit cleanly.");

          case 9:
          case "end":
            return context$2$0.stop();
        }
      }, null, this, [[1, 6]]);
    }
  }]);

  return Session;
})();

exports.Session = Session;
exports.MOCHA_TIMEOUT = MOCHA_TIMEOUT;
exports.MOCHA_SAFARI_TIMEOUT = MOCHA_SAFARI_TIMEOUT;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2hlbHBlcnMvc2Vzc2lvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7bUJBQ0csT0FBTzs7Ozt3QkFDVCxVQUFVOzs7O3NCQUNWLFFBQVE7Ozs7aUJBQ0ksVUFBVTs7Z0NBQ1Asb0JBQW9COzt5QkFDakMscUJBQXFCOzs7O0FBR3JDLElBQU0sYUFBYSxHQUFHLEVBQUUsR0FBRyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQSxBQUFDLENBQUM7QUFDaEUsSUFBTSxvQkFBb0IsR0FBRyxhQUFhLEdBQUcsQ0FBQyxDQUFDOztJQUV6QyxPQUFPO0FBQ0MsV0FEUixPQUFPLEdBQ3VCOzs7UUFBckIsT0FBTyx5REFBQyxFQUFFO1FBQUUsSUFBSSx5REFBQyxFQUFFOzswQkFENUIsT0FBTzs7QUFFVCxRQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztBQUN2QixRQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztBQUNqQixRQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQzs7QUFFekIsUUFBSSxDQUFDLFNBQVMsR0FBRyxpQkFBYyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Ozs7QUFJMUMsUUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7Ozs7Ozs7WUFDUixDQUFDOztBQUNSLGNBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUEsWUFBbUI7Ozs0Q0FBTixJQUFJO0FBQUosZ0JBQUk7OztBQUNoQyxpQkFBTyxjQUFBLElBQUksQ0FBQyxTQUFTLEVBQUMsY0FBYyxNQUFBLGNBQUMsQ0FBQyxTQUFLLElBQUksRUFBQyxDQUFDO1NBQ2xELENBQUEsQ0FBQyxJQUFJLE9BQU0sQ0FBQzs7O0FBSGYsa0xBQTRCOztPQUkzQjs7Ozs7Ozs7Ozs7Ozs7OztlQUNhLENBQUMsZUFBZSxFQUFFLGVBQWUsQ0FBQztBQUFoRCw2Q0FBa0Q7QUFBN0MsVUFBSSxDQUFDLFdBQUEsQ0FBQTtBQUNSLFVBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0tBQ3pEO0dBQ0Y7O2VBbkJHLE9BQU87O1dBcUJDO1VBQ04sSUFBSSxFQU1KLElBQUksRUFpQkosUUFBUTs7Ozs7O0FBdkJSLGdCQUFJLEdBQUcsb0JBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7O0FBQ2hDLGdDQUFFLFFBQVEsQ0FBQyxJQUFJLEVBQUUsaUJBQUksSUFBSSxDQUFDLENBQUM7O0FBRTNCLG1DQUFJLEtBQUssQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDNUIsbUNBQUksS0FBSyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRTdCLGdCQUFJLEdBQUcsU0FBUCxJQUFJLENBQVUsaUJBQWlCOzs7O0FBQ2pDLDJDQUFJLEtBQUssNEJBQTBCLGlCQUFpQixDQUFHLENBQUM7OztxREFFaEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDOzs7Ozs7Ozs7O0FBRXJDLDJDQUFJLEtBQUssZ0RBQXFDLENBQUM7QUFDL0MscUNBQWlCLEVBQUcsQ0FBQzs7MEJBQ2pCLGlCQUFpQixLQUFLLENBQUMsQ0FBQTs7Ozs7Ozs7O3FEQUduQixJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRTs7OztxREFDM0Isc0JBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQzs7OztxREFDZCxJQUFJLENBQUMsaUJBQWlCLENBQUM7Ozs7Ozs7YUFHbEM7O0FBRUcsb0JBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDOztBQUM1QyxnQkFBSSxpQkFBSSxTQUFTLEVBQUUsUUFBUSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsaUJBQUksU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDOzs2Q0FDMUQsSUFBSSxDQUFDLFFBQVEsQ0FBQzs7O0FBQ3BCLGdCQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQzs7NkNBQ2xCLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLGlCQUFJLHFCQUFxQixDQUFDOzs7Ozs7O0tBQzFEOzs7V0FFYzs7OztpQkFDVCxJQUFJLENBQUMsV0FBVzs7Ozs7Ozs2Q0FFVixJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRTs7Ozs7Ozs7OztBQUVqQyxtQ0FBSSxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQzs7Ozs7OztLQUd0Qzs7O1NBNURHLE9BQU87OztRQWdFSixPQUFPLEdBQVAsT0FBTztRQUFFLGFBQWEsR0FBYixhQUFhO1FBQUUsb0JBQW9CLEdBQXBCLG9CQUFvQiIsImZpbGUiOiJ0ZXN0L2UyZS9oZWxwZXJzL3Nlc3Npb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCBlbnYgZnJvbSAnLi9lbnYnO1xuaW1wb3J0IEIgZnJvbSBcImJsdWViaXJkXCI7XG5pbXBvcnQgXyBmcm9tIFwibG9kYXNoXCI7XG5pbXBvcnQgeyBJb3NEcml2ZXIgfSBmcm9tICcuLi8uLi8uLic7XG5pbXBvcnQgeyBBTExfQ09NTUFORFMgfSBmcm9tICdhcHBpdW0tYmFzZS1kcml2ZXInO1xuaW1wb3J0IGxvZyBmcm9tICcuLi8uLi8uLi9saWIvbG9nZ2VyJztcblxuXG5jb25zdCBNT0NIQV9USU1FT1VUID0gNjAgKiAxMDAwICogKHByb2Nlc3MuZW52LlRSQVZJUyA/IDIwIDogNCk7XG5jb25zdCBNT0NIQV9TQUZBUklfVElNRU9VVCA9IE1PQ0hBX1RJTUVPVVQgKiAyO1xuXG5jbGFzcyBTZXNzaW9uIHtcbiAgY29uc3RydWN0b3IgKGRlc2lyZWQ9e30sIG9wdHM9e30pIHtcbiAgICB0aGlzLmRlc2lyZWQgPSBkZXNpcmVkO1xuICAgIHRoaXMub3B0cyA9IG9wdHM7XG4gICAgdGhpcy5pbml0aWFsaXplZCA9IGZhbHNlO1xuXG4gICAgdGhpcy5yYXdEcml2ZXIgPSBuZXcgSW9zRHJpdmVyKHRoaXMub3B0cyk7XG5cbiAgICAvLyB3cmFwcGluZyB0aGUgZHJpdmVyIHNvIHRoYXQgdGhlIGNhbGwgZ29lc1xuICAgIC8vIHRocm91Z2ggZXhlY3V0ZUNvbW1hbmRcbiAgICB0aGlzLmRyaXZlciA9IHt9O1xuICAgIGZvciAobGV0IGMgb2YgQUxMX0NPTU1BTkRTKSB7XG4gICAgICB0aGlzLmRyaXZlcltjXSA9IGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJhd0RyaXZlci5leGVjdXRlQ29tbWFuZChjLCAuLi5hcmdzKTtcbiAgICAgIH0uYmluZCh0aGlzKTtcbiAgICB9XG4gICAgZm9yIChsZXQgYyBvZiBbJ2NyZWF0ZVNlc3Npb24nLCAnZGVsZXRlU2Vzc2lvbiddKSB7XG4gICAgICB0aGlzLmRyaXZlcltjXSA9IHRoaXMucmF3RHJpdmVyW2NdLmJpbmQodGhpcy5yYXdEcml2ZXIpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHNldFVwICgpIHtcbiAgICBsZXQgY2FwcyA9IF8uY2xvbmUodGhpcy5kZXNpcmVkKTtcbiAgICBfLmRlZmF1bHRzKGNhcHMsIGVudi5DQVBTKTtcblxuICAgIGxvZy5kZWJ1ZyhcImNhcHMgLS0+XCIsIGNhcHMpO1xuICAgIGxvZy5kZWJ1ZyhcIm9wdHMgLS0+XCIsIHRoaXMub3B0cyk7XG5cbiAgICBsZXQgaW5pdCA9IGFzeW5jIChyZW1haW5pbmdBdHRlbXB0cykgPT4ge1xuICAgICAgbG9nLmRlYnVnKGByZW1haW5pbmdBdHRlbXB0cyAtLT4gJHtyZW1haW5pbmdBdHRlbXB0c31gKTtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IHRoaXMuZHJpdmVyLmNyZWF0ZVNlc3Npb24oY2Fwcyk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgbG9nLmRlYnVnKGBJbml0IGZhaWxlZCB3aXRoIGVycm9yIC0tPiAke2Vycn1gKTtcbiAgICAgICAgcmVtYWluaW5nQXR0ZW1wdHMgLS07XG4gICAgICAgIGlmIChyZW1haW5pbmdBdHRlbXB0cyA9PT0gMCkge1xuICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhd2FpdCB0aGlzLmRyaXZlci5kZWxldGVTZXNzaW9uKCk7XG4gICAgICAgICAgYXdhaXQgQi5kZWxheSgxMDAwMCk7XG4gICAgICAgICAgYXdhaXQgaW5pdChyZW1haW5pbmdBdHRlbXB0cyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgbGV0IGF0dGVtcHRzID0gdGhpcy5vcHRzWyduby1yZXRyeSddID8gMSA6IDM7XG4gICAgaWYgKGVudi5NQVhfUkVUUlkpIGF0dGVtcHRzID0gTWF0aC5taW4oZW52Lk1BWF9SRVRSWSwgYXR0ZW1wdHMpO1xuICAgIGF3YWl0IGluaXQoYXR0ZW1wdHMpO1xuICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgIGF3YWl0IHRoaXMuZHJpdmVyLmltcGxpY2l0V2FpdChlbnYuSU1QTElDSVRfV0FJVF9USU1FT1VUKTtcbiAgfVxuXG4gIGFzeW5jIHRlYXJEb3duICgpIHtcbiAgICBpZiAodGhpcy5pbml0aWFsaXplZCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgdGhpcy5kcml2ZXIuZGVsZXRlU2Vzc2lvbigpO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGxvZy53YXJuKFwiZGlkbid0IHF1aXQgY2xlYW5seS5cIik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbn1cblxuZXhwb3J0IHsgU2Vzc2lvbiwgTU9DSEFfVElNRU9VVCwgTU9DSEFfU0FGQVJJX1RJTUVPVVQgfTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
