'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumBaseDriver = require('appium-base-driver');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumSupport = require('appium-support');

var _utils = require('../utils');

var commands = {},
    helpers = {},
    extensions = {};

commands.getAttribute = function callee$0$0(attribute, el) {
  var atomsElement, command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);

        if (!this.isWebContext()) {
          context$1$0.next = 12;
          break;
        }

        atomsElement = this.getAtomsElement(el);

        if (!_lodash2['default'].isNull(atomsElement)) {
          context$1$0.next = 7;
          break;
        }

        throw new _appiumBaseDriver.errors.UnknownError('Error converting element ID for using in WD atoms: \'' + el);

      case 7:
        context$1$0.next = 9;
        return _regeneratorRuntime.awrap(this.executeAtom('get_attribute_value', [atomsElement, attribute]));

      case 9:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 10:
        context$1$0.next = 20;
        break;

      case 12:
        if (!_lodash2['default'].includes(['label', 'name', 'value', 'values', 'hint'], attribute)) {
          context$1$0.next = 19;
          break;
        }

        command = 'au.getElement(\'' + el + '\').' + attribute + '()';
        context$1$0.next = 16;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 16:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 19:
        throw new _appiumBaseDriver.errors.UnknownCommandError('UIAElements don\'t have the attribute \'' + attribute + '\'');

      case 20:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.clear = function callee$0$0(el) {
  var atomsElement, command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);

        if (!this.isWebContext()) {
          context$1$0.next = 7;
          break;
        }

        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.executeAtom('clear', [atomsElement]));

      case 5:
        context$1$0.next = 10;
        break;

      case 7:
        command = 'au.getElement(\'' + el + '\').setValue(\'\')';
        context$1$0.next = 10;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 10:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setValueImmediate = function callee$0$0(value, el) {
  var command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);
        value = _appiumSupport.util.escapeSpecialChars(value, "'");
        command = 'au.getElement(\'' + el + '\').setValue(\'' + value + '\')';
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setValue = function callee$0$0(value, el) {
  var atomsElement, command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);

        if (!this.isWebContext()) {
          context$1$0.next = 9;
          break;
        }

        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.executeAtom('click', [atomsElement]));

      case 5:
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.executeAtom('type', [atomsElement, value]));

      case 7:
        context$1$0.next = 20;
        break;

      case 9:
        if (value instanceof Array) {
          value = value.join("");
        }
        if (typeof value !== 'string') {
          value = value.toString();
        }
        value = _appiumSupport.util.escapeSpecialChars(value, "'");
        // de-escape \n so it can be used specially
        value = value.replace(/\\\\n/g, "\\n");

        if (!this.opts.useRobot) {
          context$1$0.next = 17;
          break;
        }

        throw new _appiumBaseDriver.errors.NotYetImplementedError();

      case 17:
        command = 'au.getElement(\'' + el + '\').setValueByType(\'' + value + '\')';
        context$1$0.next = 20;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 20:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getText = function callee$0$0(el) {
  var atomsElement, command, res;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);

        if (!this.isWebContext()) {
          context$1$0.next = 8;
          break;
        }

        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.executeAtom('get_text', [atomsElement]));

      case 5:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 8:
        command = 'au.getElement(\'' + el + '\').text()';
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 11:
        res = context$1$0.sent;

        // in some cases instruments returns in integer. we only want a string
        res = res ? res.toString() : '';
        return context$1$0.abrupt('return', res);

      case 14:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.elementDisplayed = function callee$0$0(el) {
  var atomsElement, command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);

        if (!this.isWebContext()) {
          context$1$0.next = 8;
          break;
        }

        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.executeAtom('is_displayed', [atomsElement]));

      case 5:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 8:
        command = 'au.getElement(\'' + el + '\').isDisplayed()';
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 11:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 12:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.elementEnabled = function callee$0$0(el) {
  var atomsElement, command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);

        if (!this.isWebContext()) {
          context$1$0.next = 8;
          break;
        }

        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.executeAtom('is_enabled', [atomsElement]));

      case 5:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 8:
        command = 'au.getElement(\'' + el + '\').isEnabled() === 1';
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 11:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 12:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.elementSelected = function callee$0$0(el) {
  var atomsElement, command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);

        if (!this.isWebContext()) {
          context$1$0.next = 8;
          break;
        }

        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.executeAtom('is_selected', [atomsElement]));

      case 5:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 8:
        command = 'au.getElement(\'' + el + '\').isSelected()';
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 11:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 12:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getName = function callee$0$0(el) {
  var atomsElement, script, command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);

        if (!this.isWebContext()) {
          context$1$0.next = 9;
          break;
        }

        atomsElement = this.useAtomsElement(el);
        script = 'return arguments[0].tagName.toLowerCase()';
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(this.executeAtom('execute_script', [script, [atomsElement]]));

      case 6:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 9:
        command = 'au.getElement(\'' + el + '\').type()';
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 12:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getLocation = function callee$0$0(el) {
  var atomsElement, command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);

        if (!this.isWebContext()) {
          context$1$0.next = 10;
          break;
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.useAtomsElement(el));

      case 4:
        atomsElement = context$1$0.sent;
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.executeAtom('get_top_left_coordinates', [atomsElement]));

      case 7:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 10:
        command = 'au.getElement(\'' + el + '\').getElementLocation()';
        context$1$0.next = 13;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 13:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 14:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getLocationInView = function callee$0$0(el) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getLocation(el));

      case 2:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getSize = function callee$0$0(el) {
  var atomsElement, command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = (0, _utils.unwrapEl)(el);

        if (!this.isWebContext()) {
          context$1$0.next = 12;
          break;
        }

        atomsElement = this.getAtomsElement(el);

        if (!(atomsElement === null)) {
          context$1$0.next = 7;
          break;
        }

        throw new _appiumBaseDriver.errors.UnknownError('Error converting element ID for using in WD atoms: \'' + el + '\'');

      case 7:
        context$1$0.next = 9;
        return _regeneratorRuntime.awrap(this.executeAtom('get_size', [atomsElement]));

      case 9:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 10:
        context$1$0.next = 16;
        break;

      case 12:
        command = 'au.getElement(\'' + el + '\').getElementSize()';
        context$1$0.next = 15;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 15:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 16:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;

/* TODO */
//# sourceMappingURL=data:application/json;charset=utf8;base64,
