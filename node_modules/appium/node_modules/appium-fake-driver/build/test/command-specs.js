'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _libCommandsContexts = require('../lib/commands/contexts');

var _libCommandsContexts2 = _interopRequireDefault(_libCommandsContexts);

var _libCommandsElement = require('../lib/commands/element');

var _libCommandsElement2 = _interopRequireDefault(_libCommandsElement);

var _libCommandsFind = require('../lib/commands/find');

var _libCommandsFind2 = _interopRequireDefault(_libCommandsFind);

var _libCommandsGeneral = require('../lib/commands/general');

var _libCommandsGeneral2 = _interopRequireDefault(_libCommandsGeneral);

var _libCommands = require('../lib/commands');

var _libCommands2 = _interopRequireDefault(_libCommands);

describe('Driver commands', function () {
  var allCommands = [_lodash2['default'].keys(_libCommandsContexts2['default']), _lodash2['default'].keys(_libCommandsElement2['default']), _lodash2['default'].keys(_libCommandsFind2['default']), _lodash2['default'].keys(_libCommandsGeneral2['default'])];
  var totalCommands = _lodash2['default'].sum(allCommands.map(function (c) {
    return c.length;
  }));
  it('should not overlap between files', function () {
    _lodash2['default'].union.apply(_lodash2['default'], allCommands).length.should.equal(totalCommands);
  });
  it('should export all commands and not leave any out', function () {
    _lodash2['default'].difference(_lodash2['default'].union.apply(_lodash2['default'], allCommands), _lodash2['default'].keys(_libCommands2['default'])).should.eql([]);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvY29tbWFuZC1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O3NCQUFjLFFBQVE7Ozs7bUNBRU0sMEJBQTBCOzs7O2tDQUMxQix5QkFBeUI7Ozs7K0JBQzVCLHNCQUFzQjs7OztrQ0FDbkIseUJBQXlCOzs7OzJCQUN4QixpQkFBaUI7Ozs7QUFFOUMsUUFBUSxDQUFDLGlCQUFpQixFQUFFLFlBQU07QUFDaEMsTUFBSSxXQUFXLEdBQUcsQ0FDaEIsb0JBQUUsSUFBSSxrQ0FBaUIsRUFDdkIsb0JBQUUsSUFBSSxpQ0FBaUIsRUFDdkIsb0JBQUUsSUFBSSw4QkFBYyxFQUNwQixvQkFBRSxJQUFJLGlDQUFpQixDQUN4QixDQUFDO0FBQ0YsTUFBSSxhQUFhLEdBQUcsb0JBQUUsR0FBRyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDO1dBQUksQ0FBQyxDQUFDLE1BQU07R0FBQSxDQUFDLENBQUMsQ0FBQztBQUMxRCxJQUFFLENBQUMsa0NBQWtDLEVBQUUsWUFBTTtBQUMzQyx3QkFBRSxLQUFLLE1BQUEsc0JBQUksV0FBVyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7R0FDNUQsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLGtEQUFrRCxFQUFFLFlBQU07QUFDM0Qsd0JBQUUsVUFBVSxDQUNWLG9CQUFFLEtBQUssTUFBQSxzQkFBSSxXQUFXLENBQUMsRUFDdkIsb0JBQUUsSUFBSSwwQkFBa0IsQ0FDekIsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0dBQ2xCLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2NvbW1hbmQtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgY29udGV4dENvbW1hbmRzIGZyb20gJy4uL2xpYi9jb21tYW5kcy9jb250ZXh0cyc7XG5pbXBvcnQgZWxlbWVudENvbW1hbmRzIGZyb20gJy4uL2xpYi9jb21tYW5kcy9lbGVtZW50JztcbmltcG9ydCBmaW5kQ29tbWFuZHMgZnJvbSAnLi4vbGliL2NvbW1hbmRzL2ZpbmQnO1xuaW1wb3J0IGdlbmVyYWxDb21tYW5kcyBmcm9tICcuLi9saWIvY29tbWFuZHMvZ2VuZXJhbCc7XG5pbXBvcnQgZXhwb3J0ZWRDb21tYW5kcyBmcm9tICcuLi9saWIvY29tbWFuZHMnO1xuXG5kZXNjcmliZSgnRHJpdmVyIGNvbW1hbmRzJywgKCkgPT4ge1xuICBsZXQgYWxsQ29tbWFuZHMgPSBbXG4gICAgXy5rZXlzKGNvbnRleHRDb21tYW5kcyksXG4gICAgXy5rZXlzKGVsZW1lbnRDb21tYW5kcyksXG4gICAgXy5rZXlzKGZpbmRDb21tYW5kcyksXG4gICAgXy5rZXlzKGdlbmVyYWxDb21tYW5kcylcbiAgXTtcbiAgbGV0IHRvdGFsQ29tbWFuZHMgPSBfLnN1bShhbGxDb21tYW5kcy5tYXAoYyA9PiBjLmxlbmd0aCkpO1xuICBpdCgnc2hvdWxkIG5vdCBvdmVybGFwIGJldHdlZW4gZmlsZXMnLCAoKSA9PiB7XG4gICAgXy51bmlvbiguLi5hbGxDb21tYW5kcykubGVuZ3RoLnNob3VsZC5lcXVhbCh0b3RhbENvbW1hbmRzKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgZXhwb3J0IGFsbCBjb21tYW5kcyBhbmQgbm90IGxlYXZlIGFueSBvdXQnLCAoKSA9PiB7XG4gICAgXy5kaWZmZXJlbmNlKFxuICAgICAgXy51bmlvbiguLi5hbGxDb21tYW5kcyksXG4gICAgICBfLmtleXMoZXhwb3J0ZWRDb21tYW5kcylcbiAgICApLnNob3VsZC5lcWwoW10pO1xuICB9KTtcbn0pO1xuXG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=
