'use strict';

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumBaseDriver = require('appium-base-driver');

var _fakeElement = require('../fake-element');

var commands = {},
    helpers = {},
    extensions = {};

helpers.getExistingElementForNode = function (node) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = _getIterator(_lodash2['default'].pairs(this.elMap)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _step$value = _slicedToArray(_step.value, 2);

      var id = _step$value[0];
      var el = _step$value[1];

      if (el.node === node) {
        return id;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator['return']) {
        _iterator['return']();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return null;
};

helpers.wrapNewEl = function (obj) {
  // first check and see if we already have a ref to this element
  var existingElId = this.getExistingElementForNode(obj);
  if (existingElId) {
    return { ELEMENT: existingElId };
  }

  // otherwise add the element to the map
  this.maxElId++;
  this.elMap[this.maxElId.toString()] = new _fakeElement.FakeElement(obj, this.appModel);
  return { ELEMENT: this.maxElId.toString() };
};

helpers.findElOrEls = function callee$0$0(strategy, selector, mult, ctx) {
  var qMap, els, allEls, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, el;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        qMap = {
          'xpath': 'xpathQuery',
          'id': 'idQuery',
          'accessibility id': 'idQuery',
          'class name': 'classQuery',
          'tag name': 'classQuery'
        };

        if (_lodash2['default'].contains(_lodash2['default'].keys(qMap), strategy)) {
          context$1$0.next = 3;
          break;
        }

        throw new _appiumBaseDriver.errors.UnknownCommandError();

      case 3:
        if (!(selector === "badsel")) {
          context$1$0.next = 5;
          break;
        }

        throw new _appiumBaseDriver.errors.InvalidSelectorError();

      case 5:
        els = this.appModel[qMap[strategy]](selector, ctx);

        if (!els.length) {
          context$1$0.next = 34;
          break;
        }

        if (!mult) {
          context$1$0.next = 31;
          break;
        }

        allEls = [];
        _iteratorNormalCompletion2 = true;
        _didIteratorError2 = false;
        _iteratorError2 = undefined;
        context$1$0.prev = 12;

        for (_iterator2 = _getIterator(els); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          el = _step2.value;

          allEls.push(this.wrapNewEl(el));
        }
        context$1$0.next = 20;
        break;

      case 16:
        context$1$0.prev = 16;
        context$1$0.t0 = context$1$0['catch'](12);
        _didIteratorError2 = true;
        _iteratorError2 = context$1$0.t0;

      case 20:
        context$1$0.prev = 20;
        context$1$0.prev = 21;

        if (!_iteratorNormalCompletion2 && _iterator2['return']) {
          _iterator2['return']();
        }

      case 23:
        context$1$0.prev = 23;

        if (!_didIteratorError2) {
          context$1$0.next = 26;
          break;
        }

        throw _iteratorError2;

      case 26:
        return context$1$0.finish(23);

      case 27:
        return context$1$0.finish(20);

      case 28:
        return context$1$0.abrupt('return', allEls);

      case 31:
        return context$1$0.abrupt('return', this.wrapNewEl(els[0]));

      case 32:
        context$1$0.next = 39;
        break;

      case 34:
        if (!mult) {
          context$1$0.next = 38;
          break;
        }

        return context$1$0.abrupt('return', []);

      case 38:
        throw new _appiumBaseDriver.errors.NoSuchElementError();

      case 39:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[12, 16, 20, 28], [21,, 23, 27]]);
};

commands.findElement = function callee$0$0(strategy, selector) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.findElOrEls(strategy, selector, false));

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.findElements = function callee$0$0(strategy, selector) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.findElOrEls(strategy, selector, true));

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.findElementFromElement = function callee$0$0(strategy, selector, elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', this.findElOrEls(strategy, selector, false, el.xmlFragment));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.findElementsFromElement = function callee$0$0(strategy, selector, elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', this.findElOrEls(strategy, selector, true, el.xmlFragment));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;

// TODO this error checking should probably be part of MJSONWP?
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9maW5kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7c0JBQWMsUUFBUTs7OztnQ0FDQyxvQkFBb0I7OzJCQUNmLGlCQUFpQjs7QUFFN0MsSUFBSSxRQUFRLEdBQUcsRUFBRTtJQUFFLE9BQU8sR0FBRyxFQUFFO0lBQUUsVUFBVSxHQUFHLEVBQUUsQ0FBQzs7QUFFakQsT0FBTyxDQUFDLHlCQUF5QixHQUFHLFVBQVUsSUFBSSxFQUFFOzs7Ozs7QUFDbEQsc0NBQXFCLG9CQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLDRHQUFFOzs7VUFBaEMsRUFBRTtVQUFFLEVBQUU7O0FBQ2QsVUFBSSxFQUFFLENBQUMsSUFBSSxLQUFLLElBQUksRUFBRTtBQUNwQixlQUFPLEVBQUUsQ0FBQztPQUNYO0tBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDRCxTQUFPLElBQUksQ0FBQztDQUNiLENBQUM7O0FBRUYsT0FBTyxDQUFDLFNBQVMsR0FBRyxVQUFVLEdBQUcsRUFBRTs7QUFFakMsTUFBSSxZQUFZLEdBQUcsSUFBSSxDQUFDLHlCQUF5QixDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3ZELE1BQUksWUFBWSxFQUFFO0FBQ2hCLFdBQU8sRUFBQyxPQUFPLEVBQUUsWUFBWSxFQUFDLENBQUM7R0FDaEM7OztBQUdELE1BQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUNmLE1BQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLDZCQUFnQixHQUFHLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzFFLFNBQU8sRUFBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsRUFBQyxDQUFDO0NBQzNDLENBQUM7O0FBRUYsT0FBTyxDQUFDLFdBQVcsR0FBRyxvQkFBZ0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsR0FBRztNQUM3RCxJQUFJLEVBY0osR0FBRyxFQUdDLE1BQU0sdUZBQ0QsRUFBRTs7Ozs7QUFsQlgsWUFBSSxHQUFHO0FBQ1QsaUJBQU8sRUFBRSxZQUFZO0FBQ3JCLGNBQUksRUFBRSxTQUFTO0FBQ2YsNEJBQWtCLEVBQUUsU0FBUztBQUM3QixzQkFBWSxFQUFFLFlBQVk7QUFDMUIsb0JBQVUsRUFBRSxZQUFZO1NBQ3pCOztZQUVJLG9CQUFFLFFBQVEsQ0FBQyxvQkFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsUUFBUSxDQUFDOzs7OztjQUMvQixJQUFJLHlCQUFPLG1CQUFtQixFQUFFOzs7Y0FFcEMsUUFBUSxLQUFLLFFBQVEsQ0FBQTs7Ozs7Y0FDakIsSUFBSSx5QkFBTyxvQkFBb0IsRUFBRTs7O0FBRXJDLFdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUM7O2FBQ2xELEdBQUcsQ0FBQyxNQUFNOzs7OzthQUNSLElBQUk7Ozs7O0FBQ0YsY0FBTSxHQUFHLEVBQUU7Ozs7OztBQUNmLHVDQUFlLEdBQUcseUdBQUU7QUFBWCxZQUFFOztBQUNULGdCQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUNqQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NENBQ00sTUFBTTs7OzRDQUVOLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDOzs7Ozs7O2FBRXRCLElBQUk7Ozs7OzRDQUNOLEVBQUU7OztjQUVILElBQUkseUJBQU8sa0JBQWtCLEVBQUU7Ozs7Ozs7Q0FFeEMsQ0FBQzs7QUFFRixRQUFRLENBQUMsV0FBVyxHQUFHLG9CQUFnQixRQUFRLEVBQUUsUUFBUTs7Ozs0Q0FDaEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQzs7Ozs7OztDQUNuRCxDQUFDOztBQUVGLFFBQVEsQ0FBQyxZQUFZLEdBQUcsb0JBQWdCLFFBQVEsRUFBRSxRQUFROzs7OzRDQUNqRCxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDOzs7Ozs7O0NBQ2xELENBQUM7O0FBRUYsUUFBUSxDQUFDLHNCQUFzQixHQUFHLG9CQUFnQixRQUFRLEVBQUUsUUFBUSxFQUFFLFNBQVM7TUFDekUsRUFBRTs7OztBQUFGLFVBQUUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQzs0Q0FDNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDOzs7Ozs7O0NBQ25FLENBQUM7O0FBRUYsUUFBUSxDQUFDLHVCQUF1QixHQUFHLG9CQUFnQixRQUFRLEVBQUUsUUFBUSxFQUFFLFNBQVM7TUFDMUUsRUFBRTs7OztBQUFGLFVBQUUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQzs0Q0FDNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDOzs7Ozs7O0NBQ2xFLENBQUM7O0FBRUYsZUFBYyxVQUFVLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3BDLFFBQVEsR0FBUixRQUFRO1FBQUUsT0FBTyxHQUFQLE9BQU87cUJBQ1gsVUFBVSIsImZpbGUiOiJsaWIvY29tbWFuZHMvZmluZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBlcnJvcnMgfSBmcm9tICdhcHBpdW0tYmFzZS1kcml2ZXInO1xuaW1wb3J0IHsgRmFrZUVsZW1lbnQgfSBmcm9tICcuLi9mYWtlLWVsZW1lbnQnO1xuXG5sZXQgY29tbWFuZHMgPSB7fSwgaGVscGVycyA9IHt9LCBleHRlbnNpb25zID0ge307XG5cbmhlbHBlcnMuZ2V0RXhpc3RpbmdFbGVtZW50Rm9yTm9kZSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gIGZvciAobGV0IFtpZCwgZWxdIG9mIF8ucGFpcnModGhpcy5lbE1hcCkpIHtcbiAgICBpZiAoZWwubm9kZSA9PT0gbm9kZSkge1xuICAgICAgcmV0dXJuIGlkO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5cbmhlbHBlcnMud3JhcE5ld0VsID0gZnVuY3Rpb24gKG9iaikge1xuICAvLyBmaXJzdCBjaGVjayBhbmQgc2VlIGlmIHdlIGFscmVhZHkgaGF2ZSBhIHJlZiB0byB0aGlzIGVsZW1lbnRcbiAgbGV0IGV4aXN0aW5nRWxJZCA9IHRoaXMuZ2V0RXhpc3RpbmdFbGVtZW50Rm9yTm9kZShvYmopO1xuICBpZiAoZXhpc3RpbmdFbElkKSB7XG4gICAgcmV0dXJuIHtFTEVNRU5UOiBleGlzdGluZ0VsSWR9O1xuICB9XG5cbiAgLy8gb3RoZXJ3aXNlIGFkZCB0aGUgZWxlbWVudCB0byB0aGUgbWFwXG4gIHRoaXMubWF4RWxJZCsrO1xuICB0aGlzLmVsTWFwW3RoaXMubWF4RWxJZC50b1N0cmluZygpXSA9IG5ldyBGYWtlRWxlbWVudChvYmosIHRoaXMuYXBwTW9kZWwpO1xuICByZXR1cm4ge0VMRU1FTlQ6IHRoaXMubWF4RWxJZC50b1N0cmluZygpfTtcbn07XG5cbmhlbHBlcnMuZmluZEVsT3JFbHMgPSBhc3luYyBmdW5jdGlvbiAoc3RyYXRlZ3ksIHNlbGVjdG9yLCBtdWx0LCBjdHgpIHtcbiAgbGV0IHFNYXAgPSB7XG4gICAgJ3hwYXRoJzogJ3hwYXRoUXVlcnknLFxuICAgICdpZCc6ICdpZFF1ZXJ5JyxcbiAgICAnYWNjZXNzaWJpbGl0eSBpZCc6ICdpZFF1ZXJ5JyxcbiAgICAnY2xhc3MgbmFtZSc6ICdjbGFzc1F1ZXJ5JyxcbiAgICAndGFnIG5hbWUnOiAnY2xhc3NRdWVyeSdcbiAgfTtcbiAgLy8gVE9ETyB0aGlzIGVycm9yIGNoZWNraW5nIHNob3VsZCBwcm9iYWJseSBiZSBwYXJ0IG9mIE1KU09OV1A/XG4gIGlmICghXy5jb250YWlucyhfLmtleXMocU1hcCksIHN0cmF0ZWd5KSkge1xuICAgIHRocm93IG5ldyBlcnJvcnMuVW5rbm93bkNvbW1hbmRFcnJvcigpO1xuICB9XG4gIGlmIChzZWxlY3RvciA9PT0gXCJiYWRzZWxcIikge1xuICAgIHRocm93IG5ldyBlcnJvcnMuSW52YWxpZFNlbGVjdG9yRXJyb3IoKTtcbiAgfVxuICBsZXQgZWxzID0gdGhpcy5hcHBNb2RlbFtxTWFwW3N0cmF0ZWd5XV0oc2VsZWN0b3IsIGN0eCk7XG4gIGlmIChlbHMubGVuZ3RoKSB7XG4gICAgaWYgKG11bHQpIHtcbiAgICAgIGxldCBhbGxFbHMgPSBbXTtcbiAgICAgIGZvciAobGV0IGVsIG9mIGVscykge1xuICAgICAgICBhbGxFbHMucHVzaCh0aGlzLndyYXBOZXdFbChlbCkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGFsbEVscztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMud3JhcE5ld0VsKGVsc1swXSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKG11bHQpIHtcbiAgICByZXR1cm4gW107XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5Ob1N1Y2hFbGVtZW50RXJyb3IoKTtcbiAgfVxufTtcblxuY29tbWFuZHMuZmluZEVsZW1lbnQgPSBhc3luYyBmdW5jdGlvbiAoc3RyYXRlZ3ksIHNlbGVjdG9yKSB7XG4gIHJldHVybiB0aGlzLmZpbmRFbE9yRWxzKHN0cmF0ZWd5LCBzZWxlY3RvciwgZmFsc2UpO1xufTtcblxuY29tbWFuZHMuZmluZEVsZW1lbnRzID0gYXN5bmMgZnVuY3Rpb24gKHN0cmF0ZWd5LCBzZWxlY3Rvcikge1xuICByZXR1cm4gdGhpcy5maW5kRWxPckVscyhzdHJhdGVneSwgc2VsZWN0b3IsIHRydWUpO1xufTtcblxuY29tbWFuZHMuZmluZEVsZW1lbnRGcm9tRWxlbWVudCA9IGFzeW5jIGZ1bmN0aW9uIChzdHJhdGVneSwgc2VsZWN0b3IsIGVsZW1lbnRJZCkge1xuICBsZXQgZWwgPSB0aGlzLmdldEVsZW1lbnQoZWxlbWVudElkKTtcbiAgcmV0dXJuIHRoaXMuZmluZEVsT3JFbHMoc3RyYXRlZ3ksIHNlbGVjdG9yLCBmYWxzZSwgZWwueG1sRnJhZ21lbnQpO1xufTtcblxuY29tbWFuZHMuZmluZEVsZW1lbnRzRnJvbUVsZW1lbnQgPSBhc3luYyBmdW5jdGlvbiAoc3RyYXRlZ3ksIHNlbGVjdG9yLCBlbGVtZW50SWQpIHtcbiAgbGV0IGVsID0gdGhpcy5nZXRFbGVtZW50KGVsZW1lbnRJZCk7XG4gIHJldHVybiB0aGlzLmZpbmRFbE9yRWxzKHN0cmF0ZWd5LCBzZWxlY3RvciwgdHJ1ZSwgZWwueG1sRnJhZ21lbnQpO1xufTtcblxuT2JqZWN0LmFzc2lnbihleHRlbnNpb25zLCBjb21tYW5kcywgaGVscGVycyk7XG5leHBvcnQgeyBjb21tYW5kcywgaGVscGVyc307XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
