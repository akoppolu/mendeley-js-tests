'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _appiumSupport = require('appium-support');

var _libBasedriverHelpers = require('../../lib/basedriver/helpers');

var _libBasedriverHelpers2 = _interopRequireDefault(_libBasedriverHelpers);

var _http = require('http');

var _http2 = _interopRequireDefault(_http);

var _finalhandler = require('finalhandler');

var _finalhandler2 = _interopRequireDefault(_finalhandler);

var _serveStatic = require('serve-static');

var _serveStatic2 = _interopRequireDefault(_serveStatic);

var _contentDisposition = require('content-disposition');

var _contentDisposition2 = _interopRequireDefault(_contentDisposition);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

function getFixture(file) {
  return _path2['default'].resolve(__dirname, '..', '..', '..', 'test', 'basedriver', 'fixtures', file);
}

describe('app download and configuration', function () {
  describe('configureApp', function () {
    it('should get the path for a local .app', function callee$2$0() {
      var newAppPath, contents;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp(getFixture('FakeIOSApp.app'), '.app'));

          case 2:
            newAppPath = context$3$0.sent;

            newAppPath.should.contain('FakeIOSApp.app');
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.readFile(newAppPath, 'utf8'));

          case 6:
            contents = context$3$0.sent;

            contents.should.eql('this is not really an app\n');

          case 8:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should get the path for a local .apk', function callee$2$0() {
      var newAppPath, contents;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp(getFixture('FakeAndroidApp.apk'), '.apk'));

          case 2:
            newAppPath = context$3$0.sent;

            newAppPath.should.contain('FakeAndroidApp.apk');
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.readFile(newAppPath, 'utf8'));

          case 6:
            contents = context$3$0.sent;

            contents.should.eql('this is not really an apk\n');

          case 8:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should unzip and get the path for a local .app.zip', function callee$2$0() {
      var newAppPath, contents;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp(getFixture('FakeIOSApp.app.zip'), '.app'));

          case 2:
            newAppPath = context$3$0.sent;

            newAppPath.should.contain('FakeIOSApp.app');
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.readFile(newAppPath, 'utf8'));

          case 6:
            contents = context$3$0.sent;

            contents.should.eql('this is not really an app\n');

          case 8:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should unzip and get the path for a local .ipa', function callee$2$0() {
      var newAppPath, contents;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp(getFixture('FakeIOSApp.ipa'), '.app'));

          case 2:
            newAppPath = context$3$0.sent;

            newAppPath.should.contain('FakeIOSApp.app');
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.readFile(newAppPath, 'utf8'));

          case 6:
            contents = context$3$0.sent;

            contents.should.eql('this is not really an app\n');

          case 8:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should fail for a bad zip file', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp(getFixture('BadZippedApp.zip'), '.app').should.be.rejectedWith('Error testing zip archive, are you sure this is a zip file?'));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should fail if extensions do not match', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp(getFixture('FakeIOSApp.app'), '.wrong').should.be.rejectedWith(/did not have extension .wrong/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should fail if zip file does not contain an app whose extension matches', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp(getFixture('FakeIOSApp.app.zip'), '.wrong').should.be.rejectedWith(/could not find a .wrong bundle in it/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    describe('should download an app from the web', function callee$2$0() {
      var server;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        var _this2 = this;

        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            server = undefined;

            before(function () {
              var dir = _path2['default'].resolve(__dirname, '..', '..', '..', 'test', 'basedriver', 'fixtures');
              var serve = (0, _serveStatic2['default'])(dir, {
                index: false,
                setHeaders: function setHeaders(res, path) {
                  res.setHeader('Content-Disposition', (0, _contentDisposition2['default'])(path));
                }
              });

              server = _http2['default'].createServer(function (req, res) {
                if (req.url.indexOf('missing') !== -1) {
                  res.writeHead(404);
                  res.end();
                  return;
                }
                // for testing zip file content types
                if (req.url.indexOf('mime-zip') !== -1) {
                  res.setHeader('Content-Type', 'application/zip');
                } else if (req.url.indexOf('mime-bip') !== 1) {
                  res.setHeader('Content-Type', 'application/bip');
                }
                serve(req, res, (0, _finalhandler2['default'])(req, res));
              });
              server.listen(8000);
            });
            after(function () {
              server.close();
            });

            it('should download zip file', function callee$3$0() {
              var newAppPath, contents;
              return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
                while (1) switch (context$4$0.prev = context$4$0.next) {
                  case 0:
                    context$4$0.next = 2;
                    return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp('http://localhost:8000/FakeIOSApp.app.zip', '.app'));

                  case 2:
                    newAppPath = context$4$0.sent;

                    newAppPath.should.contain('FakeIOSApp.app');
                    context$4$0.next = 6;
                    return _regeneratorRuntime.awrap(_appiumSupport.fs.readFile(newAppPath, 'utf8'));

                  case 6:
                    contents = context$4$0.sent;

                    contents.should.eql('this is not really an app\n');

                  case 8:
                  case 'end':
                    return context$4$0.stop();
                }
              }, null, _this2);
            });
            it('should download an app file', function callee$3$0() {
              var newAppPath, contents;
              return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
                while (1) switch (context$4$0.prev = context$4$0.next) {
                  case 0:
                    context$4$0.next = 2;
                    return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp('http://localhost:8000/FakeIOSApp.app', '.app'));

                  case 2:
                    newAppPath = context$4$0.sent;

                    newAppPath.should.contain('.app');
                    context$4$0.next = 6;
                    return _regeneratorRuntime.awrap(_appiumSupport.fs.readFile(newAppPath, 'utf8'));

                  case 6:
                    contents = context$4$0.sent;

                    contents.should.eql('this is not really an app\n');

                  case 8:
                  case 'end':
                    return context$4$0.stop();
                }
              }, null, _this2);
            });
            it('should download an apk file', function callee$3$0() {
              var newAppPath, contents;
              return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
                while (1) switch (context$4$0.prev = context$4$0.next) {
                  case 0:
                    context$4$0.next = 2;
                    return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp('http://localhost:8000/FakeAndroidApp.apk', '.apk'));

                  case 2:
                    newAppPath = context$4$0.sent;

                    newAppPath.should.contain('.apk');
                    context$4$0.next = 6;
                    return _regeneratorRuntime.awrap(_appiumSupport.fs.readFile(newAppPath, 'utf8'));

                  case 6:
                    contents = context$4$0.sent;

                    contents.should.eql('this is not really an apk\n');

                  case 8:
                  case 'end':
                    return context$4$0.stop();
                }
              }, null, _this2);
            });
            it('should handle zip file that cannot be downloaded', function callee$3$0() {
              return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
                while (1) switch (context$4$0.prev = context$4$0.next) {
                  case 0:
                    context$4$0.next = 2;
                    return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp('http://localhost:8000/missing/FakeIOSApp.app.zip', '.app').should.be.rejectedWith(/Problem downloading app from url/));

                  case 2:
                  case 'end':
                    return context$4$0.stop();
                }
              }, null, _this2);
            });
            it('should recognize zip mime types and unzip the downloaded file', function callee$3$0() {
              var newAppPath, contents;
              return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
                while (1) switch (context$4$0.prev = context$4$0.next) {
                  case 0:
                    context$4$0.next = 2;
                    return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp('http://localhost:8000/FakeAndroidApp.asd?mime-zip', '.apk'));

                  case 2:
                    newAppPath = context$4$0.sent;

                    newAppPath.should.contain('FakeAndroidApp.apk');
                    newAppPath.should.not.contain('.asd');
                    context$4$0.next = 7;
                    return _regeneratorRuntime.awrap(_appiumSupport.fs.readFile(newAppPath, 'utf8'));

                  case 7:
                    contents = context$4$0.sent;

                    contents.should.eql('this is not really an apk\n');

                  case 9:
                  case 'end':
                    return context$4$0.stop();
                }
              }, null, _this2);
            });
            it('should treat an unknown mime type as an app', function callee$3$0() {
              var newAppPath, contents;
              return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
                while (1) switch (context$4$0.prev = context$4$0.next) {
                  case 0:
                    context$4$0.next = 2;
                    return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp('http://localhost:8000/FakeAndroidApp.apk?mime-bip', '.apk'));

                  case 2:
                    newAppPath = context$4$0.sent;

                    newAppPath.should.contain('.apk');
                    context$4$0.next = 6;
                    return _regeneratorRuntime.awrap(_appiumSupport.fs.readFile(newAppPath, 'utf8'));

                  case 6:
                    contents = context$4$0.sent;

                    contents.should.eql('this is not really an apk\n');

                  case 8:
                  case 'end':
                    return context$4$0.stop();
                }
              }, null, _this2);
            });
            it('should handle server not available', function callee$3$0() {
              return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
                while (1) switch (context$4$0.prev = context$4$0.next) {
                  case 0:
                    server.close();
                    context$4$0.next = 3;
                    return _regeneratorRuntime.awrap(_libBasedriverHelpers2['default'].configureApp('http://localhost:8000/FakeIOSApp.app.zip', '.app').should.be.rejectedWith(/ECONNREFUSED/));

                  case 3:
                  case 'end':
                    return context$4$0.stop();
                }
              }, null, _this2);
            });

          case 10:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });
});

// use a local server so there is no dependency on the internet
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvYmFzZWRyaXZlci9oZWxwZXJzLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztvQkFBaUIsTUFBTTs7OztvQkFDTixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7Ozs2QkFDMUIsZ0JBQWdCOztvQ0FDckIsOEJBQThCOzs7O29CQUMzQixNQUFNOzs7OzRCQUNFLGNBQWM7Ozs7MkJBQ2YsY0FBYzs7OztrQ0FDUCxxQkFBcUI7Ozs7QUFHcEQsa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDZCxrQkFBSyxHQUFHLDZCQUFnQixDQUFDOztBQUV6QixTQUFTLFVBQVUsQ0FBRSxJQUFJLEVBQUU7QUFDekIsU0FBTyxrQkFBSyxPQUFPLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQ2pELFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztDQUN2Qzs7QUFFRCxRQUFRLENBQUMsZ0NBQWdDLEVBQUUsWUFBTTtBQUMvQyxVQUFRLENBQUMsY0FBYyxFQUFFLFlBQU07QUFDN0IsTUFBRSxDQUFDLHNDQUFzQyxFQUFFO1VBQ3JDLFVBQVUsRUFFVixRQUFROzs7Ozs2Q0FGVyxrQ0FBRSxZQUFZLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsTUFBTSxDQUFDOzs7QUFBdkUsc0JBQVU7O0FBQ2Qsc0JBQVUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7OzZDQUN2QixrQkFBRyxRQUFRLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQzs7O0FBQWhELG9CQUFROztBQUNaLG9CQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDOzs7Ozs7O0tBQ3BELENBQUMsQ0FBQztBQUNILE1BQUUsQ0FBQyxzQ0FBc0MsRUFBRTtVQUNyQyxVQUFVLEVBRVYsUUFBUTs7Ozs7NkNBRlcsa0NBQUUsWUFBWSxDQUFDLFVBQVUsQ0FBQyxv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QixDQUFDLENBQUM7QUFDaEQsOEJBQVUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQzs7cURBQ2pCLGtCQUFHLFFBQVEsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDOzs7QUFBaEQsNEJBQVE7O0FBQ1osNEJBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDLENBQUM7Ozs7Ozs7YUFDcEQsQ0FBQyxDQUFDO0FBQ0gsY0FBRSxDQUFDLDZDQUE2QyxFQUFFO2tCQUM1QyxVQUFVLEVBRVYsUUFBUTs7Ozs7cURBRlcsa0NBQUUsWUFBWSxDQUFDLG1EQUFtRCxFQUFFLE1BQU0sQ0FBQzs7O0FBQTlGLDhCQUFVOztBQUNkLDhCQUFVLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQzs7cURBQ2Isa0JBQUcsUUFBUSxDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUM7OztBQUFoRCw0QkFBUTs7QUFDWiw0QkFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsNkJBQTZCLENBQUMsQ0FBQzs7Ozs7OzthQUNwRCxDQUFDLENBQUM7QUFDSCxjQUFFLENBQUMsb0NBQW9DLEVBQUU7Ozs7QUFDdkMsMEJBQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7cURBQ1Qsa0NBQUUsWUFBWSxDQUFDLDBDQUEwQyxFQUFFLE1BQU0sQ0FBQyxDQUNyRSxNQUFNLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxjQUFjLENBQUM7Ozs7Ozs7YUFDMUMsQ0FBQyxDQUFDOzs7Ozs7O0tBQ0osQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvYmFzZWRyaXZlci9oZWxwZXJzLWUyZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgeyBmcyB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcbmltcG9ydCBoIGZyb20gJy4uLy4uL2xpYi9iYXNlZHJpdmVyL2hlbHBlcnMnO1xuaW1wb3J0IGh0dHAgZnJvbSAnaHR0cCc7XG5pbXBvcnQgZmluYWxoYW5kbGVyIGZyb20gJ2ZpbmFsaGFuZGxlcic7XG5pbXBvcnQgc2VydmVTdGF0aWMgZnJvbSAnc2VydmUtc3RhdGljJztcbmltcG9ydCBjb250ZW50RGlzcG9zaXRpb24gZnJvbSAnY29udGVudC1kaXNwb3NpdGlvbic7XG5cblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZnVuY3Rpb24gZ2V0Rml4dHVyZSAoZmlsZSkge1xuICByZXR1cm4gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uJywgJy4uJywgJy4uJywgJ3Rlc3QnLCAnYmFzZWRyaXZlcicsXG4gICAgICAgICAgICAgICAgICAgICAgJ2ZpeHR1cmVzJywgZmlsZSk7XG59XG5cbmRlc2NyaWJlKCdhcHAgZG93bmxvYWQgYW5kIGNvbmZpZ3VyYXRpb24nLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdjb25maWd1cmVBcHAnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBnZXQgdGhlIHBhdGggZm9yIGEgbG9jYWwgLmFwcCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBuZXdBcHBQYXRoID0gYXdhaXQgaC5jb25maWd1cmVBcHAoZ2V0Rml4dHVyZSgnRmFrZUlPU0FwcC5hcHAnKSwgJy5hcHAnKTtcbiAgICAgIG5ld0FwcFBhdGguc2hvdWxkLmNvbnRhaW4oJ0Zha2VJT1NBcHAuYXBwJyk7XG4gICAgICBsZXQgY29udGVudHMgPSBhd2FpdCBmcy5yZWFkRmlsZShuZXdBcHBQYXRoLCAndXRmOCcpO1xuICAgICAgY29udGVudHMuc2hvdWxkLmVxbCgndGhpcyBpcyBub3QgcmVhbGx5IGFuIGFwcFxcbicpO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgZ2V0IHRoZSBwYXRoIGZvciBhIGxvY2FsIC5hcGsnLCBhc3luYyAoKSA9PiB7XG4gICAgICBsZXQgbmV3QXBwUGF0aCA9IGF3YWl0IGguY29uZmlndXJlQXBwKGdldEZpeHR1cmUoJ0Zha2VBbmRyb2lkQXBwLmFwaycpLCAnLmFwaycpO1xuICAgICAgbmV3QXBwUGF0aC5zaG91bGQuY29udGFpbignRmFrZUFuZHJvaWRBcHAuYXBrJyk7XG4gICAgICBsZXQgY29udGVudHMgPSBhd2FpdCBmcy5yZWFkRmlsZShuZXdBcHBQYXRoLCAndXRmOCcpO1xuICAgICAgY29udGVudHMuc2hvdWxkLmVxbCgndGhpcyBpcyBub3QgcmVhbGx5IGFuIGFwa1xcbicpO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgdW56aXAgYW5kIGdldCB0aGUgcGF0aCBmb3IgYSBsb2NhbCAuYXBwLnppcCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBuZXdBcHBQYXRoID0gYXdhaXQgaC5jb25maWd1cmVBcHAoZ2V0Rml4dHVyZSgnRmFrZUlPU0FwcC5hcHAuemlwJyksICcuYXBwJyk7XG4gICAgICBuZXdBcHBQYXRoLnNob3VsZC5jb250YWluKCdGYWtlSU9TQXBwLmFwcCcpO1xuICAgICAgbGV0IGNvbnRlbnRzID0gYXdhaXQgZnMucmVhZEZpbGUobmV3QXBwUGF0aCwgJ3V0ZjgnKTtcbiAgICAgIGNvbnRlbnRzLnNob3VsZC5lcWwoJ3RoaXMgaXMgbm90IHJlYWxseSBhbiBhcHBcXG4nKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHVuemlwIGFuZCBnZXQgdGhlIHBhdGggZm9yIGEgbG9jYWwgLmlwYScsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBuZXdBcHBQYXRoID0gYXdhaXQgaC5jb25maWd1cmVBcHAoZ2V0Rml4dHVyZSgnRmFrZUlPU0FwcC5pcGEnKSwgJy5hcHAnKTtcbiAgICAgIG5ld0FwcFBhdGguc2hvdWxkLmNvbnRhaW4oJ0Zha2VJT1NBcHAuYXBwJyk7XG4gICAgICBsZXQgY29udGVudHMgPSBhd2FpdCBmcy5yZWFkRmlsZShuZXdBcHBQYXRoLCAndXRmOCcpO1xuICAgICAgY29udGVudHMuc2hvdWxkLmVxbCgndGhpcyBpcyBub3QgcmVhbGx5IGFuIGFwcFxcbicpO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgZmFpbCBmb3IgYSBiYWQgemlwIGZpbGUnLCBhc3luYyAoKSA9PiB7XG4gICAgICBhd2FpdCBoLmNvbmZpZ3VyZUFwcChnZXRGaXh0dXJlKCdCYWRaaXBwZWRBcHAuemlwJyksICcuYXBwJylcbiAgICAgICAgLnNob3VsZC5iZS5yZWplY3RlZFdpdGgoJ0Vycm9yIHRlc3RpbmcgemlwIGFyY2hpdmUsIGFyZSB5b3Ugc3VyZSB0aGlzIGlzIGEgemlwIGZpbGU/Jyk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBmYWlsIGlmIGV4dGVuc2lvbnMgZG8gbm90IG1hdGNoJywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgaC5jb25maWd1cmVBcHAoZ2V0Rml4dHVyZSgnRmFrZUlPU0FwcC5hcHAnKSwgJy53cm9uZycpXG4gICAgICAgIC5zaG91bGQuYmUucmVqZWN0ZWRXaXRoKC9kaWQgbm90IGhhdmUgZXh0ZW5zaW9uIC53cm9uZy8pO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgZmFpbCBpZiB6aXAgZmlsZSBkb2VzIG5vdCBjb250YWluIGFuIGFwcCB3aG9zZSBleHRlbnNpb24gbWF0Y2hlcycsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGguY29uZmlndXJlQXBwKGdldEZpeHR1cmUoJ0Zha2VJT1NBcHAuYXBwLnppcCcpLCAnLndyb25nJylcbiAgICAgICAgLnNob3VsZC5iZS5yZWplY3RlZFdpdGgoL2NvdWxkIG5vdCBmaW5kIGEgLndyb25nIGJ1bmRsZSBpbiBpdC8pO1xuICAgIH0pO1xuICAgIGRlc2NyaWJlKCdzaG91bGQgZG93bmxvYWQgYW4gYXBwIGZyb20gdGhlIHdlYicsIGFzeW5jICgpID0+IHtcbiAgICAgIC8vIHVzZSBhIGxvY2FsIHNlcnZlciBzbyB0aGVyZSBpcyBubyBkZXBlbmRlbmN5IG9uIHRoZSBpbnRlcm5ldFxuICAgICAgbGV0IHNlcnZlcjtcbiAgICAgIGJlZm9yZSgoKSA9PiB7XG4gICAgICAgIGxldCBkaXIgPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAnLi4nLCAnLi4nLCAndGVzdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Jhc2Vkcml2ZXInLCAnZml4dHVyZXMnKTtcbiAgICAgICAgbGV0IHNlcnZlID0gc2VydmVTdGF0aWMoZGlyLCB7XG4gICAgICAgICAgaW5kZXg6IGZhbHNlLFxuICAgICAgICAgIHNldEhlYWRlcnM6IChyZXMsIHBhdGgpID0+IHtcbiAgICAgICAgICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtRGlzcG9zaXRpb24nLCBjb250ZW50RGlzcG9zaXRpb24ocGF0aCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gICAgICAgICAgaWYgKHJlcS51cmwuaW5kZXhPZignbWlzc2luZycpICE9PSAtMSkge1xuICAgICAgICAgICAgcmVzLndyaXRlSGVhZCg0MDQpO1xuICAgICAgICAgICAgcmVzLmVuZCgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBmb3IgdGVzdGluZyB6aXAgZmlsZSBjb250ZW50IHR5cGVzXG4gICAgICAgICAgaWYgKHJlcS51cmwuaW5kZXhPZignbWltZS16aXAnKSAhPT0gLTEpIHtcbiAgICAgICAgICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi96aXAnKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHJlcS51cmwuaW5kZXhPZignbWltZS1iaXAnKSAhPT0gMSkge1xuICAgICAgICAgICAgcmVzLnNldEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2JpcCcpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzZXJ2ZShyZXEsIHJlcywgZmluYWxoYW5kbGVyKHJlcSwgcmVzKSk7XG4gICAgICAgIH0pO1xuICAgICAgICBzZXJ2ZXIubGlzdGVuKDgwMDApO1xuICAgICAgfSk7XG4gICAgICBhZnRlcigoKSA9PiB7XG4gICAgICAgIHNlcnZlci5jbG9zZSgpO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdzaG91bGQgZG93bmxvYWQgemlwIGZpbGUnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBuZXdBcHBQYXRoID0gYXdhaXQgaC5jb25maWd1cmVBcHAoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9GYWtlSU9TQXBwLmFwcC56aXAnLCAnLmFwcCcpO1xuICAgICAgICBuZXdBcHBQYXRoLnNob3VsZC5jb250YWluKCdGYWtlSU9TQXBwLmFwcCcpO1xuICAgICAgICBsZXQgY29udGVudHMgPSBhd2FpdCBmcy5yZWFkRmlsZShuZXdBcHBQYXRoLCAndXRmOCcpO1xuICAgICAgICBjb250ZW50cy5zaG91bGQuZXFsKCd0aGlzIGlzIG5vdCByZWFsbHkgYW4gYXBwXFxuJyk7XG4gICAgICB9KTtcbiAgICAgIGl0KCdzaG91bGQgZG93bmxvYWQgYW4gYXBwIGZpbGUnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBuZXdBcHBQYXRoID0gYXdhaXQgaC5jb25maWd1cmVBcHAoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9GYWtlSU9TQXBwLmFwcCcsICcuYXBwJyk7XG4gICAgICAgIG5ld0FwcFBhdGguc2hvdWxkLmNvbnRhaW4oJy5hcHAnKTtcbiAgICAgICAgbGV0IGNvbnRlbnRzID0gYXdhaXQgZnMucmVhZEZpbGUobmV3QXBwUGF0aCwgJ3V0ZjgnKTtcbiAgICAgICAgY29udGVudHMuc2hvdWxkLmVxbCgndGhpcyBpcyBub3QgcmVhbGx5IGFuIGFwcFxcbicpO1xuICAgICAgfSk7XG4gICAgICBpdCgnc2hvdWxkIGRvd25sb2FkIGFuIGFwayBmaWxlJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBsZXQgbmV3QXBwUGF0aCA9IGF3YWl0IGguY29uZmlndXJlQXBwKCdodHRwOi8vbG9jYWxob3N0OjgwMDAvRmFrZUFuZHJvaWRBcHAuYXBrJywgJy5hcGsnKTtcbiAgICAgICAgbmV3QXBwUGF0aC5zaG91bGQuY29udGFpbignLmFwaycpO1xuICAgICAgICBsZXQgY29udGVudHMgPSBhd2FpdCBmcy5yZWFkRmlsZShuZXdBcHBQYXRoLCAndXRmOCcpO1xuICAgICAgICBjb250ZW50cy5zaG91bGQuZXFsKCd0aGlzIGlzIG5vdCByZWFsbHkgYW4gYXBrXFxuJyk7XG4gICAgICB9KTtcbiAgICAgIGl0KCdzaG91bGQgaGFuZGxlIHppcCBmaWxlIHRoYXQgY2Fubm90IGJlIGRvd25sb2FkZWQnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGF3YWl0IGguY29uZmlndXJlQXBwKCdodHRwOi8vbG9jYWxob3N0OjgwMDAvbWlzc2luZy9GYWtlSU9TQXBwLmFwcC56aXAnLCAnLmFwcCcpXG4gICAgICAgICAgLnNob3VsZC5iZS5yZWplY3RlZFdpdGgoL1Byb2JsZW0gZG93bmxvYWRpbmcgYXBwIGZyb20gdXJsLyk7XG4gICAgICB9KTtcbiAgICAgIGl0KCdzaG91bGQgcmVjb2duaXplIHppcCBtaW1lIHR5cGVzIGFuZCB1bnppcCB0aGUgZG93bmxvYWRlZCBmaWxlJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBsZXQgbmV3QXBwUGF0aCA9IGF3YWl0IGguY29uZmlndXJlQXBwKCdodHRwOi8vbG9jYWxob3N0OjgwMDAvRmFrZUFuZHJvaWRBcHAuYXNkP21pbWUtemlwJywgJy5hcGsnKTtcbiAgICAgICAgbmV3QXBwUGF0aC5zaG91bGQuY29udGFpbignRmFrZUFuZHJvaWRBcHAuYXBrJyk7XG4gICAgICAgIG5ld0FwcFBhdGguc2hvdWxkLm5vdC5jb250YWluKCcuYXNkJyk7XG4gICAgICAgIGxldCBjb250ZW50cyA9IGF3YWl0IGZzLnJlYWRGaWxlKG5ld0FwcFBhdGgsICd1dGY4Jyk7XG4gICAgICAgIGNvbnRlbnRzLnNob3VsZC5lcWwoJ3RoaXMgaXMgbm90IHJlYWxseSBhbiBhcGtcXG4nKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCB0cmVhdCBhbiB1bmtub3duIG1pbWUgdHlwZSBhcyBhbiBhcHAnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBuZXdBcHBQYXRoID0gYXdhaXQgaC5jb25maWd1cmVBcHAoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9GYWtlQW5kcm9pZEFwcC5hcGs/bWltZS1iaXAnLCAnLmFwaycpO1xuICAgICAgICBuZXdBcHBQYXRoLnNob3VsZC5jb250YWluKCcuYXBrJyk7XG4gICAgICAgIGxldCBjb250ZW50cyA9IGF3YWl0IGZzLnJlYWRGaWxlKG5ld0FwcFBhdGgsICd1dGY4Jyk7XG4gICAgICAgIGNvbnRlbnRzLnNob3VsZC5lcWwoJ3RoaXMgaXMgbm90IHJlYWxseSBhbiBhcGtcXG4nKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBoYW5kbGUgc2VydmVyIG5vdCBhdmFpbGFibGUnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIHNlcnZlci5jbG9zZSgpO1xuICAgICAgICBhd2FpdCBoLmNvbmZpZ3VyZUFwcCgnaHR0cDovL2xvY2FsaG9zdDo4MDAwL0Zha2VJT1NBcHAuYXBwLnppcCcsICcuYXBwJylcbiAgICAgICAgICAuc2hvdWxkLmJlLnJlamVjdGVkV2l0aCgvRUNPTk5SRUZVU0VELyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
