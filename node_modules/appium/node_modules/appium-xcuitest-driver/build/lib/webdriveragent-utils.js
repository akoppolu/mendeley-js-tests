'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumSupport = require('appium-support');

var _teen_process = require('teen_process');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var WDA_RUNNER_BUNDLE_ID = 'com.facebook.WebDriverAgentRunner';
var PROJECT_FILE = 'project.pbxproj';
var XCUICOORDINATE_FILE = 'PrivateHeaders/XCTest/XCUICoordinate.h';

function replaceInFile(file, find, replace) {
  var contents, newContents;
  return _regeneratorRuntime.async(function replaceInFile$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.readFile(file, 'utf-8'));

      case 2:
        contents = context$1$0.sent;
        newContents = contents.replace(find, replace);

        if (!(newContents !== contents)) {
          context$1$0.next = 7;
          break;
        }

        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.writeFile(file, newContents, 'utf-8'));

      case 7:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function updateProjectFile(agentPath, newBundleId) {
  var projectFilePath;
  return _regeneratorRuntime.async(function updateProjectFile$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        projectFilePath = agentPath + '/' + PROJECT_FILE;
        context$1$0.prev = 1;
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.copyFile(projectFilePath, projectFilePath + '.old'));

      case 4:
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(replaceInFile(projectFilePath, new RegExp(WDA_RUNNER_BUNDLE_ID.replace('.', '\.'), 'g'), newBundleId));

      case 6:
        // jshint ignore:line
        _logger2['default'].debug('Successfully updated \'' + projectFilePath + '\' with bundle id \'' + newBundleId + '\'');
        context$1$0.next = 13;
        break;

      case 9:
        context$1$0.prev = 9;
        context$1$0.t0 = context$1$0['catch'](1);

        _logger2['default'].debug('Error updating project file: ' + context$1$0.t0.message);
        _logger2['default'].warn('Unable to update project file \'' + projectFilePath + '\' with ' + ('bundle id \'' + newBundleId + '\'. WebDriverAgent may not start'));

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[1, 9]]);
}

function resetProjectFile(agentPath, newBundleId) {
  var projectFilePath;
  return _regeneratorRuntime.async(function resetProjectFile$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        projectFilePath = agentPath + '/' + PROJECT_FILE;
        context$1$0.prev = 1;
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(replaceInFile(projectFilePath, new RegExp(newBundleId.replace('.', '\.'), 'g'), WDA_RUNNER_BUNDLE_ID));

      case 4:
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.unlink(projectFilePath + '.old'));

      case 6:
        _logger2['default'].debug('Successfully reset \'' + projectFilePath + '\' with bundle id \'' + WDA_RUNNER_BUNDLE_ID + '\'');
        context$1$0.next = 13;
        break;

      case 9:
        context$1$0.prev = 9;
        context$1$0.t0 = context$1$0['catch'](1);

        _logger2['default'].debug('Error resetting project file: ' + context$1$0.t0.message);
        _logger2['default'].warn('Unable to reset project file \'' + projectFilePath + '\' with ' + ('bundle id \'' + WDA_RUNNER_BUNDLE_ID + '\'. WebDriverAgent has been ') + 'modified and not returned to the original state.');

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[1, 9]]);
}

function checkForDependencies(bootstrapPath) {
  var useSsl = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

  var carthagePath, args, _arr, _i, std, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, line;

  return _regeneratorRuntime.async(function checkForDependencies$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.which('carthage'));

      case 3:
        carthagePath = context$1$0.sent;

        _logger2['default'].debug('Carthage found: \'' + carthagePath + '\'');
        context$1$0.next = 10;
        break;

      case 7:
        context$1$0.prev = 7;
        context$1$0.t0 = context$1$0['catch'](0);

        _logger2['default'].warn('Carthage not found. Install using `brew install carthage`');

      case 10:
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.hasAccess(bootstrapPath + '/Carthage'));

      case 12:
        if (context$1$0.sent) {
          context$1$0.next = 59;
          break;
        }

        _logger2['default'].debug('Running WebDriverAgent bootstrap script to install dependencies');
        context$1$0.prev = 14;
        args = useSsl ? ['-d', '-D'] : ['-d'];
        context$1$0.next = 18;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('Scripts/bootstrap.sh', args, { cwd: bootstrapPath }));

      case 18:
        context$1$0.next = 59;
        break;

      case 20:
        context$1$0.prev = 20;
        context$1$0.t1 = context$1$0['catch'](14);
        _arr = ['stdout', 'stderr'];
        _i = 0;

      case 24:
        if (!(_i < _arr.length)) {
          context$1$0.next = 56;
          break;
        }

        std = _arr[_i];
        _iteratorNormalCompletion = true;
        _didIteratorError = false;
        _iteratorError = undefined;
        context$1$0.prev = 29;
        _iterator = _getIterator((context$1$0.t1[std] || '').split('\n'));

      case 31:
        if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
          context$1$0.next = 39;
          break;
        }

        line = _step.value;

        if (line.length) {
          context$1$0.next = 35;
          break;
        }

        return context$1$0.abrupt('continue', 36);

      case 35:
        _logger2['default'].error(line);

      case 36:
        _iteratorNormalCompletion = true;
        context$1$0.next = 31;
        break;

      case 39:
        context$1$0.next = 45;
        break;

      case 41:
        context$1$0.prev = 41;
        context$1$0.t2 = context$1$0['catch'](29);
        _didIteratorError = true;
        _iteratorError = context$1$0.t2;

      case 45:
        context$1$0.prev = 45;
        context$1$0.prev = 46;

        if (!_iteratorNormalCompletion && _iterator['return']) {
          _iterator['return']();
        }

      case 48:
        context$1$0.prev = 48;

        if (!_didIteratorError) {
          context$1$0.next = 51;
          break;
        }

        throw _iteratorError;

      case 51:
        return context$1$0.finish(48);

      case 52:
        return context$1$0.finish(45);

      case 53:
        _i++;
        context$1$0.next = 24;
        break;

      case 56:
        context$1$0.next = 58;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.rimraf(bootstrapPath + '/Carthage'));

      case 58:
        throw context$1$0.t1;

      case 59:
        context$1$0.next = 61;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.hasAccess(bootstrapPath + '/Resources'));

      case 61:
        if (context$1$0.sent) {
          context$1$0.next = 65;
          break;
        }

        _logger2['default'].debug('Creating WebDriverAgent resources directory');
        context$1$0.next = 65;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.mkdir(bootstrapPath + '/Resources'));

      case 65:
        context$1$0.next = 67;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.hasAccess(bootstrapPath + '/Resources/WebDriverAgent.bundle'));

      case 67:
        if (context$1$0.sent) {
          context$1$0.next = 71;
          break;
        }

        _logger2['default'].debug('Creating WebDriverAgent resource bundle directory');
        context$1$0.next = 71;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.mkdir(bootstrapPath + '/Resources/WebDriverAgent.bundle'));

      case 71:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 7], [14, 20], [29, 41, 45, 53], [46,, 48, 52]]);
}

function setRealDeviceSecurity(keychainPath, keychainPassword) {
  return _regeneratorRuntime.async(function setRealDeviceSecurity$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].debug('Setting security for iOS device');
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('security', ['-v', 'list-keychains', '-s', keychainPath]));

      case 3:
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('security', ['-v', 'unlock-keychain', '-p', keychainPassword, keychainPath]));

      case 5:
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('security', ['set-keychain-settings', '-t', '3600', '-l', keychainPath]));

      case 7:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function fixXCUICoordinateFile(bootstrapPath) {
  var initial = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

  var file, oldDef, newDef, _ref;

  return _regeneratorRuntime.async(function fixXCUICoordinateFile$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        file = _path2['default'].resolve(bootstrapPath, XCUICOORDINATE_FILE);
        oldDef = '- (void)pressForDuration:(double)arg1 thenDragToCoordinate:(id)arg2;';
        newDef = '- (void)pressForDuration:(NSTimeInterval)duration thenDragToCoordinate:(XCUICoordinate *)otherCoordinate;';

        if (!initial) {
          _ref = [newDef, oldDef];
          oldDef = _ref[0];
          newDef = _ref[1];
        }
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(replaceInFile(file, oldDef, newDef));

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function fixForXcode7(bootstrapPath) {
  var initial = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
  return _regeneratorRuntime.async(function fixForXcode7$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(fixXCUICoordinateFile(bootstrapPath, initial));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

exports.updateProjectFile = updateProjectFile;
exports.resetProjectFile = resetProjectFile;
exports.checkForDependencies = checkForDependencies;
exports.setRealDeviceSecurity = setRealDeviceSecurity;
exports.fixForXcode7 = fixForXcode7;

// backup the file, and then update the bundle id for the runner
// jshint ignore:line

// print out the stdout and stderr reports

// remove the carthage directory, or else subsequent runs will see it and
// assume the dependencies are already downloaded

// the way the updated XCTest headers are in the WDA project, building in
// Xcode 8.0 causes a duplicate declaration of method
// so fix the offending line in the local headers
//# sourceMappingURL=data:application/json;charset=utf8;base64,
