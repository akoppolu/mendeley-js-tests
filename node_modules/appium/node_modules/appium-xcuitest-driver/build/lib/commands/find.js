'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumBaseDriver = require('appium-base-driver');

var _appiumSupport = require('appium-support');

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var helpers = {},
    commands = {},
    extensions = {};

helpers.findElOrEls = function callee$0$0(strategy, selector, mult, context) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!this.isWebview()) {
          context$1$0.next = 6;
          break;
        }

        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.findWebElementOrElements(strategy, selector, mult, context));

      case 3:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 6:
        context$1$0.next = 8;
        return _regeneratorRuntime.awrap(this.findNativeElementOrElements(strategy, selector, mult, context));

      case 8:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 9:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.findNativeElementOrElements = function callee$0$0(strategy, selector, mult, context) {
  var initSelector, rewroteSelector, stripViewFromSelector, endpoint, body, method, els;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    var _this = this;

    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        stripViewFromSelector = function stripViewFromSelector(selector) {
          // Don't strip it out if it's one of these 4 element types
          // (see https://github.com/facebook/WebDriverAgent/blob/master/WebDriverAgentLib/Utilities/FBElementTypeTransformer.m for reference)
          var keepView = ['XCUIElementTypeScrollView', 'XCUIElementTypeCollectionView', 'XCUIElementTypeTextView', 'XCUIElementTypeWebView'].indexOf(selector) >= 0;

          if (!keepView && selector.indexOf('View') === selector.length - 4) {
            return selector.substr(0, selector.length - 4);
          } else {
            return selector;
          }
        };

        initSelector = selector;
        rewroteSelector = false;

        if (strategy === '-ios predicate string') {
          // WebDriverAgent uses 'predicate string'
          strategy = 'predicate string';
        } else if (strategy === '-ios class chain') {
          // WebDriverAgent uses 'class chain'
          strategy = 'class chain';
        }

        // Check if the word 'View' is appended to selector and if it is, strip it out

        if (strategy === 'class name') {
          // XCUITest classes have `XCUIElementType` prepended
          // first check if there is the old `UIA` prefix
          if (selector.indexOf('UIA') === 0) {
            selector = selector.substring(3);
          }
          // now check if we need to add `XCUIElementType`
          if (selector.indexOf('XCUIElementType') !== 0) {
            selector = stripViewFromSelector('XCUIElementType' + selector);
            rewroteSelector = true;
          }
        }

        if (strategy === 'xpath') {
          // Replace UIA if it comes after a forward slash or is at the beginning of the string
          selector = selector.replace(/(^|\/)(UIA)([^\[\/]+)/g, function (str, g1, g2, g3) {
            rewroteSelector = true;
            return g1 + stripViewFromSelector('XCUIElementType' + g3);
          });
        }

        if (rewroteSelector) {
          _logger2['default'].info('Rewrote incoming selector from \'' + initSelector + '\' to ' + ('\'' + selector + '\' to match XCUI type. You should consider ') + 'updating your tests to use the new selectors directly');
        }

        context = _appiumSupport.util.unwrapElement(context);

        endpoint = undefined;

        /* jshint ignore:start */
        endpoint = '/element' + (context ? '/' + context + '/element' : '') + (mult ? 's' : '');
        /* jshint ignore:end */

        body = {
          using: strategy,
          value: selector
        };
        method = 'POST';
        els = undefined;
        context$1$0.prev = 13;
        context$1$0.next = 16;
        return _regeneratorRuntime.awrap(this.implicitWaitForCondition(function callee$1$0() {
          return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                context$2$0.prev = 0;
                context$2$0.next = 3;
                return _regeneratorRuntime.awrap(this.proxyCommand(endpoint, method, body));

              case 3:
                els = context$2$0.sent;

                if (!mult) {
                  context$2$0.next = 8;
                  break;
                }

                return context$2$0.abrupt('return', els && els.length);

              case 8:
                return context$2$0.abrupt('return', !els.status || els.status === 0);

              case 9:
                context$2$0.next = 15;
                break;

              case 11:
                context$2$0.prev = 11;
                context$2$0.t0 = context$2$0['catch'](0);

                els = undefined;
                return context$2$0.abrupt('return', false);

              case 15:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this, [[0, 11]]);
        }));

      case 16:
        context$1$0.next = 25;
        break;

      case 18:
        context$1$0.prev = 18;
        context$1$0.t0 = context$1$0['catch'](13);

        if (!(context$1$0.t0.message && context$1$0.t0.message.match(/Condition unmet/))) {
          context$1$0.next = 24;
          break;
        }

        // condition was not met setting res to empty array
        els = [];
        context$1$0.next = 25;
        break;

      case 24:
        throw context$1$0.t0;

      case 25:
        if (!mult) {
          context$1$0.next = 29;
          break;
        }

        return context$1$0.abrupt('return', els);

      case 29:
        if (!(!els || _lodash2['default'].size(els) === 0)) {
          context$1$0.next = 31;
          break;
        }

        throw new _appiumBaseDriver.errors.NoSuchElementError();

      case 31:
        return context$1$0.abrupt('return', els);

      case 32:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[13, 18]]);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;
// jshint ignore:line

// we succeed if we get some elements

// we may not get any status, which means success
//# sourceMappingURL=data:application/json;charset=utf8;base64,
